function asmFunc(global, env, buffer) {
 "almost asm";
 var HEAP8 = new global.Int8Array(buffer);
 var HEAP16 = new global.Int16Array(buffer);
 var HEAP32 = new global.Int32Array(buffer);
 var HEAPU8 = new global.Uint8Array(buffer);
 var HEAPU16 = new global.Uint16Array(buffer);
 var HEAPU32 = new global.Uint32Array(buffer);
 var HEAPF32 = new global.Float32Array(buffer);
 var HEAPF64 = new global.Float64Array(buffer);
 var Math_imul = global.Math.imul;
 var Math_fround = global.Math.fround;
 var Math_abs = global.Math.abs;
 var Math_clz32 = global.Math.clz32;
 var Math_min = global.Math.min;
 var Math_max = global.Math.max;
 var Math_floor = global.Math.floor;
 var Math_ceil = global.Math.ceil;
 var Math_sqrt = global.Math.sqrt;
 var abort = env.abort;
 var nan = global.NaN;
 var infinity = global.Infinity;
 var global$0 = 1048576;
 var i64toi32_i32$HIGH_BITS = 0;
 function _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Leaf$GT$$GT$__deallocate_and_ascend__h9151da6af63a93f7($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2 = 0, i64toi32_i32$4 = 0, $4 = 0, $6 = 0, i64toi32_i32$3 = 0, $5 = 0, $6$hi = 0, $3 = 0, $16 = 0, $28 = 0, $30$hi = 0, $32$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  $4 = HEAPU32[$1 >> 2] | 0;
  label$1 : {
   label$2 : {
    $5 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    $1 = HEAPU32[$5 >> 2] | 0;
    if (($1 | 0) == (0 | 0)) break label$2;
    i64toi32_i32$2 = $5;
    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0;
    i64toi32_i32$1 = 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    $6 = i64toi32_i32$0;
    $6$hi = i64toi32_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    $4 = $4 + 1 | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $28 = $2;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$2 = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     $16 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
     $16 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
    }
    $30$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    $32$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $30$hi;
    i64toi32_i32$1 = $16;
    i64toi32_i32$2 = $32$hi;
    i64toi32_i32$3 = $3;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    i64toi32_i32$2 = i64toi32_i32$2;
    $6 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
    $6$hi = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$2;
    i64toi32_i32$1 = $28;
    i64toi32_i32$2 = i64toi32_i32$2;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $6;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$2;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    break label$1;
   };
   i64toi32_i32$2 = 0;
   i64toi32_i32$2 = i64toi32_i32$2;
   $6 = $3;
   $6$hi = i64toi32_i32$2;
   $1 = 0;
  };
  __rust_dealloc($5 | 0, 140 | 0, 4 | 0);
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$1 = $0;
  i64toi32_i32$2 = i64toi32_i32$2;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$2;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$GT$__deallocate_and_ascend__hc26bb7d2bd4949b9($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2 = 0, i64toi32_i32$4 = 0, $4 = 0, $6 = 0, i64toi32_i32$3 = 0, $5 = 0, $6$hi = 0, $3 = 0, $16 = 0, $28 = 0, $30$hi = 0, $32$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  $4 = HEAPU32[$1 >> 2] | 0;
  label$1 : {
   label$2 : {
    $5 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    $1 = HEAPU32[$5 >> 2] | 0;
    if (($1 | 0) == (0 | 0)) break label$2;
    i64toi32_i32$2 = $5;
    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0;
    i64toi32_i32$1 = 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    $6 = i64toi32_i32$0;
    $6$hi = i64toi32_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    $4 = $4 + 1 | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $28 = $2;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$2 = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     $16 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
     $16 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
    }
    $30$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    $32$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $30$hi;
    i64toi32_i32$1 = $16;
    i64toi32_i32$2 = $32$hi;
    i64toi32_i32$3 = $3;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    i64toi32_i32$2 = i64toi32_i32$2;
    $6 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
    $6$hi = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$2;
    i64toi32_i32$1 = $28;
    i64toi32_i32$2 = i64toi32_i32$2;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $6;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$2;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    break label$1;
   };
   i64toi32_i32$2 = 0;
   i64toi32_i32$2 = i64toi32_i32$2;
   $6 = $3;
   $6$hi = i64toi32_i32$2;
   $1 = 0;
  };
  __rust_dealloc($5 | 0, 188 | 0, 4 | 0);
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$1 = $0;
  i64toi32_i32$2 = i64toi32_i32$2;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$2;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$GT$__push_front__hfed4dcb410b2b1a3($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, $6 = 0, i64toi32_i32$1 = 0, $5 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $4 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
  memmove($4 + 20 | 0 | 0, $4 + 8 | 0 | 0, Math_imul(HEAPU16[($4 + 6 | 0) >> 1] | 0, 12) | 0) | 0;
  wasm2js_i32$0 = $4 + 16 | 0;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $4 = 144;
  $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
  memmove($1 + 144 | 0 | 0, $1 + 140 | 0 | 0, ((HEAPU16[($1 + 6 | 0) >> 1] | 0) << 2 | 0) + 4 | 0 | 0) | 0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 140 | 0) >> 2] = wasm2js_i32$1;
  $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = (HEAPU16[($1 + 6 | 0) >> 1] | 0) + 1 | 0;
  HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
  $2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
  $5 = HEAPU16[($2 + 6 | 0) >> 1] | 0;
  $1 = 0;
  $6 = HEAPU32[($2 + 140 | 0) >> 2] | 0;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = 0;
  HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = $2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   if (($5 | 0) == (0 | 0)) break label$1;
   label$2 : do {
    $2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
    $6 = HEAPU32[($2 + $4 | 0) >> 2] | 0;
    $1 = $1 + 1 | 0;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = $1;
    HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = $2;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $4 = $4 + 4 | 0;
    if (($5 | 0) != ($1 | 0)) continue label$2;
    break label$2;
   } while (1);
  };
 }
 
 function _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__LeafOrInternal$GT$$GT$__pop_front__h93c3e6481edded41($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, i64toi32_i32$1 = 0, $2 = 0, i64toi32_i32$0 = 0, $6 = 0, $4 = 0, $7 = 0, $9 = 0, $8 = 0, $5 = 0, $26 = 0, $10 = 0, $71 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  $4 = HEAPU16[($3 + 6 | 0) >> 1] | 0;
  $5 = $2 + 8 | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $26 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $26;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  memmove($3 + 8 | 0 | 0, $3 + 20 | 0 | 0, Math_imul($4, 12) + 4294967284 | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    $6 = HEAPU32[$1 >> 2] | 0;
    if (($6 | 0) == (0 | 0)) break label$2;
    $7 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    $8 = HEAPU32[($7 + 140 | 0) >> 2] | 0;
    $3 = $7 + 140 | 0;
    memmove($3 | 0, $7 + 144 | 0 | 0, $4 << 2 | 0 | 0) | 0;
    $9 = 0;
    wasm2js_i32$0 = $8;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $10 = $6 + 4294967295 | 0;
    if (($4 | 0) == (0 | 0)) break label$1;
    label$3 : do {
     $6 = HEAPU32[$3 >> 2] | 0;
     wasm2js_i32$0 = $6;
     wasm2js_i32$1 = $9;
     HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
     wasm2js_i32$0 = $6;
     wasm2js_i32$1 = $7;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $3 = $3 + 4 | 0;
     $9 = $9 + 1 | 0;
     if (($4 | 0) != ($9 | 0)) continue label$3;
     break label$1;
     break label$3;
    } while (1);
   };
   $8 = 0;
  };
  i64toi32_i32$1 = HEAPU32[$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $71 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $71;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $8;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1 + 16 | 0;
  wasm2js_i32$1 = $10;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = (HEAPU16[($3 + 6 | 0) >> 1] | 0) + 4294967295 | 0;
  HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Leaf$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__split__hceae715525d82d88($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $3 = 0, $8 = 0, $2 = 0, $6 = 0, $7 = 0, $5 = 0, $4 = 0, $40 = 0, $43 = 0, $60 = 0, $70 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 144 | 0;
  global$0 = $2;
  label$1 : {
   $3 = __rust_alloc(140 | 0, 4 | 0) | 0;
   if (($3 | 0) == (0 | 0)) break label$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $4 = memcpy($3 + 8 | 0 | 0, $2 + 8 | 0 | 0, 132 | 0) | 0;
   $5 = ($2 + 8 | 0) + 8 | 0;
   $6 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
   $7 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
   $8 = $6 + Math_imul($7, 12) | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = HEAPU32[($8 + 16 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $8 + 8 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $40 = i64toi32_i32$0;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $40;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $43 = $8 + 20 | 0;
   $8 = (HEAPU16[($6 + 6 | 0) >> 1] | 0) + ($7 ^ 4294967295 | 0) | 0;
   memcpy($4 | 0, $43 | 0, Math_imul($8, 12) | 0) | 0;
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = $7;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 28 | 0;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $60 = i64toi32_i32$1;
   i64toi32_i32$1 = $0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $60;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = $8;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $70 = i64toi32_i32$0;
   i64toi32_i32$0 = $0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $70;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 16 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 17 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 18 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 19 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$0 + 20 | 0;
   wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = i64toi32_i32$2 + 144 | 0;
   return;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618(140 | 0, 4 | 0);
  abort();
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Leaf$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert__h30350e746b7d0b66($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, $4 = 0, $8 = 0, $6 = 0, $7 = 0, $9 = 0, $42 = 0, $52 = 0, $73 = 0, $92 = 0, $114 = 0, $136 = 0, $151 = 0, $174 = 0, $192 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 64 | 0;
  global$0 = $3;
  label$1 : {
   label$2 : {
    $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    $5 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
    if ($5 >>> 0 > 10 >>> 0) break label$2;
    $6 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
    $7 = $4 + Math_imul($6, 12) | 0;
    $8 = $7 + 8 | 0;
    memmove($7 + 20 | 0 | 0, $8 | 0, Math_imul($5 - $6 | 0, 12) | 0) | 0;
    wasm2js_i32$0 = $7 + 16 | 0;
    wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $42 = i64toi32_i32$0;
    i64toi32_i32$0 = $8;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $42;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $0 + 16 | 0;
    wasm2js_i32$1 = $6;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $4 + 140 | 0;
    HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $1;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $52 = i64toi32_i32$1;
    i64toi32_i32$1 = $0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $52;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = i64toi32_i32$1 + 12 | 0;
    wasm2js_i32$1 = HEAPU32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $0 = $4 + 6 | 0;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = (HEAPU16[$0 >> 1] | 0) + 1 | 0;
    HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;
    break label$1;
   };
   $5 = ($3 + 48 | 0) + 8 | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $1;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $73 = i64toi32_i32$0;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = $73;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 6;
   HEAP32[(wasm2js_i32$0 + 60 | 0) >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Leaf$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__split__hceae715525d82d88($3 + 16 | 0 | 0, $3 + 48 | 0 | 0);
   $6 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
   $4 = HEAPU32[($3 + 20 | 0) >> 2] | 0;
   $7 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = HEAPU32[(($3 + 16 | 0) + 20 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAPU32[($3 + 28 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 32 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 33 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 34 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 35 | 0) >> 0] | 0 | 0) << 24);
   $92 = i64toi32_i32$1;
   i64toi32_i32$1 = $3;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = $92;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $5 = HEAPU32[($3 + 40 | 0) >> 2] | 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = $5;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = HEAPU32[($3 + 44 | 0) >> 2] | 0;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   label$3 : {
    label$4 : {
     $1 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
     if ($1 >>> 0 > 6 >>> 0) break label$4;
     $8 = ($3 + 16 | 0) + 8 | 0;
     wasm2js_i32$0 = $8;
     wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $114 = i64toi32_i32$0;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $114;
     HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $2 = $4 + Math_imul($1, 12) | 0;
     $9 = $2 + 8 | 0;
     memmove($2 + 20 | 0 | 0, $9 | 0, Math_imul((HEAPU16[($4 + 6 | 0) >> 1] | 0) - $1 | 0, 12) | 0) | 0;
     wasm2js_i32$0 = $2 + 16 | 0;
     wasm2js_i32$1 = HEAPU32[$8 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $3;
     i64toi32_i32$1 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
     $136 = i64toi32_i32$1;
     i64toi32_i32$1 = $9;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $136;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = (HEAPU16[($4 + 6 | 0) >> 1] | 0) + 1 | 0;
     HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
     $1 = $4;
     break label$3;
    };
    $8 = ($3 + 16 | 0) + 8 | 0;
    wasm2js_i32$0 = $8;
    wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $151 = i64toi32_i32$0;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $151;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $2 = $5 + Math_imul($1, 12) | 0;
    $9 = $2 + 4294967220 | 0;
    memmove($2 + 4294967232 | 0 | 0, $9 | 0, Math_imul((HEAPU16[($5 + 6 | 0) >> 1] | 0) - ($1 + 4294967289 | 0) | 0, 12) | 0) | 0;
    wasm2js_i32$0 = $2 + 4294967228 | 0;
    wasm2js_i32$1 = HEAPU32[$8 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
    $174 = i64toi32_i32$1;
    i64toi32_i32$1 = $9;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $174;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = (HEAPU16[($5 + 6 | 0) >> 1] | 0) + 1 | 0;
    HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
    $1 = $5;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $7;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 8 | 0;
   wasm2js_i32$1 = $4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 12 | 0;
   wasm2js_i32$1 = $6;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $3;
   i64toi32_i32$0 = HEAPU32[($3 + 48 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
   $192 = i64toi32_i32$0;
   i64toi32_i32$0 = $0 + 16 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $192;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $0 + 28 | 0;
   wasm2js_i32$1 = $5;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 32 | 0;
   wasm2js_i32$1 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $1 + 140 | 0;
   HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 24 | 0;
   wasm2js_i32$1 = HEAPU32[(($3 + 48 | 0) + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  global$0 = $3 + 64 | 0;
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__steal_left__h2e495003246f8092($0) {
  $0 = $0 | 0;
  var $1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $4 = 0, $5 = 0, i64toi32_i32$2 = 0, $6 = 0, $3 = 0, $2 = 0, $7 = 0, $39 = 0, $64 = 0, $72 = 0, $8 = 0, $9 = 0, $9$hi = 0, $96 = 0, $134 = 0, $153 = 0, $169 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 64 | 0;
  global$0 = $1;
  $2 = HEAPU32[$0 >> 2] | 0;
  $3 = ($1 + 48 | 0) + 8 | 0;
  $4 = HEAPU32[(((HEAPU32[($0 + 4 | 0) >> 2] | 0) + ((HEAPU32[($0 + 12 | 0) >> 2] | 0) << 2 | 0) | 0) + 140 | 0) >> 2] | 0;
  $5 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
  $6 = $4 + Math_imul($5, 12) | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = HEAPU32[($6 + 4 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $6 + 4294967292 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $39 = i64toi32_i32$0;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $39;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $6 = 0;
  label$1 : {
   if (($2 | 0) == (1 | 0)) break label$1;
   $6 = HEAPU32[(($4 + ($5 << 2 | 0) | 0) + 140 | 0) >> 2] | 0;
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $5 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
  };
  wasm2js_i32$0 = $4 + 6 | 0;
  wasm2js_i32$1 = $5 + 4294967295 | 0;
  HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;
  $4 = ($1 + 32 | 0) + 8 | 0;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1;
  i64toi32_i32$1 = HEAPU32[($1 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
  $64 = i64toi32_i32$1;
  i64toi32_i32$1 = $1;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $64;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $5 = $1 + 8 | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
  $72 = i64toi32_i32$0;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $72;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $4 = $0 + 4 | 0;
  $2 = $0 + 12 | 0;
  $3 = (HEAPU32[$4 >> 2] | 0) + Math_imul(HEAPU32[$2 >> 2] | 0, 12) | 0;
  $7 = $3 + 16 | 0;
  $8 = HEAPU32[$7 >> 2] | 0;
  wasm2js_i32$0 = $7;
  wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $5 = $3 + 8 | 0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$0 = i64toi32_i32$0;
  $9 = i64toi32_i32$1;
  $9$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $96 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $96;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = ($1 + 16 | 0) + 8 | 0;
  wasm2js_i32$1 = $8;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $9$hi;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $9;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $4 = HEAPU32[(((HEAPU32[$4 >> 2] | 0) + ((HEAPU32[$2 >> 2] | 0) << 2 | 0) | 0) + 144 | 0) >> 2] | 0;
  label$2 : {
   label$3 : {
    label$4 : {
     $5 = (HEAPU32[$0 >> 2] | 0) + 4294967295 | 0;
     if (($5 | 0) == (0 | 0)) break label$4;
     $0 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $4;
     HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $5;
     HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $0;
     HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = ($1 + 48 | 0) + 8 | 0;
     wasm2js_i32$1 = HEAPU32[(($1 + 16 | 0) + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $1;
     i64toi32_i32$1 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
     $134 = i64toi32_i32$1;
     i64toi32_i32$1 = $1;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $134;
     HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     if (($6 | 0) == (0 | 0)) break label$2;
     _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$GT$__push_front__hfed4dcb410b2b1a3($1 + 32 | 0 | 0, $1 + 48 | 0 | 0, $6 | 0, $1 | 0);
     break label$3;
    };
    $0 = ($1 + 48 | 0) + 8 | 0;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = HEAPU32[(($1 + 16 | 0) + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $1;
    i64toi32_i32$0 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
    $153 = i64toi32_i32$0;
    i64toi32_i32$0 = $1;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $153;
    HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $5 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
    memmove($4 + 20 | 0 | 0, $4 + 8 | 0 | 0, Math_imul($5, 12) | 0) | 0;
    wasm2js_i32$0 = $4 + 16 | 0;
    wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $1;
    i64toi32_i32$1 = HEAPU32[($1 + 48 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
    $169 = i64toi32_i32$1;
    i64toi32_i32$1 = $4;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $169;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $5 + 1 | 0;
    HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   };
   global$0 = $1 + 64 | 0;
   return;
  };
  core__panicking__panic__h629a30fc6a0298aa(1055128 | 0);
  abort();
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__steal_right__h78f03274e390ff68($0) {
  $0 = $0 | 0;
  var $1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $8$hi = 0, $43 = 0, $7 = 0, $65 = 0, $100 = 0, $118 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 80 | 0;
  global$0 = $1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) + 4294967295 | 0;
  HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = HEAPU32[(((HEAPU32[($0 + 4 | 0) >> 2] | 0) + ((HEAPU32[($0 + 12 | 0) >> 2] | 0) << 2 | 0) | 0) + 144 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
  _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__LeafOrInternal$GT$$GT$__pop_front__h93c3e6481edded41($1 + 24 | 0 | 0, $1 + 64 | 0 | 0);
  $2 = ($1 + 8 | 0) + 8 | 0;
  $3 = ($1 + 24 | 0) + 8 | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
  $43 = i64toi32_i32$0;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $43;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $4 = HEAPU32[($1 + 36 | 0) >> 2] | 0;
  $5 = (HEAPU32[($0 + 4 | 0) >> 2] | 0) + Math_imul(HEAPU32[($0 + 12 | 0) >> 2] | 0, 12) | 0;
  $6 = $5 + 16 | 0;
  $7 = HEAPU32[$6 >> 2] | 0;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = HEAPU32[$2 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $2 = $5 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$0 = i64toi32_i32$0;
  $8 = i64toi32_i32$1;
  $8$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $65 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $65;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $5 = ($1 + 48 | 0) + 8 | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = $7;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $8;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $2 = HEAPU32[(((HEAPU32[($0 + 4 | 0) >> 2] | 0) + ((HEAPU32[($0 + 12 | 0) >> 2] | 0) << 2 | 0) | 0) + 140 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     $6 = (HEAPU32[$0 >> 2] | 0) + 4294967295 | 0;
     if (($6 | 0) == (0 | 0)) break label$3;
     $0 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $2;
     HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $6;
     HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $0;
     HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = HEAPU32[($1 + 48 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
     $100 = i64toi32_i32$1;
     i64toi32_i32$1 = $1;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $100;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     if (($4 | 0) == (0 | 0)) break label$1;
     $0 = HEAPU16[($2 + 6 | 0) >> 1] | 0;
     $3 = $2 + Math_imul($0, 12) | 0;
     wasm2js_i32$0 = $3 + 16 | 0;
     wasm2js_i32$1 = HEAPU32[(($1 + 24 | 0) + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$0 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
     $118 = i64toi32_i32$0;
     i64toi32_i32$0 = $3 + 8 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $118;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $0 = $0 + 1 | 0;
     $3 = $0 << 2 | 0;
     wasm2js_i32$0 = ((HEAPU32[($1 + 68 | 0) >> 2] | 0) + $3 | 0) + 140 | 0;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = (HEAPU16[($2 + 6 | 0) >> 1] | 0) + 1 | 0;
     HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
     $4 = HEAPU32[(($2 + $3 | 0) + 140 | 0) >> 2] | 0;
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = $0;
     HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = $2;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     break label$2;
    };
    $0 = HEAPU32[$5 >> 2] | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = HEAPU32[($1 + 48 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $8 = i64toi32_i32$1;
    $8$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = $1;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $8;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $4 = HEAPU16[($2 + 6 | 0) >> 1] | 0;
    $3 = $2 + Math_imul($4, 12) | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = $3 + 8 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $8;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $3 + 16 | 0;
    wasm2js_i32$1 = $0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $4 + 1 | 0;
    HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   };
   global$0 = $1 + 80 | 0;
   return;
  };
  core__panicking__panic__h629a30fc6a0298aa(1055128 | 0);
  abort();
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__merge__hb1b0051062846c6f($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $5 = 0, $6 = 0, $4 = 0, $3 = 0, i64toi32_i32$2 = 0, $7 = 0, $13 = 0, $9 = 0, $10 = 0, $2 = 0, $14 = 0, $8 = 0, $11 = 0, $12 = 0, $15 = 0, $60 = 0, $82 = 0, $180 = 0, $185 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  $4 = $3 + 140 | 0;
  $5 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
  $6 = $5 + 1 | 0;
  $7 = $6 << 2 | 0;
  $8 = $4 + $7 | 0;
  $9 = HEAPU32[$8 >> 2] | 0;
  $10 = HEAPU16[($9 + 6 | 0) >> 1] | 0;
  $11 = $5 << 2 | 0;
  $12 = $4 + $11 | 0;
  $13 = HEAPU32[$12 >> 2] | 0;
  $14 = HEAPU16[($13 + 6 | 0) >> 1] | 0;
  $15 = $2 + 8 | 0;
  $4 = $3 + Math_imul($5, 12) | 0;
  wasm2js_i32$0 = $15;
  wasm2js_i32$1 = HEAPU32[($4 + 16 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $4 + 8 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $60 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $60;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  memmove(i64toi32_i32$2 | 0, $4 + 20 | 0 | 0, Math_imul((HEAPU16[($3 + 6 | 0) >> 1] | 0) + ($5 ^ 4294967295 | 0) | 0, 12) | 0) | 0;
  $5 = $13 + Math_imul($14, 12) | 0;
  wasm2js_i32$0 = $5 + 16 | 0;
  wasm2js_i32$1 = HEAPU32[$15 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $82 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $82;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  memcpy($5 + 20 | 0 | 0, $9 + 8 | 0 | 0, Math_imul($10, 12) | 0) | 0;
  memmove($8 | 0, $12 + 8 | 0 | 0, ($7 ^ 4294967292 | 0) + 48 | 0 | 0) | 0;
  label$1 : {
   $7 = HEAPU16[($3 + 6 | 0) >> 1] | 0;
   if ($6 >>> 0 >= $7 >>> 0) break label$1;
   $5 = ($3 + $11 | 0) + 144 | 0;
   label$2 : do {
    $4 = HEAPU32[$5 >> 2] | 0;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $6;
    HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $3;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $5 = $5 + 4 | 0;
    $6 = $6 + 1 | 0;
    if (($7 | 0) != ($6 | 0)) continue label$2;
    break label$2;
   } while (1);
   $7 = HEAPU16[($3 + 6 | 0) >> 1] | 0;
  };
  wasm2js_i32$0 = $3 + 6 | 0;
  wasm2js_i32$1 = $7 + 4294967295 | 0;
  HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;
  $6 = $13 + 6 | 0;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = ($10 + (HEAPU16[$6 >> 1] | 0) | 0) + 1 | 0;
  HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;
  label$3 : {
   label$4 : {
    if ((HEAPU32[$1 >> 2] | 0) >>> 0 < 2 >>> 0) break label$4;
    $6 = $14 + 1 | 0;
    memcpy(($13 + ($6 << 2 | 0) | 0) + 140 | 0 | 0, $9 + 140 | 0 | 0, ($10 << 2 | 0) + 4 | 0 | 0) | 0;
    label$5 : {
     if ($6 >>> 0 >= (($14 + $10 | 0) + 2 | 0) >>> 0) break label$5;
     $4 = $10 + 1 | 0;
     $5 = ($13 + ($14 << 2 | 0) | 0) + 144 | 0;
     label$6 : do {
      $3 = HEAPU32[$5 >> 2] | 0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $6;
      HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $13;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      $5 = $5 + 4 | 0;
      $6 = $6 + 1 | 0;
      $4 = $4 + 4294967295 | 0;
      if ($4) continue label$6;
      break label$6;
     } while (1);
    };
    __rust_dealloc($9 | 0, 188 | 0, 4 | 0);
    break label$3;
   };
   __rust_dealloc($9 | 0, 140 | 0, 4 | 0);
  };
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $180 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $180;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $185 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $185;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__split__hba508492adbef0cd($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $2 = 0, $3 = 0, $9 = 0, $7 = 0, $4 = 0, $8 = 0, i64toi32_i32$2 = 0, $11 = 0, $6 = 0, $12 = 0, $5 = 0, $44 = 0, $10 = 0, $91 = 0, $96 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 192 | 0;
  global$0 = $2;
  label$1 : {
   $3 = __rust_alloc(188 | 0, 4 | 0) | 0;
   if (($3 | 0) == (0 | 0)) break label$1;
   $4 = 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $5 = memcpy($3 + 8 | 0 | 0, $2 + 8 | 0 | 0, 180 | 0) | 0;
   $6 = ($2 + 8 | 0) + 8 | 0;
   $7 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
   $8 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
   $9 = $7 + Math_imul($8, 12) | 0;
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = HEAPU32[($9 + 16 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $9 + 8 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $44 = i64toi32_i32$0;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $44;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $10 = HEAPU32[$1 >> 2] | 0;
   $11 = (HEAPU16[($7 + 6 | 0) >> 1] | 0) - $8 | 0;
   $12 = $11 + 4294967295 | 0;
   memcpy($5 | 0, $9 + 20 | 0 | 0, Math_imul($12, 12) | 0) | 0;
   $9 = $3 + 140 | 0;
   memcpy($9 | 0, ($7 + ($8 << 2 | 0) | 0) + 144 | 0 | 0, $11 << 2 | 0 | 0) | 0;
   wasm2js_i32$0 = $7;
   wasm2js_i32$1 = $8;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = $12;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   label$2 : {
    if (($11 | 0) == (0 | 0)) break label$2;
    label$3 : do {
     $7 = HEAPU32[$9 >> 2] | 0;
     wasm2js_i32$0 = $7;
     wasm2js_i32$1 = $4;
     HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
     wasm2js_i32$0 = $7;
     wasm2js_i32$1 = $3;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $9 = $9 + 4 | 0;
     $4 = $4 + 1 | 0;
     if (($11 | 0) != ($4 | 0)) continue label$3;
     break label$3;
    } while (1);
   };
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $91 = i64toi32_i32$1;
   i64toi32_i32$1 = $0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $91;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 16 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 17 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 18 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 19 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $1;
   i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $96 = i64toi32_i32$0;
   i64toi32_i32$0 = $0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $96;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$0 + 28 | 0;
   wasm2js_i32$1 = $10;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0 + 20 | 0;
   wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = $2 + 192 | 0;
   return;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618(188 | 0, 4 | 0);
  abort();
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert_fit__hb959dd4a170b1c80($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, $6 = 0, $5 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $7 = 0, $34 = 0, $49 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $4 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
  $5 = HEAPU32[($0 + 12 | 0) >> 2] | 0;
  $6 = $4 + Math_imul($5, 12) | 0;
  $7 = $6 + 8 | 0;
  memmove($6 + 20 | 0 | 0, $7 | 0, Math_imul((HEAPU16[($4 + 6 | 0) >> 1] | 0) - $5 | 0, 12) | 0) | 0;
  wasm2js_i32$0 = $6 + 16 | 0;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $34 = i64toi32_i32$0;
  i64toi32_i32$0 = $7;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $34;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = (HEAPU16[($4 + 6 | 0) >> 1] | 0) + 1 | 0;
  HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
  $4 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
  $1 = $4 + 140 | 0;
  $6 = HEAPU32[($0 + 12 | 0) >> 2] | 0;
  $49 = ($1 + ($6 << 2 | 0) | 0) + 8 | 0;
  $6 = $6 + 1 | 0;
  $1 = $1 + ($6 << 2 | 0) | 0;
  memmove($49 | 0, $1 | 0, ((HEAPU16[($4 + 6 | 0) >> 1] | 0) - $6 | 0) << 2 | 0 | 0) | 0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   $6 = HEAPU32[($0 + 12 | 0) >> 2] | 0;
   $4 = $6 + 1 | 0;
   $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   $5 = HEAPU16[($1 + 6 | 0) >> 1] | 0;
   if ($4 >>> 0 > $5 >>> 0) break label$1;
   $2 = HEAPU32[(($1 + ($4 << 2 | 0) | 0) + 140 | 0) >> 2] | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $4;
   HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   if (($4 | 0) == ($5 | 0)) break label$1;
   $1 = ($6 << 2 | 0) + 148 | 0;
   label$2 : do {
    $6 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
    $2 = HEAPU32[($6 + $1 | 0) >> 2] | 0;
    $4 = $4 + 1 | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $4;
    HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $6;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $1 = $1 + 4 | 0;
    if (($5 | 0) != ($4 | 0)) continue label$2;
    break label$2;
   } while (1);
  };
 }
 
 function _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert__heb60b6b8959c9b5d($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $5 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $27 = 0, $36 = 0, $41 = 0, $51 = 0, $71 = 0, $99 = 0, $122 = 0, $141 = 0, $145 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $5 = global$0 - 80 | 0;
  global$0 = $5;
  label$1 : {
   label$2 : {
    if ((HEAPU16[((HEAPU32[($1 + 4 | 0) >> 2] | 0) + 6 | 0) >> 1] | 0) >>> 0 > 10 >>> 0) break label$2;
    wasm2js_i32$0 = ($5 + 32 | 0) + 8 | 0;
    wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $27 = i64toi32_i32$0;
    i64toi32_i32$0 = $5;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $27;
    HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert_fit__hb959dd4a170b1c80($1 | 0, $5 + 32 | 0 | 0, $3 | 0, $5 | 0);
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $1;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $36 = i64toi32_i32$1;
    i64toi32_i32$1 = $0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $36;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $41 = i64toi32_i32$0;
    i64toi32_i32$0 = $0 + 12 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $41;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    break label$1;
   };
   $6 = ($5 + 64 | 0) + 8 | 0;
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $51 = i64toi32_i32$1;
   i64toi32_i32$1 = $5;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = $51;
   HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = 6;
   HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__split__hba508492adbef0cd($5 + 32 | 0 | 0, $5 + 64 | 0 | 0);
   $7 = HEAPU32[($5 + 40 | 0) >> 2] | 0;
   $8 = HEAPU32[($5 + 36 | 0) >> 2] | 0;
   $9 = HEAPU32[($5 + 32 | 0) >> 2] | 0;
   wasm2js_i32$0 = ($5 + 8 | 0) + 8 | 0;
   wasm2js_i32$1 = HEAPU32[($5 + 52 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $5;
   i64toi32_i32$0 = HEAPU32[($5 + 44 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $5, HEAPU8[(wasm2js_i32$0 + 48 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 49 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 50 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 51 | 0) >> 0] | 0 | 0) << 24);
   $71 = i64toi32_i32$0;
   i64toi32_i32$0 = $5;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = $71;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $10 = HEAPU32[($5 + 56 | 0) >> 2] | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = $10;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   $11 = HEAPU32[($5 + 60 | 0) >> 2] | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = $11;
   HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
   label$3 : {
    label$4 : {
     $1 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
     if ($1 >>> 0 > 6 >>> 0) break label$4;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $8;
     HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $9;
     HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $7;
     HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $1;
     HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $6;
     wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $99 = i64toi32_i32$1;
     i64toi32_i32$1 = $5;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $99;
     HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert_fit__hb959dd4a170b1c80($5 + 32 | 0 | 0, $5 + 64 | 0 | 0, $3 | 0, $5 | 0);
     break label$3;
    };
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $10;
    HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $11;
    HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $1 + 4294967289 | 0;
    HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $5 + 24 | 0;
    HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $122 = i64toi32_i32$0;
    i64toi32_i32$0 = $5;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $122;
    HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert_fit__hb959dd4a170b1c80($5 + 32 | 0 | 0, $5 + 64 | 0 | 0, $3 | 0, $5 | 0);
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $9;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 8 | 0;
   wasm2js_i32$1 = $8;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 12 | 0;
   wasm2js_i32$1 = $7;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $5;
   i64toi32_i32$1 = HEAPU32[($5 + 8 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $5, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $141 = i64toi32_i32$1;
   i64toi32_i32$1 = $0 + 16 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $141;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $5;
   i64toi32_i32$0 = HEAPU32[($5 + 24 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $5, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
   $145 = i64toi32_i32$0;
   i64toi32_i32$0 = $0 + 28 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $145;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $0 + 24 | 0;
   wasm2js_i32$1 = HEAPU32[(($5 + 8 | 0) + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  global$0 = $5 + 80 | 0;
 }
 
 function _$LT$alloc__collections__btree__node__Root$LT$K$C$$u20$V$GT$$GT$__push_level__hce7a863fec2fb051($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $2 = 0, $4 = 0, $5 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 192 | 0;
  global$0 = $2;
  label$1 : {
   $3 = __rust_alloc(188 | 0, 4 | 0) | 0;
   if (($3 | 0) == (0 | 0)) break label$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   memcpy($3 + 8 | 0 | 0, $2 + 12 | 0 | 0, 180 | 0) | 0;
   $4 = HEAPU32[$1 >> 2] | 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = $4;
   HEAP32[(wasm2js_i32$0 + 140 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $5 = (HEAPU32[($1 + 4 | 0) >> 2] | 0) + 1 | 0;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $5;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = 0;
   HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $5;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $1;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   global$0 = $2 + 192 | 0;
   return;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618(188 | 0, 4 | 0);
  abort();
 }
 
 function _$LT$alloc__collections__btree__node__Root$LT$K$C$$u20$V$GT$$GT$__new_leaf__h68eff2757de7a210($0) {
  $0 = $0 | 0;
  var $2 = 0, $1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $1 = global$0 - 144 | 0;
  global$0 = $1;
  label$1 : {
   $2 = __rust_alloc(140 | 0, 4 | 0) | 0;
   if (($2 | 0) == (0 | 0)) break label$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   memcpy($2 + 8 | 0 | 0, $1 + 12 | 0 | 0, 132 | 0) | 0;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = $1 + 144 | 0;
   return;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618(140 | 0, 4 | 0);
  abort();
 }
 
 function std__collections__hash__table__calculate_layout__heca53458de3ef603($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $2 = 0, $2$hi = 0, $12 = 0, $3 = 0, $13 = 0, $14 = 0, $4 = 0, $3$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      i64toi32_i32$0 = 0;
      i64toi32_i32$0 = i64toi32_i32$0;
      $2 = $1;
      $2$hi = i64toi32_i32$0;
      i64toi32_i32$0 = i64toi32_i32$0;
      i64toi32_i32$0 = i64toi32_i32$0;
      i64toi32_i32$2 = $1;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = 2;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
       $12 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
       $12 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
      }
      i64toi32_i32$1 = i64toi32_i32$1;
      $3 = $12;
      $3$hi = i64toi32_i32$1;
      i64toi32_i32$1 = i64toi32_i32$1;
      i64toi32_i32$1 = i64toi32_i32$1;
      i64toi32_i32$0 = $3;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = 0;
       $13 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
       $13 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
      }
      i64toi32_i32$2 = i64toi32_i32$2;
      if ($13) break label$4;
      i64toi32_i32$2 = $2$hi;
      i64toi32_i32$2 = i64toi32_i32$2;
      i64toi32_i32$0 = 0;
      i64toi32_i32$0 = __wasm_i64_mul($2 | 0, i64toi32_i32$2 | 0, 24 | 0, i64toi32_i32$0 | 0) | 0;
      i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
      i64toi32_i32$2 = i64toi32_i32$2;
      $2 = i64toi32_i32$0;
      $2$hi = i64toi32_i32$2;
      i64toi32_i32$2 = i64toi32_i32$2;
      i64toi32_i32$2 = i64toi32_i32$2;
      i64toi32_i32$1 = i64toi32_i32$0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = 0;
       $14 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
       $14 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
      }
      i64toi32_i32$0 = i64toi32_i32$0;
      if (($14 | 0) == (0 | 0)) break label$3;
     };
     _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__h5441145533fb08a4();
     break label$2;
    };
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$0 = i64toi32_i32$0;
    $1 = $3;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$0 = i64toi32_i32$0;
    $4 = $1 + $2 | 0;
    if ($4 >>> 0 < $1 >>> 0) break label$2;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $1 = 4;
    break label$1;
   };
   _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__h5441145533fb08a4();
   $1 = 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function std__collections__hash__table__make_hash__hb56593c8f352b36b($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, i64toi32_i32$3 = 0, $5$hi = 0, $6$hi = 0, $5 = 0, $6 = 0, $7$hi = 0, $7 = 0, $8$hi = 0, $8 = 0, $9$hi = 0, $9 = 0, $2 = 0, $10$hi = 0, $10 = 0, $3 = 0, $4 = 0, $90 = 0, $20 = 0, $27 = 0, $32 = 0, $41 = 0, $61 = 0, $61$hi = 0, $62 = 0, $62$hi = 0, $64$hi = 0, $69 = 0, $69$hi = 0, $75 = 0, $75$hi = 0, $80 = 0, $80$hi = 0, $84 = 0, $84$hi = 0, $87$hi = 0, $94 = 0, $94$hi = 0, $100 = 0, $100$hi = 0, $102 = 0, $102$hi = 0, $104$hi = 0, $110 = 0, $110$hi = 0, $116 = 0, $116$hi = 0, $119 = 0, $119$hi = 0, $120 = 0, $120$hi = 0, $122$hi = 0, $127 = 0, $127$hi = 0, $134 = 0, $134$hi = 0, $135 = 0, $135$hi = 0, $137$hi = 0, $142 = 0, $142$hi = 0, $149 = 0, $149$hi = 0, $150 = 0, $150$hi = 0, $152$hi = 0, $157 = 0, $157$hi = 0, $160$hi = 0, $162 = 0, $162$hi = 0, $164$hi = 0, $169 = 0, $169$hi = 0, $175$hi = 0, $91 = 0, $178 = 0, $178$hi = 0, $179 = 0, $179$hi = 0, $181 = 0, $181$hi = 0, $182 = 0, $182$hi = 0, $184 = 0, $184$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 64 | 0;
  global$0 = $2;
  $3 = $2 + 24 | 0;
  i64toi32_i32$2 = $0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  $5 = i64toi32_i32$0;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$0 = 1819895653;
  i64toi32_i32$3 = 1852142177;
  i64toi32_i32$0 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
  $20 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = $20;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $4 = $2 + 32 | 0;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = HEAPU32[(i64toi32_i32$1 + 8 | 0) >> 2] | 0;
  i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$2 = i64toi32_i32$2;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = i64toi32_i32$0;
  i64toi32_i32$0 = 1685025377;
  i64toi32_i32$3 = 1852075885;
  i64toi32_i32$0 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
  $27 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
  i64toi32_i32$1 = $4;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $27;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $0 = $2 + 40 | 0;
  i64toi32_i32$0 = i64toi32_i32$2;
  i64toi32_i32$0 = i64toi32_i32$2;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = 1952801890;
  i64toi32_i32$3 = 2037671283;
  i64toi32_i32$1 = i64toi32_i32$0 ^ i64toi32_i32$1 | 0;
  $32 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  i64toi32_i32$2 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = $32;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = 0;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = 0;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = $5;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$1 = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$0 = $5;
  i64toi32_i32$2 = 1936682341;
  i64toi32_i32$3 = 1886610805;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
  $41 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$2 = i64toi32_i32$2;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $41;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$2;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__hash__Hash$GT$__hash__h960bebd8f444d8b5($1 | 0, i64toi32_i32$0 | 0);
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__hash__Hash$GT$__hash__h960bebd8f444d8b5($1 + 12 | 0 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$1 = i64toi32_i32$0;
  i64toi32_i32$2 = HEAPU32[(i64toi32_i32$1 + 56 | 0) >> 2] | 0;
  i64toi32_i32$0 = 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  $6 = i64toi32_i32$2;
  $6$hi = i64toi32_i32$0;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAPU32[(i64toi32_i32$1 + 48 | 0) >> 2] | 0;
  i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$2 = i64toi32_i32$2;
  $7 = i64toi32_i32$0;
  $7$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $0;
  i64toi32_i32$2 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$0 = i64toi32_i32$0;
  $8 = i64toi32_i32$2;
  $8$hi = i64toi32_i32$0;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$2 = i64toi32_i32$2;
  $9 = i64toi32_i32$0;
  $9$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $4;
  i64toi32_i32$2 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$0 = i64toi32_i32$0;
  $5 = i64toi32_i32$2;
  $5$hi = i64toi32_i32$0;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = HEAPU32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$2 = i64toi32_i32$2;
  $10 = i64toi32_i32$0;
  $10$hi = i64toi32_i32$2;
  global$0 = i64toi32_i32$1 + 64 | 0;
  i64toi32_i32$2 = $8$hi;
  $61 = $8;
  $61$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $7$hi;
  $62 = $7;
  $62$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 56;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
   $90 = 0;
  } else {
   i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
   $90 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
  }
  $64$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $62$hi;
  i64toi32_i32$2 = $62;
  i64toi32_i32$1 = $64$hi;
  i64toi32_i32$3 = $90;
  i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $6 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = $61$hi;
  i64toi32_i32$0 = $61;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$3 = $6;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  $7 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
  $7$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$0 = 0;
  i64toi32_i32$0 = __wasm_rotl_i64($7 | 0, i64toi32_i32$2 | 0, 16 | 0, i64toi32_i32$0 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $69 = i64toi32_i32$0;
  $69$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$2 = $9$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $7;
  i64toi32_i32$0 = $9$hi;
  i64toi32_i32$3 = $9;
  i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
  i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
  if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
  i64toi32_i32$5 = i64toi32_i32$5;
  $7 = i64toi32_i32$4;
  $7$hi = i64toi32_i32$5;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$5 = $69$hi;
  i64toi32_i32$2 = $69;
  i64toi32_i32$1 = $7$hi;
  i64toi32_i32$3 = i64toi32_i32$4;
  i64toi32_i32$1 = i64toi32_i32$5 ^ i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $8 = i64toi32_i32$2 ^ i64toi32_i32$4 | 0;
  $8$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  $75 = $8;
  $75$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$5 = $5;
  i64toi32_i32$2 = $10$hi;
  i64toi32_i32$3 = $10;
  i64toi32_i32$0 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
  i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
  if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0;
  i64toi32_i32$4 = i64toi32_i32$4;
  $9 = i64toi32_i32$0;
  $9$hi = i64toi32_i32$4;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$5 = 0;
  i64toi32_i32$5 = __wasm_rotl_i64(i64toi32_i32$0 | 0, i64toi32_i32$4 | 0, 32 | 0, i64toi32_i32$5 | 0) | 0;
  i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
  $80 = i64toi32_i32$5;
  $80$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $75$hi;
  i64toi32_i32$1 = $75;
  i64toi32_i32$5 = $80$hi;
  i64toi32_i32$3 = $80;
  i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
  i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
  if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  $10 = i64toi32_i32$2;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $10$hi;
  i64toi32_i32$4 = i64toi32_i32$2;
  i64toi32_i32$1 = $6$hi;
  i64toi32_i32$3 = $6;
  i64toi32_i32$1 = i64toi32_i32$0 ^ i64toi32_i32$1 | 0;
  $84 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  $84$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $7$hi;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$4 = 0;
  i64toi32_i32$4 = __wasm_rotl_i64($5 | 0, i64toi32_i32$1 | 0, 13 | 0, i64toi32_i32$4 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  $87$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $9$hi;
  i64toi32_i32$1 = $87$hi;
  i64toi32_i32$0 = i64toi32_i32$4;
  i64toi32_i32$4 = $9$hi;
  i64toi32_i32$3 = $9;
  i64toi32_i32$4 = i64toi32_i32$1 ^ i64toi32_i32$4 | 0;
  i64toi32_i32$4 = i64toi32_i32$4;
  $5 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
  $5$hi = i64toi32_i32$4;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$4 = $7$hi;
  i64toi32_i32$1 = $7;
  i64toi32_i32$0 = $5$hi;
  i64toi32_i32$3 = $5;
  i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
  i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
  if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  $6 = i64toi32_i32$5;
  $6$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$2 = $5$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = 0;
  i64toi32_i32$1 = __wasm_rotl_i64($5 | 0, i64toi32_i32$2 | 0, 17 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $94 = i64toi32_i32$1;
  $94$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$4 = i64toi32_i32$5;
  i64toi32_i32$1 = $94$hi;
  i64toi32_i32$3 = $94;
  i64toi32_i32$1 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $5 = i64toi32_i32$4 ^ i64toi32_i32$3 | 0;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = $84$hi;
  i64toi32_i32$2 = $84;
  i64toi32_i32$4 = $5$hi;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
  i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
  if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
  i64toi32_i32$5 = i64toi32_i32$5;
  $7 = i64toi32_i32$0;
  $7$hi = i64toi32_i32$5;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$5 = $5$hi;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$2 = 0;
  i64toi32_i32$2 = __wasm_rotl_i64($5 | 0, i64toi32_i32$5 | 0, 13 | 0, i64toi32_i32$2 | 0) | 0;
  i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
  $100 = i64toi32_i32$2;
  $100$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $7$hi;
  i64toi32_i32$1 = i64toi32_i32$0;
  i64toi32_i32$2 = $100$hi;
  i64toi32_i32$3 = $100;
  i64toi32_i32$2 = i64toi32_i32$5 ^ i64toi32_i32$2 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  $5 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
  $5$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  $102 = $5;
  $102$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = 0;
  i64toi32_i32$1 = __wasm_rotl_i64($8 | 0, i64toi32_i32$2 | 0, 21 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $104$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $10$hi;
  i64toi32_i32$2 = $104$hi;
  i64toi32_i32$5 = i64toi32_i32$1;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$3 = $10;
  i64toi32_i32$1 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $8 = i64toi32_i32$5 ^ i64toi32_i32$3 | 0;
  $8$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$5 = 0;
  i64toi32_i32$5 = __wasm_rotl_i64($6 | 0, i64toi32_i32$1 | 0, 32 | 0, i64toi32_i32$5 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$2 = i64toi32_i32$5;
  i64toi32_i32$5 = 0;
  i64toi32_i32$3 = 255;
  i64toi32_i32$5 = i64toi32_i32$1 ^ i64toi32_i32$5 | 0;
  $110 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  $110$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $8$hi;
  i64toi32_i32$1 = $8;
  i64toi32_i32$2 = $110$hi;
  i64toi32_i32$3 = $110;
  i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
  i64toi32_i32$0 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
  if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  $6 = i64toi32_i32$4;
  $6$hi = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$0 = $102$hi;
  i64toi32_i32$5 = $102;
  i64toi32_i32$1 = $6$hi;
  i64toi32_i32$3 = i64toi32_i32$4;
  i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
  i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
  if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0;
  i64toi32_i32$4 = i64toi32_i32$4;
  $9 = i64toi32_i32$2;
  $9$hi = i64toi32_i32$4;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$4 = $5$hi;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$5 = 0;
  i64toi32_i32$5 = __wasm_rotl_i64($5 | 0, i64toi32_i32$4 | 0, 17 | 0, i64toi32_i32$5 | 0) | 0;
  i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
  $116 = i64toi32_i32$5;
  $116$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $9$hi;
  i64toi32_i32$0 = i64toi32_i32$2;
  i64toi32_i32$5 = $116$hi;
  i64toi32_i32$3 = $116;
  i64toi32_i32$5 = i64toi32_i32$4 ^ i64toi32_i32$5 | 0;
  i64toi32_i32$5 = i64toi32_i32$5;
  $5 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  $5$hi = i64toi32_i32$5;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$0 = 0;
  i64toi32_i32$0 = __wasm_rotl_i64($5 | 0, i64toi32_i32$5 | 0, 13 | 0, i64toi32_i32$0 | 0) | 0;
  i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
  $119 = i64toi32_i32$0;
  $119$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $5$hi;
  $120 = $5;
  $120$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $8$hi;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$0 = 0;
  i64toi32_i32$0 = __wasm_rotl_i64($8 | 0, i64toi32_i32$5 | 0, 16 | 0, i64toi32_i32$0 | 0) | 0;
  i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
  $122$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $6$hi;
  i64toi32_i32$5 = $122$hi;
  i64toi32_i32$4 = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$3 = $6;
  i64toi32_i32$0 = i64toi32_i32$5 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  $6 = i64toi32_i32$4 ^ i64toi32_i32$3 | 0;
  $6$hi = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$4 = 0;
  i64toi32_i32$4 = __wasm_rotl_i64($7 | 0, i64toi32_i32$0 | 0, 32 | 0, i64toi32_i32$4 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $127 = i64toi32_i32$4;
  $127$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$5 = $6;
  i64toi32_i32$4 = $127$hi;
  i64toi32_i32$3 = $127;
  i64toi32_i32$1 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
  i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
  if (i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  $7 = i64toi32_i32$1;
  $7$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$2 = $120$hi;
  i64toi32_i32$0 = $120;
  i64toi32_i32$5 = $7$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
  if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $5 = i64toi32_i32$4;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = $119$hi;
  i64toi32_i32$2 = $119;
  i64toi32_i32$0 = $5$hi;
  i64toi32_i32$3 = i64toi32_i32$4;
  i64toi32_i32$0 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  $8 = i64toi32_i32$2 ^ i64toi32_i32$4 | 0;
  $8$hi = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$2 = __wasm_rotl_i64($8 | 0, i64toi32_i32$0 | 0, 17 | 0, i64toi32_i32$2 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $134 = i64toi32_i32$2;
  $134$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $8$hi;
  $135 = $8;
  $135$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$2 = __wasm_rotl_i64($6 | 0, i64toi32_i32$0 | 0, 21 | 0, i64toi32_i32$2 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $137$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $137$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$3 = $7;
  i64toi32_i32$2 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  $6 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
  $6$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$2 = $9$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = 0;
  i64toi32_i32$1 = __wasm_rotl_i64($9 | 0, i64toi32_i32$2 | 0, 32 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $142 = i64toi32_i32$1;
  $142$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$0 = $6;
  i64toi32_i32$1 = $142$hi;
  i64toi32_i32$3 = $142;
  i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
  i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
  if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0;
  i64toi32_i32$4 = i64toi32_i32$4;
  $7 = i64toi32_i32$5;
  $7$hi = i64toi32_i32$4;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$4 = $135$hi;
  i64toi32_i32$2 = $135;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$3 = i64toi32_i32$5;
  i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
  i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
  if (i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
  i64toi32_i32$5 = i64toi32_i32$5;
  $8 = i64toi32_i32$1;
  $8$hi = i64toi32_i32$5;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$5 = $134$hi;
  i64toi32_i32$4 = $134;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  i64toi32_i32$2 = i64toi32_i32$5 ^ i64toi32_i32$2 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  $9 = i64toi32_i32$4 ^ i64toi32_i32$1 | 0;
  $9$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$4 = 0;
  i64toi32_i32$4 = __wasm_rotl_i64($9 | 0, i64toi32_i32$2 | 0, 13 | 0, i64toi32_i32$4 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $149 = i64toi32_i32$4;
  $149$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $9$hi;
  $150 = $9;
  $150$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$4 = 0;
  i64toi32_i32$4 = __wasm_rotl_i64($6 | 0, i64toi32_i32$2 | 0, 16 | 0, i64toi32_i32$4 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $152$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$2 = $152$hi;
  i64toi32_i32$5 = i64toi32_i32$4;
  i64toi32_i32$4 = $7$hi;
  i64toi32_i32$3 = $7;
  i64toi32_i32$4 = i64toi32_i32$2 ^ i64toi32_i32$4 | 0;
  i64toi32_i32$4 = i64toi32_i32$4;
  $6 = i64toi32_i32$5 ^ i64toi32_i32$3 | 0;
  $6$hi = i64toi32_i32$4;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$4 = $5$hi;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$5 = 0;
  i64toi32_i32$5 = __wasm_rotl_i64($5 | 0, i64toi32_i32$4 | 0, 32 | 0, i64toi32_i32$5 | 0) | 0;
  i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
  $157 = i64toi32_i32$5;
  $157$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $6$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$5 = $157$hi;
  i64toi32_i32$3 = $157;
  i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
  i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
  if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $5 = i64toi32_i32$0;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = $150$hi;
  i64toi32_i32$4 = $150;
  i64toi32_i32$2 = $5$hi;
  i64toi32_i32$3 = i64toi32_i32$0;
  i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
  i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
  if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0;
  $160$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $149$hi;
  i64toi32_i32$1 = $149;
  i64toi32_i32$4 = $160$hi;
  i64toi32_i32$3 = i64toi32_i32$5;
  i64toi32_i32$4 = i64toi32_i32$0 ^ i64toi32_i32$4 | 0;
  i64toi32_i32$4 = i64toi32_i32$4;
  $7 = i64toi32_i32$1 ^ i64toi32_i32$5 | 0;
  $7$hi = i64toi32_i32$4;
  i64toi32_i32$4 = i64toi32_i32$4;
  $162 = $7;
  $162$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $6$hi;
  i64toi32_i32$4 = i64toi32_i32$4;
  i64toi32_i32$1 = 0;
  i64toi32_i32$1 = __wasm_rotl_i64($6 | 0, i64toi32_i32$4 | 0, 21 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
  $164$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $5$hi;
  i64toi32_i32$4 = $164$hi;
  i64toi32_i32$0 = i64toi32_i32$1;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$3 = $5;
  i64toi32_i32$1 = i64toi32_i32$4 ^ i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $5 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$0 = 0;
  i64toi32_i32$0 = __wasm_rotl_i64($8 | 0, i64toi32_i32$1 | 0, 32 | 0, i64toi32_i32$0 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  $169 = i64toi32_i32$0;
  $169$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$4 = $5;
  i64toi32_i32$0 = $169$hi;
  i64toi32_i32$3 = $169;
  i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
  i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
  if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
  i64toi32_i32$5 = i64toi32_i32$5;
  $6 = i64toi32_i32$2;
  $6$hi = i64toi32_i32$5;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$5 = $162$hi;
  i64toi32_i32$1 = $162;
  i64toi32_i32$4 = $6$hi;
  i64toi32_i32$3 = i64toi32_i32$2;
  i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
  i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
  if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  $8 = i64toi32_i32$0;
  $8$hi = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$2 = $5$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = 0;
  i64toi32_i32$1 = __wasm_rotl_i64($5 | 0, i64toi32_i32$2 | 0, 16 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $175$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$2 = $175$hi;
  i64toi32_i32$5 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  i64toi32_i32$3 = $6;
  i64toi32_i32$1 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $91 = i64toi32_i32$5 ^ i64toi32_i32$3 | 0;
  i64toi32_i32$5 = 0;
  i64toi32_i32$5 = __wasm_rotl_i64($91 | 0, i64toi32_i32$1 | 0, 21 | 0, i64toi32_i32$5 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  $178 = i64toi32_i32$5;
  $178$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$5 = $178$hi;
  i64toi32_i32$3 = $178;
  i64toi32_i32$5 = i64toi32_i32$1 ^ i64toi32_i32$5 | 0;
  $179 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  $179$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $7$hi;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$2 = 0;
  i64toi32_i32$2 = __wasm_rotl_i64($7 | 0, i64toi32_i32$5 | 0, 17 | 0, i64toi32_i32$2 | 0) | 0;
  i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
  $181 = i64toi32_i32$2;
  $181$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $179$hi;
  i64toi32_i32$1 = $179;
  i64toi32_i32$2 = $181$hi;
  i64toi32_i32$3 = $181;
  i64toi32_i32$2 = i64toi32_i32$5 ^ i64toi32_i32$2 | 0;
  $182 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
  $182$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = 0;
  i64toi32_i32$1 = __wasm_rotl_i64(i64toi32_i32$0 | 0, i64toi32_i32$2 | 0, 32 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
  $184 = i64toi32_i32$1;
  $184$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $182$hi;
  i64toi32_i32$5 = $182;
  i64toi32_i32$1 = $184$hi;
  i64toi32_i32$3 = $184;
  i64toi32_i32$1 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  return i64toi32_i32$5 ^ i64toi32_i32$3 | 0 | 2147483648 | 0 | 0;
 }
 
 function _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_internal__he2f4ef55b082d46a($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $4 = 0, $4$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_uninitialized_internal__h90afbcf20060402f($3 | 0, $1 | 0, $2 | 0);
  label$1 : {
   label$2 : {
    if ((HEAPU8[$3 >> 0] | 0 | 0) != (1 | 0)) break label$2;
    $1 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(HEAPU8[($3 + 1 | 0) >> 0] | 0 | 0) | 0;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = 1;
    HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $1;
    HEAP8[(wasm2js_i32$0 + 1 | 0) >> 0] = wasm2js_i32$1;
    break label$1;
   };
   $2 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
   i64toi32_i32$1 = i64toi32_i32$1;
   $4 = i64toi32_i32$0;
   $4$hi = i64toi32_i32$1;
   label$3 : {
    if (($1 | 0) == (0 | 0)) break label$3;
    memset($2 & 4294967294 | 0 | 0, 0 | 0, $1 << 2 | 0 | 0) | 0;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 12 | 0;
   wasm2js_i32$1 = $2;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$0 = $0 + 4 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  };
  global$0 = $3 + 16 | 0;
 }
 
 function _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_uninitialized_internal__h90afbcf20060402f($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0, $6 = 0, $5 = 0, i64toi32_i32$1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       if (($1 | 0) == (0 | 0)) break label$5;
       std__collections__hash__table__calculate_layout__heca53458de3ef603($3 | 0, $1 | 0);
       $4 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
       if (($4 | 0) == (0 | 0)) break label$4;
       label$6 : {
        $5 = HEAPU32[$3 >> 2] | 0;
        $6 = __rust_alloc($5 | 0, $4 | 0) | 0;
        if ($6) break label$6;
        if ($2) break label$1;
       };
       if (($6 | 0) == (0 | 0)) break label$3;
       $2 = 0;
       wasm2js_i32$0 = $0 + 8 | 0;
       wasm2js_i32$1 = 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $0 + 4 | 0;
       wasm2js_i32$1 = $1 + 4294967295 | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $0 + 12 | 0;
       wasm2js_i32$1 = $6;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       break label$2;
      };
      wasm2js_i32$0 = $0 + 12 | 0;
      wasm2js_i32$1 = 1;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$1 = $0 + 4 | 0;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = 4294967295;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = 0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      $2 = 0;
      break label$2;
     };
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = 0;
     HEAP8[(wasm2js_i32$0 + 1 | 0) >> 0] = wasm2js_i32$1;
     $2 = 1;
     break label$2;
    };
    $2 = 1;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = 1;
    HEAP8[(wasm2js_i32$0 + 1 | 0) >> 0] = wasm2js_i32$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
   global$0 = $3 + 16 | 0;
   return;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($5 | 0, $4 | 0);
  abort();
 }
 
 function _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__rev_drop_buckets__h4e573e417a2e3885($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, $4 = 0, i64toi32_i32$2 = 0, $46 = 0, $59 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 64 | 0;
  global$0 = $1;
  $2 = HEAPU32[$0 >> 2] | 0;
  std__collections__hash__table__calculate_layout__heca53458de3ef603($1 + 8 | 0 | 0, $2 + 1 | 0 | 0);
  label$1 : {
   $3 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   if (($3 | 0) == (0 | 0)) break label$1;
   $0 = (HEAPU32[($0 + 8 | 0) >> 2] | 0) & 4294967294 | 0;
   $4 = $0 + ($2 << 2 | 0) | 0;
   $0 = ($0 + ((HEAPU32[($1 + 16 | 0) >> 2] | 0) + Math_imul($2, 24) | 0) | 0) + 12 | 0;
   label$2 : do {
    label$3 : {
     if ((HEAPU32[$4 >> 2] | 0 | 0) == (0 | 0)) break label$3;
     $2 = ($1 + 48 | 0) + 8 | 0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = HEAPU32[($0 + 4294967292 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $0 + 4294967284 | 0;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $46 = i64toi32_i32$0;
     i64toi32_i32$0 = $1;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $46;
     HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($1 + 8 | 0 | 0, $1 + 48 | 0 | 0);
     _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($1 + 8 | 0 | 0);
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $0;
     i64toi32_i32$1 = HEAPU32[$0 >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $59 = i64toi32_i32$1;
     i64toi32_i32$1 = $1;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $59;
     HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $3 = $3 + 4294967295 | 0;
     _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($1 + 8 | 0 | 0, $1 + 48 | 0 | 0);
     _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($1 + 8 | 0 | 0);
    };
    $4 = $4 + 4294967292 | 0;
    $0 = $0 + 4294967272 | 0;
    if ($3) continue label$2;
    break label$2;
   } while (1);
  };
  global$0 = $1 + 64 | 0;
 }
 
 function _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_uninitialized__h5ec7d0a9a3e1896e($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $13 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_uninitialized_internal__h90afbcf20060402f($2 | 0, $1 | 0, 1 | 0);
  label$1 : {
   if ((HEAPU8[$2 >> 0] | 0 | 0) == (1 | 0)) break label$1;
   i64toi32_i32$0 = HEAPU32[($2 + 4 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
   $13 = i64toi32_i32$0;
   i64toi32_i32$0 = $0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $13;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = $2 + 16 | 0;
   return;
  };
  label$2 : {
   if ((HEAPU8[($2 + 1 | 0) >> 0] | 0 | 0) != (1 | 0)) break label$2;
   std__panicking__begin_panic__h4e65df4d8221a3c1(1048668 | 0, 40 | 0, 1055152 | 0);
   abort();
  };
  std__panicking__begin_panic__h4e65df4d8221a3c1(1048708 | 0, 17 | 0, 1055168 | 0);
  abort();
 }
 
 function _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new__h2374d5b6a2d22074($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $13 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_internal__he2f4ef55b082d46a($2 | 0, $1 | 0, 1 | 0);
  label$1 : {
   if ((HEAPU8[$2 >> 0] | 0 | 0) == (1 | 0)) break label$1;
   i64toi32_i32$0 = HEAPU32[($2 + 4 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
   $13 = i64toi32_i32$0;
   i64toi32_i32$0 = $0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $13;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = $2 + 16 | 0;
   return;
  };
  label$2 : {
   if ((HEAPU8[($2 + 1 | 0) >> 0] | 0 | 0) != (1 | 0)) break label$2;
   std__panicking__begin_panic__h4e65df4d8221a3c1(1048668 | 0, 40 | 0, 1055184 | 0);
   abort();
  };
  std__panicking__begin_panic__h4e65df4d8221a3c1(1048708 | 0, 17 | 0, 1055200 | 0);
  abort();
 }
 
 function _$LT$std__collections__hash__table__Bucket$LT$K$C$$u20$V$C$$u20$M$GT$$GT$__head_bucket__h634046aa87660823($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $6 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  std__collections__hash__table__calculate_layout__heca53458de3ef603($2 | 0, (HEAPU32[$1 >> 2] | 0) + 1 | 0 | 0);
  $3 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  $4 = (HEAPU32[($1 + 8 | 0) >> 2] | 0) & 4294967294 | 0;
  $5 = HEAPU32[$1 >> 2] | 0;
  $6 = 0;
  label$1 : {
   label$2 : do {
    label$3 : {
     $7 = HEAPU32[($4 + ($6 << 2 | 0) | 0) >> 2] | 0;
     if (($7 | 0) == (0 | 0)) break label$3;
     if ((($6 - $7 | 0) & $5 | 0 | 0) == (0 | 0)) break label$1;
    };
    $6 = ($6 + 1 | 0) & $5 | 0;
    continue label$2;
    break label$2;
   } while (1);
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4 + $3 | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hc39faf4470d85a20($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $2 = 0, i64toi32_i32$2 = 0, $5 = 0, $7 = 0, $3 = 0, $4 = 0, $6 = 0, $9 = 0, $8 = 0, $10 = 0, $74 = 0, $82 = 0, $87 = 0, $90 = 0, $11 = 0, $11$hi = 0, $12 = 0, $12$hi = 0, $98 = 0, $140 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 64 | 0;
  global$0 = $2;
  $3 = (HEAPU32[$1 >> 2] | 0) + 1 | 0;
  _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_uninitialized__h5ec7d0a9a3e1896e($2 | 0, $3 | 0);
  std__collections__hash__table__calculate_layout__heca53458de3ef603($2 + 40 | 0 | 0, (HEAPU32[$2 >> 2] | 0) + 1 | 0 | 0);
  $4 = HEAPU32[($2 + 48 | 0) >> 2] | 0;
  $5 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  std__collections__hash__table__calculate_layout__heca53458de3ef603($2 + 40 | 0 | 0, $3 | 0);
  $6 = $5 & 4294967294 | 0;
  $7 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  label$1 : {
   if (($3 | 0) == (0 | 0)) break label$1;
   $5 = $6 + $4 | 0;
   $4 = $7 & 4294967294 | 0;
   $7 = ($4 + (HEAPU32[($2 + 48 | 0) >> 2] | 0) | 0) + 12 | 0;
   $8 = ($2 + 40 | 0) + 12 | 0;
   label$2 : do {
    $9 = HEAPU32[$4 >> 2] | 0;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = $9;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    label$3 : {
     if (($9 | 0) == (0 | 0)) break label$3;
     _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($2 + 40 | 0 | 0, $7 + 4294967284 | 0 | 0);
     _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($2 + 16 | 0 | 0, $7 | 0);
     $9 = ($2 + 16 | 0) + 8 | 0;
     wasm2js_i32$0 = $8 + 8 | 0;
     wasm2js_i32$1 = HEAPU32[$9 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$0 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
     $74 = i64toi32_i32$0;
     i64toi32_i32$0 = $8;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $74;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $10 = ($2 + 16 | 0) + 16 | 0;
     i64toi32_i32$2 = ($2 + 40 | 0) + 16 | 0;
     i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $82 = i64toi32_i32$1;
     i64toi32_i32$1 = $10;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $82;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$2 = ($2 + 40 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $87 = i64toi32_i32$0;
     i64toi32_i32$0 = $9;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $87;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$2 = $2;
     i64toi32_i32$1 = HEAPU32[($2 + 40 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 44 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 45 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 46 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 47 | 0) >> 0] | 0 | 0) << 24);
     $90 = i64toi32_i32$1;
     i64toi32_i32$1 = $2;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $90;
     HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$2 = $9;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     i64toi32_i32$1 = i64toi32_i32$1;
     $11 = i64toi32_i32$0;
     $11$hi = i64toi32_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$1 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
     i64toi32_i32$0 = i64toi32_i32$0;
     $12 = i64toi32_i32$1;
     $12$hi = i64toi32_i32$0;
     i64toi32_i32$2 = $10;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $98 = i64toi32_i32$0;
     i64toi32_i32$0 = $5 + 16 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $98;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = $11$hi;
     i64toi32_i32$0 = $5 + 8 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $11;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$0 = $5;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $12;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    };
    $4 = $4 + 4 | 0;
    $6 = $6 + 4 | 0;
    $7 = $7 + 24 | 0;
    $5 = $5 + 24 | 0;
    $3 = $3 + 4294967295 | 0;
    if ($3) continue label$2;
    break label$2;
   } while (1);
   $5 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
   $6 = $5 & 4294967294 | 0;
   $7 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  };
  $5 = (wasm2js_i32$0 = $5 | 1 | 0, wasm2js_i32$1 = $6, wasm2js_i32$2 = $7 & 1 | 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  wasm2js_i32$0 = $2 + 8 | 0;
  wasm2js_i32$1 = $5;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = $5;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = HEAPU32[$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $140 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $140;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 64 | 0;
 }
 
 function _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hccaa43b317c76f2b($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = global$0 - 16 | 0;
  global$0 = $1;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0 | 0) == (4294967295 | 0)) break label$1;
   _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__rev_drop_buckets__h4e573e417a2e3885($0 | 0);
   std__collections__hash__table__calculate_layout__heca53458de3ef603($1 | 0, (HEAPU32[$0 >> 2] | 0) + 1 | 0 | 0);
   __rust_dealloc((HEAPU32[($0 + 8 | 0) >> 2] | 0) & 4294967294 | 0 | 0, HEAPU32[$1 >> 2] | 0 | 0, HEAPU32[($1 + 4 | 0) >> 2] | 0 | 0);
  };
  global$0 = $1 + 16 | 0;
 }
 
 function _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__h7338f2d81cd2266f($0) {
  $0 = $0 | 0;
  i64toi32_i32$HIGH_BITS = 1757840133;
  return 3493251844 | 0;
 }
 
 function _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2($0) {
  $0 = $0 | 0;
  i64toi32_i32$HIGH_BITS = 286299353;
  return 1890621284 | 0;
 }
 
 function alloc__slice___$LT$impl$u20$alloc__borrow__ToOwned$u20$for$u20$$u5b$T$u5d$$GT$__to_owned__hbcd55da94b695ae8($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $13 = 0, $24 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 32 | 0;
  global$0 = $3;
  _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in__hc380267a36f4307a($3 + 8 | 0 | 0, $2 | 0, 0 | 0);
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $13 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $13;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__vec__Vec$LT$T$GT$$GT$__extend_from_slice__habeb97e2e06a328b($3 + 16 | 0 | 0, $1 | 0, $2 | 0);
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
  $24 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $24;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $3 + 32 | 0;
 }
 
 function core__ops__function__impls___$LT$impl$u20$core__ops__function__FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$__call_once__hd49ab53ab748967e($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $40 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 64 | 0;
  global$0 = $3;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $3 + 44 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3 + 52 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 60 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1055216;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1048728;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $3 + 12 | 0;
  HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $3 + 56 | 0;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  label$1 : {
   if (core__fmt__Write__write_fmt__h7b649ce0cd3c12b8($3 + 16 | 0 | 0, $3 + 32 | 0 | 0) | 0) break label$1;
   _$LT$alloc__vec__Vec$LT$T$GT$$GT$__shrink_to_fit__h463924bb7a9a8a44($3 + 16 | 0 | 0);
   wasm2js_i32$0 = $0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[(($3 + 16 | 0) + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
   $40 = i64toi32_i32$0;
   i64toi32_i32$0 = $0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $40;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   global$0 = $3 + 64 | 0;
   return;
  };
  core__result__unwrap_failed__hb93a220068b847b0(1048764 | 0, 53 | 0);
  abort();
 }
 
 function _$LT$std__thread__local__LocalKey$LT$T$GT$$GT$__with__he38b0091bd712cd5($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$0 = 0, $3 = 0, $3$hi = 0, $18 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  _$LT$std__thread__local__LocalKey$LT$T$GT$$GT$__try_with__h02c72b1f16c31de9($2 + 8 | 0 | 0, $1 | 0);
  label$1 : {
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   i64toi32_i32$1 = i64toi32_i32$1;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$0 = 0;
   i64toi32_i32$3 = 1;
   if ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$1 | 0) == (i64toi32_i32$0 | 0) | 0) break label$1;
   i64toi32_i32$3 = $2;
   i64toi32_i32$2 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
   i64toi32_i32$1 = i64toi32_i32$1;
   $3 = i64toi32_i32$2;
   $3$hi = i64toi32_i32$1;
   i64toi32_i32$3 = $2 + 24 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$3, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $18 = i64toi32_i32$1;
   i64toi32_i32$1 = $0;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $18;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$1 = i64toi32_i32$1;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   global$0 = $2 + 32 | 0;
   return;
  };
  core__result__unwrap_failed__hac3cdff9c6a413ab(1048817 | 0, 57 | 0);
  abort();
 }
 
 function _$LT$std__thread__local__LocalKey$LT$T$GT$$GT$__try_with__h02c72b1f16c31de9($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, $5 = 0, $5$hi = 0, $3 = 0, i64toi32_i32$0 = 0, $2 = 0, $6 = 0, $4 = 0, $6$hi = 0, i64toi32_i32$4 = 0, $46 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
      wasm2js_i32$0 = FUNCTION_TABLE_i[wasm2js_i32$1 & 63]() | 0;
      $3 = wasm2js_i32$0;
      if (($3 | 0) == (0 | 0)) break label$4;
      i64toi32_i32$2 = $3;
      i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      i64toi32_i32$1 = i64toi32_i32$1;
      i64toi32_i32$2 = i64toi32_i32$0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = 1;
      if ((i64toi32_i32$2 | 0) != (i64toi32_i32$3 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$0 | 0) | 0) break label$3;
      $1 = $3 + 16 | 0;
      $4 = $3 + 8 | 0;
      i64toi32_i32$3 = $3;
      i64toi32_i32$2 = HEAPU32[(i64toi32_i32$3 + 16 | 0) >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
      i64toi32_i32$1 = i64toi32_i32$1;
      $5 = i64toi32_i32$2;
      $5$hi = i64toi32_i32$1;
      i64toi32_i32$3 = i64toi32_i32$3;
      i64toi32_i32$1 = HEAPU32[(i64toi32_i32$3 + 8 | 0) >> 2] | 0;
      i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
      i64toi32_i32$2 = i64toi32_i32$2;
      $6 = i64toi32_i32$1;
      $6$hi = i64toi32_i32$2;
      break label$2;
     };
     _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__h29b3f8158ddc4d16();
     i64toi32_i32$2 = 0;
     $5 = 1;
     $5$hi = i64toi32_i32$2;
     break label$1;
    };
    wasm2js_i32$1 = $2;
    wasm2js_i32$0 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    FUNCTION_TABLE_vi[wasm2js_i32$0 & 63](wasm2js_i32$1 | 0);
    i64toi32_i32$3 = $2;
    i64toi32_i32$2 = HEAPU32[(i64toi32_i32$3 + 8 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    $5 = i64toi32_i32$2;
    $5$hi = i64toi32_i32$1;
    i64toi32_i32$3 = i64toi32_i32$3;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$3 >> 2] | 0;
    i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$3, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$2 = i64toi32_i32$2;
    $6 = i64toi32_i32$1;
    $6$hi = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$2;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = i64toi32_i32$2;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $6;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$2;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$2 = 0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = 1;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$2;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $5$hi;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$2 = i64toi32_i32$2;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $5;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$2;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $1 = i64toi32_i32$1 + 16 | 0;
    $4 = i64toi32_i32$1 + 8 | 0;
   };
   i64toi32_i32$2 = $5$hi;
   i64toi32_i32$1 = $1;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $5;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $6$hi;
   i64toi32_i32$1 = $0;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $6;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $46 = $4;
   i64toi32_i32$2 = i64toi32_i32$2;
   i64toi32_i32$2 = i64toi32_i32$2;
   i64toi32_i32$3 = $6;
   i64toi32_i32$1 = 0;
   i64toi32_i32$0 = 1;
   i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
   i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
   if (i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
   i64toi32_i32$3 = $46;
   i64toi32_i32$5 = i64toi32_i32$5;
   wasm2js_i32$0 = i64toi32_i32$3;
   wasm2js_i32$1 = i64toi32_i32$4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$3;
   wasm2js_i32$1 = i64toi32_i32$5;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$5 = $5$hi;
   i64toi32_i32$3 = $0 + 16 | 0;
   i64toi32_i32$5 = i64toi32_i32$5;
   wasm2js_i32$0 = i64toi32_i32$3;
   wasm2js_i32$1 = $5;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$3;
   wasm2js_i32$1 = i64toi32_i32$5;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$5 = 0;
   $5 = 0;
   $5$hi = i64toi32_i32$5;
  };
  i64toi32_i32$5 = $5$hi;
  i64toi32_i32$3 = $0;
  i64toi32_i32$5 = i64toi32_i32$5;
  wasm2js_i32$0 = i64toi32_i32$3;
  wasm2js_i32$1 = $5;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$3;
  wasm2js_i32$1 = i64toi32_i32$5;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 16 | 0;
 }
 
 function std__panicking__begin_panic__h4e65df4d8221a3c1($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  std__panicking__rust_panic_with_hook__hef258360d235bb02($3 + 8 | 0 | 0, 1055224 | 0, 0 | 0, $2 | 0);
  abort();
 }
 
 function core__ptr__drop_in_place__h1bb3fe0e45cbb3c8($0) {
  $0 = $0 | 0;
 }
 
 function core__ptr__drop_in_place__hc4a8ade37b42b249($0) {
  $0 = $0 | 0;
 }
 
 function core__ptr__drop_in_place__hd414c6d9d0659554($0) {
  $0 = $0 | 0;
 }
 
 function core__ptr__drop_in_place__he76d036466373bce($0) {
  $0 = $0 | 0;
 }
 
 function _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__get__hfd25fc8dfec9b2b9($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $2 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = (wasm2js_i32$2 = 1055244, wasm2js_i32$3 = 1055260, wasm2js_i32$4 = $2, wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3);
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = (wasm2js_i32$2 = $1, wasm2js_i32$3 = 1048874, wasm2js_i32$4 = $2, wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3);
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    label$3 : {
     if (($2 | 0) == (0 | 0)) break label$3;
     $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
     $1 = __rust_alloc(8 | 0, 4 | 0) | 0;
     if (($1 | 0) == (0 | 0)) break label$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $2;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $2 = 1055244;
     break label$2;
    };
    $1 = 1;
    $2 = 1055260;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   return;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618(8 | 0, 4 | 0);
  abort();
 }
 
 function _$LT$wasm_bindgen__convert__GlobalStack$u20$as$u20$wasm_bindgen__convert__traits__Stack$GT$__push__h2b9a21a23b110842($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0) >>> 0 >= 16 >>> 0) break label$1;
   wasm2js_i32$0 = (__wbindgen_global_argument_ptr() | 0) + ((HEAPU32[$0 >> 2] | 0) << 2 | 0) | 0;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) + 1 | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   return;
  };
  core__panicking__panic__h629a30fc6a0298aa(1055276 | 0);
  abort();
 }
 
 function dbapp__candidate_keys__ha290f762696781e7($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $21 = 0, $29 = 0, $36 = 0, $39 = 0, $4 = 0, $71 = 0, $107 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 128 | 0;
  global$0 = $3;
  _$LT$dbapp__functional_dependencies__DependencySet$u20$as$u20$core__str__FromStr$GT$__from_str__h02f3f6eae982459c($3 + 88 | 0 | 0, $1 | 0, $2 | 0);
  label$1 : {
   label$2 : {
    if ((HEAPU32[($3 + 112 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$2;
    i64toi32_i32$2 = ($3 + 88 | 0) + 24 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $21 = i64toi32_i32$0;
    i64toi32_i32$0 = ($3 + 8 | 0) + 24 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $21;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $2 = ($3 + 8 | 0) + 16 | 0;
    i64toi32_i32$2 = ($3 + 88 | 0) + 16 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $29 = i64toi32_i32$1;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $29;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = ($3 + 88 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $36 = i64toi32_i32$0;
    i64toi32_i32$0 = ($3 + 8 | 0) + 8 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $36;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAPU32[($3 + 88 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 92 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 93 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 94 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 95 | 0) >> 0] | 0 | 0) << 24);
    $39 = i64toi32_i32$1;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $39;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    dbapp__functional_dependencies__DependencySet__effective_attributes__h5265051ebdcbfb37($3 + 72 | 0 | 0, $3 + 8 | 0 | 0);
    dbapp__functional_dependencies__DependencySet__candidate_keys__h0df0125f28a114f5($3 + 56 | 0 | 0, $3 + 8 | 0 | 0, $3 + 72 | 0 | 0);
    $1 = HEAPU32[($3 + 56 | 0) >> 2] | 0;
    $4 = HEAPU32[($3 + 64 | 0) >> 2] | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 96 | 0) >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = 4;
    HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 92 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 93 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 94 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 95 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$T$C$$u20$I$GT$$GT$__spec_extend__h46a6ac0bfbe895d5($3 + 88 | 0 | 0, $1 | 0, $1 + Math_imul($4, 12) | 0 | 0);
    $1 = ($3 + 40 | 0) + 8 | 0;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = HEAPU32[($3 + 96 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $3;
    i64toi32_i32$0 = HEAPU32[($3 + 88 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 92 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 93 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 94 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 95 | 0) >> 0] | 0 | 0) << 24);
    $71 = i64toi32_i32$0;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $71;
    HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 44 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 45 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 46 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 47 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    alloc__str__join_generic_copy__haaa3ad8152f8a1ad($0 | 0, HEAPU32[($3 + 40 | 0) >> 2] | 0 | 0, HEAPU32[$1 >> 2] | 0 | 0, 1049019 | 0, 1 | 0);
    _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hccaa43b317c76f2b($2 | 0);
    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hed8cc4d2839fdcaa($3 + 40 | 0 | 0);
    label$3 : {
     $0 = HEAPU32[($3 + 44 | 0) >> 2] | 0;
     if (($0 | 0) == (0 | 0)) break label$3;
     __rust_dealloc(HEAPU32[($3 + 40 | 0) >> 2] | 0 | 0, Math_imul($0, 12) | 0, 4 | 0);
    };
    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h61ebf0b8ba547d5f($3 + 56 | 0 | 0);
    label$4 : {
     $0 = HEAPU32[($3 + 60 | 0) >> 2] | 0;
     if (($0 | 0) == (0 | 0)) break label$4;
     __rust_dealloc(HEAPU32[($3 + 56 | 0) >> 2] | 0 | 0, Math_imul($0, 12) | 0, 4 | 0);
    };
    wasm2js_i32$0 = ($3 + 8 | 0) + 8 | 0;
    wasm2js_i32$1 = HEAPU32[(($3 + 72 | 0) + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAPU32[($3 + 72 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 76 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 77 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 78 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 79 | 0) >> 0] | 0 | 0) << 24);
    $107 = i64toi32_i32$1;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $107;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 88 | 0 | 0, $3 + 8 | 0 | 0);
    _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 88 | 0 | 0);
    break label$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  global$0 = $3 + 128 | 0;
 }
 
 function candidate_keys($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $21 = 0, $30 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 48 | 0;
  global$0 = $3;
  dbapp__candidate_keys__ha290f762696781e7($3 + 16 | 0 | 0, $1 | 0, $2 | 0);
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($3 + 32 | 0) + 8 | 0;
  wasm2js_i32$1 = HEAPU32[(($3 + 16 | 0) + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
  $21 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $21;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm_bindgen__convert__impls___$LT$impl$u20$wasm_bindgen__convert__traits__IntoWasmAbi$u20$for$u20$core__option__Option$LT$T$GT$$GT$__into_abi__h10b0a020347e5b14($3 + 8 | 0 | 0, $3 + 32 | 0 | 0, $3 + 28 | 0 | 0, 1055300 | 0);
  i64toi32_i32$1 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $30 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $30;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $3 + 48 | 0;
 }
 
 function wasm_bindgen__convert__impls___$LT$impl$u20$wasm_bindgen__convert__traits__IntoWasmAbi$u20$for$u20$core__option__Option$LT$T$GT$$GT$__into_abi__h10b0a020347e5b14($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, i64toi32_i32$1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $4 = global$0 - 32 | 0;
  global$0 = $4;
  label$1 : {
   label$2 : {
    if ((HEAPU32[$1 >> 2] | 0 | 0) == (0 | 0)) break label$2;
    wasm2js_i32$0 = ($4 + 16 | 0) + 8 | 0;
    wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm_bindgen__convert__slices___$LT$impl$u20$wasm_bindgen__convert__traits__IntoWasmAbi$u20$for$u20$alloc__vec__Vec$LT$T$GT$$GT$__into_abi__hf9675d4f9a77ef51($4 + 8 | 0 | 0, $4 + 16 | 0 | 0, $2 | 0, $3 | 0);
    $1 = HEAPU32[($4 + 12 | 0) >> 2] | 0;
    $2 = HEAPU32[($4 + 8 | 0) >> 2] | 0;
    break label$1;
   };
   wasm_bindgen__convert__slices___$LT$impl$u20$wasm_bindgen__convert__traits__OptionIntoWasmAbi$u20$for$u20$alloc__string__String$GT$__none__h0f48855ca2510179($4 | 0);
   $1 = HEAPU32[($4 + 4 | 0) >> 2] | 0;
   $2 = HEAPU32[$4 >> 2] | 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  global$0 = $4 + 32 | 0;
 }
 
 function _$LT$std__collections__hash__map__DefaultHasher$u20$as$u20$core__hash__Hasher$GT$__write__h48b3b4b166bc02b9_20_28_llvm_908532883051983360_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$4 = 0, i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, $7$hi = 0, $7 = 0, $8$hi = 0, $4 = 0, $10$hi = 0, $8 = 0, $5 = 0, $10 = 0, $9$hi = 0, $9 = 0, $3 = 0, $6 = 0, $11$hi = 0, $11 = 0, $12$hi = 0, $76 = 0, $77 = 0, $78 = 0, $12 = 0, $79 = 0, $80 = 0, $41$hi = 0, $44$hi = 0, $45$hi = 0, $56$hi = 0, $59$hi = 0, $60$hi = 0, $63 = 0, $65 = 0, $65$hi = 0, $70$hi = 0, $71$hi = 0, $84 = 0, $88 = 0, $88$hi = 0, $92$hi = 0, $97 = 0, $97$hi = 0, $101 = 0, $101$hi = 0, $104 = 0, $104$hi = 0, $112 = 0, $112$hi = 0, $113 = 0, $116 = 0, $117 = 0, $120 = 0, $120$hi = 0, $123 = 0, $123$hi = 0, $126 = 0, $126$hi = 0, $129 = 0, $133 = 0, $166 = 0, $166$hi = 0, $172 = 0, $172$hi = 0, $178 = 0, $178$hi = 0, $181$hi = 0, $185 = 0, $185$hi = 0, $188 = 0, $188$hi = 0, $229$hi = 0, $232$hi = 0, $233$hi = 0, $246$hi = 0, $249$hi = 0, $250$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = (HEAPU32[($0 + 56 | 0) >> 2] | 0) + $2 | 0;
  HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       $3 = HEAPU32[($0 + 60 | 0) >> 2] | 0;
       if (($3 | 0) == (0 | 0)) break label$5;
       $4 = 4;
       $5 = 8 - $3 | 0;
       $6 = (wasm2js_i32$0 = $5, wasm2js_i32$1 = $2, wasm2js_i32$2 = $5 >>> 0 < $2 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
       if ($6 >>> 0 < 4 >>> 0) break label$4;
       i64toi32_i32$2 = $1;
       i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[wasm2js_i32$0 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 1 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 2 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 3 | 0) >> 0] | 0 | 0) << 24);
       i64toi32_i32$1 = 0;
       i64toi32_i32$1 = i64toi32_i32$1;
       $7 = i64toi32_i32$0;
       $7$hi = i64toi32_i32$1;
       break label$3;
      };
      $5 = 0;
      break label$2;
     };
     $4 = 0;
     i64toi32_i32$1 = 0;
     $7 = 0;
     $7$hi = i64toi32_i32$1;
    };
    label$6 : {
     if (($4 | 1 | 0) >>> 0 >= $6 >>> 0) break label$6;
     i64toi32_i32$2 = $1 + $4 | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[wasm2js_i32$0 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 1 | 0) >> 0] | 0 | 0) << 8);
     i64toi32_i32$0 = 0;
     $41$hi = i64toi32_i32$0;
     i64toi32_i32$0 = 0;
     $44$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $41$hi;
     i64toi32_i32$2 = i64toi32_i32$1;
     i64toi32_i32$1 = $44$hi;
     i64toi32_i32$3 = $4 << 3 | 0;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
      $76 = 0;
     } else {
      i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
      $76 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     }
     $45$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$1 = $45$hi;
     i64toi32_i32$0 = $76;
     i64toi32_i32$2 = $7$hi;
     i64toi32_i32$3 = $7;
     i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
     i64toi32_i32$2 = i64toi32_i32$2;
     $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
     $7$hi = i64toi32_i32$2;
     $4 = $4 | 2 | 0;
    };
    label$7 : {
     if ($4 >>> 0 >= $6 >>> 0) break label$7;
     i64toi32_i32$1 = $1 + $4 | 0;
     i64toi32_i32$2 = HEAPU8[i64toi32_i32$1 >> 0] | 0;
     i64toi32_i32$0 = 0;
     $56$hi = i64toi32_i32$0;
     i64toi32_i32$0 = 0;
     $59$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $56$hi;
     i64toi32_i32$1 = i64toi32_i32$2;
     i64toi32_i32$2 = $59$hi;
     i64toi32_i32$3 = $4 << 3 | 0;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
      $77 = 0;
     } else {
      i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
      $77 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
     }
     $60$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $7$hi;
     i64toi32_i32$2 = $60$hi;
     i64toi32_i32$0 = $77;
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$3 = $7;
     i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
     $7$hi = i64toi32_i32$1;
    };
    $63 = $0;
    i64toi32_i32$2 = $0;
    i64toi32_i32$1 = HEAPU32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
    $65 = i64toi32_i32$1;
    $65$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$0 = 0;
    $70$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$2 = $7;
    i64toi32_i32$1 = $70$hi;
    i64toi32_i32$3 = ($3 << 3 | 0) & 56 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     $78 = 0;
    } else {
     i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $78 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
    }
    $71$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $65$hi;
    i64toi32_i32$0 = $65;
    i64toi32_i32$2 = $71$hi;
    i64toi32_i32$3 = $78;
    i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
    i64toi32_i32$2 = i64toi32_i32$2;
    $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
    $7$hi = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$2;
    i64toi32_i32$0 = $63;
    i64toi32_i32$2 = i64toi32_i32$2;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $7;
    HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$2;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    label$8 : {
     if ($5 >>> 0 <= $2 >>> 0) break label$8;
     $4 = $3 + $2 | 0;
     break label$1;
    };
    wasm2js_i32$0 = $0 + 60 | 0;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $4 = $0 + 32 | 0;
    $84 = $4;
    $3 = $0 + 24 | 0;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $88 = i64toi32_i32$2;
    $88$hi = i64toi32_i32$0;
    $6 = $0 + 40 | 0;
    i64toi32_i32$1 = $6;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $92$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $7$hi;
    i64toi32_i32$2 = $92$hi;
    i64toi32_i32$1 = i64toi32_i32$0;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$3 = $7;
    i64toi32_i32$0 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    $8 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
    $8$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$0 = $88$hi;
    i64toi32_i32$2 = $88;
    i64toi32_i32$1 = $8$hi;
    i64toi32_i32$3 = $8;
    i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
    i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
    i64toi32_i32$5 = i64toi32_i32$5;
    $9 = i64toi32_i32$4;
    $9$hi = i64toi32_i32$5;
    i64toi32_i32$5 = i64toi32_i32$5;
    $97 = i64toi32_i32$4;
    $97$hi = i64toi32_i32$5;
    i64toi32_i32$0 = $4;
    i64toi32_i32$5 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$2 = i64toi32_i32$2;
    $10 = i64toi32_i32$5;
    $10$hi = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$2;
    i64toi32_i32$5 = 0;
    i64toi32_i32$5 = __wasm_rotl_i64($10 | 0, i64toi32_i32$2 | 0, 13 | 0, i64toi32_i32$5 | 0) | 0;
    i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
    $101 = i64toi32_i32$5;
    $101$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $10$hi;
    i64toi32_i32$0 = $0;
    i64toi32_i32$2 = HEAPU32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
    i64toi32_i32$5 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
    $104 = i64toi32_i32$2;
    $104$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $10$hi;
    i64toi32_i32$0 = $10;
    i64toi32_i32$2 = $104$hi;
    i64toi32_i32$3 = $104;
    i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
    i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
    if (i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0;
    i64toi32_i32$4 = i64toi32_i32$4;
    $10 = i64toi32_i32$1;
    $10$hi = i64toi32_i32$4;
    i64toi32_i32$4 = i64toi32_i32$4;
    i64toi32_i32$4 = $101$hi;
    i64toi32_i32$5 = $101;
    i64toi32_i32$0 = $10$hi;
    i64toi32_i32$3 = i64toi32_i32$1;
    i64toi32_i32$0 = i64toi32_i32$4 ^ i64toi32_i32$0 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    $11 = i64toi32_i32$5 ^ i64toi32_i32$1 | 0;
    $11$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$0 = $97$hi;
    i64toi32_i32$4 = $97;
    i64toi32_i32$5 = $11$hi;
    i64toi32_i32$3 = $11;
    i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
    i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
    if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    $12 = i64toi32_i32$2;
    $12$hi = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$1 = $11$hi;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$4 = 0;
    i64toi32_i32$4 = __wasm_rotl_i64($11 | 0, i64toi32_i32$1 | 0, 17 | 0, i64toi32_i32$4 | 0) | 0;
    i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
    $112 = i64toi32_i32$4;
    $112$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $12$hi;
    i64toi32_i32$0 = i64toi32_i32$2;
    i64toi32_i32$4 = $112$hi;
    i64toi32_i32$3 = $112;
    i64toi32_i32$4 = i64toi32_i32$1 ^ i64toi32_i32$4 | 0;
    $113 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
    i64toi32_i32$0 = $84;
    i64toi32_i32$4 = i64toi32_i32$4;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $113;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$4;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$4 = i64toi32_i32$1;
    i64toi32_i32$4 = i64toi32_i32$1;
    i64toi32_i32$0 = 0;
    i64toi32_i32$0 = __wasm_rotl_i64(i64toi32_i32$2 | 0, i64toi32_i32$1 | 0, 32 | 0, i64toi32_i32$0 | 0) | 0;
    i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
    $116 = i64toi32_i32$0;
    i64toi32_i32$0 = $3;
    i64toi32_i32$4 = i64toi32_i32$4;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $116;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$4;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $117 = $6;
    i64toi32_i32$4 = $9$hi;
    i64toi32_i32$4 = $8$hi;
    i64toi32_i32$4 = i64toi32_i32$4;
    i64toi32_i32$0 = 0;
    i64toi32_i32$0 = __wasm_rotl_i64($8 | 0, i64toi32_i32$4 | 0, 16 | 0, i64toi32_i32$0 | 0) | 0;
    i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
    $120 = i64toi32_i32$0;
    $120$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $9$hi;
    i64toi32_i32$1 = $9;
    i64toi32_i32$0 = $120$hi;
    i64toi32_i32$3 = $120;
    i64toi32_i32$0 = i64toi32_i32$4 ^ i64toi32_i32$0 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    $8 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
    $8$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = 0;
    i64toi32_i32$1 = __wasm_rotl_i64($8 | 0, i64toi32_i32$0 | 0, 21 | 0, i64toi32_i32$1 | 0) | 0;
    i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
    $123 = i64toi32_i32$1;
    $123$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $8$hi;
    i64toi32_i32$0 = $10$hi;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = 0;
    i64toi32_i32$1 = __wasm_rotl_i64($10 | 0, i64toi32_i32$0 | 0, 32 | 0, i64toi32_i32$1 | 0) | 0;
    i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
    $126 = i64toi32_i32$1;
    $126$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $8$hi;
    i64toi32_i32$4 = $8;
    i64toi32_i32$1 = $126$hi;
    i64toi32_i32$3 = $126;
    i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
    i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
    if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0;
    i64toi32_i32$2 = i64toi32_i32$2;
    $8 = i64toi32_i32$5;
    $8$hi = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$2;
    i64toi32_i32$2 = $123$hi;
    i64toi32_i32$0 = $123;
    i64toi32_i32$4 = $8$hi;
    i64toi32_i32$3 = i64toi32_i32$5;
    i64toi32_i32$4 = i64toi32_i32$2 ^ i64toi32_i32$4 | 0;
    $129 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
    i64toi32_i32$0 = $117;
    i64toi32_i32$4 = i64toi32_i32$4;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $129;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$4;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$4 = $8$hi;
    i64toi32_i32$4 = $7$hi;
    i64toi32_i32$4 = $8$hi;
    i64toi32_i32$2 = i64toi32_i32$3;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$3 = $7;
    i64toi32_i32$0 = i64toi32_i32$4 ^ i64toi32_i32$0 | 0;
    $133 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
    i64toi32_i32$2 = $0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = $133;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   };
   label$9 : {
    $2 = $2 - $5 | 0;
    $4 = $2 & 7 | 0;
    $2 = $2 - $4 | 0;
    if ($5 >>> 0 >= $2 >>> 0) break label$9;
    i64toi32_i32$4 = $0 + 24 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$4 >> 2] | 0;
    i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$4, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$2 = i64toi32_i32$2;
    $8 = i64toi32_i32$0;
    $8$hi = i64toi32_i32$2;
    i64toi32_i32$4 = $0 + 32 | 0;
    i64toi32_i32$2 = HEAPU32[i64toi32_i32$4 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$4, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $7 = i64toi32_i32$2;
    $7$hi = i64toi32_i32$0;
    i64toi32_i32$4 = $0 + 40 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$4 >> 2] | 0;
    i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$4, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$2 = i64toi32_i32$2;
    $9 = i64toi32_i32$0;
    $9$hi = i64toi32_i32$2;
    i64toi32_i32$4 = $0;
    i64toi32_i32$2 = HEAPU32[(i64toi32_i32$4 + 16 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$4, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $10 = i64toi32_i32$2;
    $10$hi = i64toi32_i32$0;
    label$10 : do {
     i64toi32_i32$4 = $1 + $5 | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$4, HEAPU8[wasm2js_i32$0 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 1 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 2 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 3 | 0) >> 0] | 0 | 0) << 24);
     i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$4, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     i64toi32_i32$2 = i64toi32_i32$2;
     $11 = i64toi32_i32$0;
     $11$hi = i64toi32_i32$2;
     i64toi32_i32$2 = i64toi32_i32$2;
     i64toi32_i32$2 = $9$hi;
     i64toi32_i32$2 = $11$hi;
     i64toi32_i32$4 = i64toi32_i32$0;
     i64toi32_i32$0 = $9$hi;
     i64toi32_i32$3 = $9;
     i64toi32_i32$0 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
     i64toi32_i32$0 = i64toi32_i32$0;
     $9 = i64toi32_i32$4 ^ i64toi32_i32$3 | 0;
     $9$hi = i64toi32_i32$0;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$0 = $8$hi;
     i64toi32_i32$0 = $9$hi;
     i64toi32_i32$2 = $9;
     i64toi32_i32$4 = $8$hi;
     i64toi32_i32$3 = $8;
     i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
     i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
     i64toi32_i32$5 = i64toi32_i32$5;
     $8 = i64toi32_i32$1;
     $8$hi = i64toi32_i32$5;
     i64toi32_i32$5 = i64toi32_i32$5;
     $166 = i64toi32_i32$1;
     $166$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $10$hi;
     i64toi32_i32$5 = $7$hi;
     i64toi32_i32$5 = $10$hi;
     i64toi32_i32$0 = $10;
     i64toi32_i32$2 = $7$hi;
     i64toi32_i32$3 = $7;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
     i64toi32_i32$1 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     $10 = i64toi32_i32$4;
     $10$hi = i64toi32_i32$1;
     i64toi32_i32$1 = i64toi32_i32$1;
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$1 = i64toi32_i32$1;
     i64toi32_i32$0 = 0;
     i64toi32_i32$0 = __wasm_rotl_i64($7 | 0, i64toi32_i32$1 | 0, 13 | 0, i64toi32_i32$0 | 0) | 0;
     i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
     $172 = i64toi32_i32$0;
     $172$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $10$hi;
     i64toi32_i32$5 = i64toi32_i32$4;
     i64toi32_i32$0 = $172$hi;
     i64toi32_i32$3 = $172;
     i64toi32_i32$0 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
     i64toi32_i32$0 = i64toi32_i32$0;
     $7 = i64toi32_i32$4 ^ i64toi32_i32$3 | 0;
     $7$hi = i64toi32_i32$0;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$0 = $166$hi;
     i64toi32_i32$1 = $166;
     i64toi32_i32$5 = $7$hi;
     i64toi32_i32$3 = $7;
     i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
     if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0;
     i64toi32_i32$4 = i64toi32_i32$4;
     $12 = i64toi32_i32$2;
     $12$hi = i64toi32_i32$4;
     i64toi32_i32$4 = i64toi32_i32$4;
     i64toi32_i32$4 = $7$hi;
     i64toi32_i32$4 = i64toi32_i32$4;
     i64toi32_i32$1 = 0;
     i64toi32_i32$1 = __wasm_rotl_i64($7 | 0, i64toi32_i32$4 | 0, 17 | 0, i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
     $178 = i64toi32_i32$1;
     $178$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $12$hi;
     i64toi32_i32$0 = i64toi32_i32$2;
     i64toi32_i32$1 = $178$hi;
     i64toi32_i32$3 = $178;
     i64toi32_i32$1 = i64toi32_i32$4 ^ i64toi32_i32$1 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     $7 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
     $7$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $9$hi;
     i64toi32_i32$1 = i64toi32_i32$1;
     i64toi32_i32$0 = 0;
     i64toi32_i32$0 = __wasm_rotl_i64($9 | 0, i64toi32_i32$1 | 0, 16 | 0, i64toi32_i32$0 | 0) | 0;
     i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
     $181$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $8$hi;
     i64toi32_i32$1 = $181$hi;
     i64toi32_i32$4 = i64toi32_i32$0;
     i64toi32_i32$0 = $8$hi;
     i64toi32_i32$3 = $8;
     i64toi32_i32$0 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
     i64toi32_i32$0 = i64toi32_i32$0;
     $8 = i64toi32_i32$4 ^ i64toi32_i32$3 | 0;
     $8$hi = i64toi32_i32$0;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$4 = 0;
     i64toi32_i32$4 = __wasm_rotl_i64($8 | 0, i64toi32_i32$0 | 0, 21 | 0, i64toi32_i32$4 | 0) | 0;
     i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
     $185 = i64toi32_i32$4;
     $185$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $8$hi;
     i64toi32_i32$0 = $10$hi;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$4 = 0;
     i64toi32_i32$4 = __wasm_rotl_i64($10 | 0, i64toi32_i32$0 | 0, 32 | 0, i64toi32_i32$4 | 0) | 0;
     i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
     $188 = i64toi32_i32$4;
     $188$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $8$hi;
     i64toi32_i32$1 = $8;
     i64toi32_i32$4 = $188$hi;
     i64toi32_i32$3 = $188;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
     i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0;
     i64toi32_i32$2 = i64toi32_i32$2;
     $10 = i64toi32_i32$5;
     $10$hi = i64toi32_i32$2;
     i64toi32_i32$2 = i64toi32_i32$2;
     i64toi32_i32$2 = $185$hi;
     i64toi32_i32$0 = $185;
     i64toi32_i32$1 = $10$hi;
     i64toi32_i32$3 = i64toi32_i32$5;
     i64toi32_i32$1 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     $9 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
     $9$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$1 = i64toi32_i32$1;
     i64toi32_i32$0 = 0;
     i64toi32_i32$0 = __wasm_rotl_i64($12 | 0, i64toi32_i32$1 | 0, 32 | 0, i64toi32_i32$0 | 0) | 0;
     i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
     i64toi32_i32$1 = i64toi32_i32$1;
     $8 = i64toi32_i32$0;
     $8$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $10$hi;
     i64toi32_i32$1 = $11$hi;
     i64toi32_i32$1 = $10$hi;
     i64toi32_i32$2 = i64toi32_i32$3;
     i64toi32_i32$0 = $11$hi;
     i64toi32_i32$3 = $11;
     i64toi32_i32$0 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
     i64toi32_i32$0 = i64toi32_i32$0;
     $10 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
     $10$hi = i64toi32_i32$0;
     $5 = $5 + 8 | 0;
     if ($5 >>> 0 < $2 >>> 0) continue label$10;
     break label$10;
    } while (1);
    i64toi32_i32$0 = $10$hi;
    i64toi32_i32$2 = $0 + 16 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = $10;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = $9$hi;
    i64toi32_i32$2 = $0 + 40 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = $9;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$2 = $0 + 32 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = $7;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = $8$hi;
    i64toi32_i32$2 = $0 + 24 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = $8;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   };
   $2 = 4;
   label$11 : {
    label$12 : {
     if ($4 >>> 0 < 4 >>> 0) break label$12;
     i64toi32_i32$1 = $1 + $5 | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[wasm2js_i32$0 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 1 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 2 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 3 | 0) >> 0] | 0 | 0) << 24);
     i64toi32_i32$2 = 0;
     i64toi32_i32$2 = i64toi32_i32$2;
     $7 = i64toi32_i32$0;
     $7$hi = i64toi32_i32$2;
     break label$11;
    };
    $2 = 0;
    i64toi32_i32$2 = 0;
    $7 = 0;
    $7$hi = i64toi32_i32$2;
   };
   label$13 : {
    if (($2 | 1 | 0) >>> 0 >= $4 >>> 0) break label$13;
    i64toi32_i32$1 = $1 + ($2 + $5 | 0) | 0;
    i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[wasm2js_i32$0 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 1 | 0) >> 0] | 0 | 0) << 8);
    i64toi32_i32$0 = 0;
    $229$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    $232$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $229$hi;
    i64toi32_i32$1 = i64toi32_i32$2;
    i64toi32_i32$2 = $232$hi;
    i64toi32_i32$3 = $2 << 3 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
     $79 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $79 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
    }
    $233$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $7$hi;
    i64toi32_i32$2 = $233$hi;
    i64toi32_i32$0 = $79;
    i64toi32_i32$1 = $7$hi;
    i64toi32_i32$3 = $7;
    i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
    $7$hi = i64toi32_i32$1;
    $2 = $2 | 2 | 0;
   };
   label$14 : {
    if ($2 >>> 0 >= $4 >>> 0) break label$14;
    i64toi32_i32$2 = $1 + ($2 + $5 | 0) | 0;
    i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0;
    i64toi32_i32$0 = 0;
    $246$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    $249$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $246$hi;
    i64toi32_i32$2 = i64toi32_i32$1;
    i64toi32_i32$1 = $249$hi;
    i64toi32_i32$3 = $2 << 3 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     $80 = 0;
    } else {
     i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $80 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
    }
    $250$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $7$hi;
    i64toi32_i32$1 = $250$hi;
    i64toi32_i32$0 = $80;
    i64toi32_i32$2 = $7$hi;
    i64toi32_i32$3 = $7;
    i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
    i64toi32_i32$2 = i64toi32_i32$2;
    $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
    $7$hi = i64toi32_i32$2;
   };
   i64toi32_i32$2 = $7$hi;
   i64toi32_i32$0 = $0;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $7;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  };
  wasm2js_i32$0 = $0 + 60 | 0;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$core__iter__Cloned$LT$I$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h402338f29c5335db($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   $1 = _$LT$alloc__collections__btree__set__Difference$LT$$u27$a$C$$u20$T$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__hfd0fed06519fd9d2($1 | 0) | 0;
   if (($1 | 0) == (0 | 0)) break label$1;
   _$LT$alloc__string__String$u20$as$u20$core__clone__Clone$GT$__clone__h67225b6b9d7ffedf($0 | 0, $1 | 0);
   return;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$core__iter__Cloned$LT$I$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__hd01a44f189605f63($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   $1 = _$LT$alloc__collections__btree__set__Union$LT$$u27$a$C$$u20$T$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h62f35f713a3a70e2($1 | 0) | 0;
   if (($1 | 0) == (0 | 0)) break label$1;
   _$LT$alloc__string__String$u20$as$u20$core__clone__Clone$GT$__clone__h67225b6b9d7ffedf($0 | 0, $1 | 0);
   return;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$core__iter__Map$LT$I$C$$u20$F$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__fold__h8635d67efe84bbf9($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $4 = 0, $9 = 0, $8 = 0, $5 = 0, $6 = 0, $7 = 0, $63 = 0, $70 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 64 | 0;
  global$0 = $3;
  $4 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  $5 = HEAPU32[($2 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if (($0 | 0) == ($1 | 0)) break label$2;
    $2 = HEAPU32[$2 >> 2] | 0;
    $6 = $3 + 52 | 0;
    $7 = $3 + 48 | 0;
    label$3 : do {
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $0;
     HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
     $8 = ($3 + 16 | 0) + 8 | 0;
     wasm2js_i32$0 = $8;
     wasm2js_i32$1 = 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = $3;
     i64toi32_i32$0 = 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = 1;
     HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $9 = ($3 + 32 | 0) + 8 | 0;
     wasm2js_i32$0 = $9;
     wasm2js_i32$1 = 1049020;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = ($3 + 32 | 0) + 12 | 0;
     wasm2js_i32$1 = 1;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $6;
     wasm2js_i32$1 = 1;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = 11;
     HEAP32[(wasm2js_i32$0 + 60 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = 1055316;
     HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = 1;
     HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $7;
     wasm2js_i32$1 = $3 + 56 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $3 + 12 | 0;
     HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
     if (core__fmt__Write__write_fmt__h7b649ce0cd3c12b8($3 + 16 | 0 | 0, $3 + 32 | 0 | 0) | 0) break label$1;
     _$LT$alloc__vec__Vec$LT$T$GT$$GT$__shrink_to_fit__h463924bb7a9a8a44($3 + 16 | 0 | 0);
     wasm2js_i32$0 = $9;
     wasm2js_i32$1 = HEAPU32[$8 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$0 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
     $63 = i64toi32_i32$0;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $63;
     HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $2 + 8 | 0;
     wasm2js_i32$1 = HEAPU32[$9 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = HEAPU32[($3 + 32 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
     $70 = i64toi32_i32$1;
     i64toi32_i32$1 = $2;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $70;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $4 = $4 + 1 | 0;
     $2 = $2 + 12 | 0;
     $0 = $0 + 12 | 0;
     if (($1 | 0) != ($0 | 0)) continue label$3;
     break label$3;
    } while (1);
   };
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = $4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = $3 + 64 | 0;
   return;
  };
  core__result__unwrap_failed__hb93a220068b847b0(1049056 | 0, 53 | 0);
  abort();
 }
 
 function _$LT$core__iter__Map$LT$I$C$$u20$F$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__try_fold__h273b44610091965d($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $6 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = global$0 - 48 | 0;
  global$0 = $3;
  $4 = $1 + 4 | 0;
  label$1 : {
   label$2 : {
    label$3 : do {
     $5 = HEAPU32[$4 >> 2] | 0;
     $6 = HEAPU32[$1 >> 2] | 0;
     if (($5 - $6 | 0) >>> 0 <= 47 >>> 0) break label$2;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $6 + 12 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($3 + 32 | 0 | 0, $6 | 0);
     $7 = 0;
     label$4 : {
      $6 = $2 + (HEAPU32[($3 + 36 | 0) >> 2] | 0) | 0;
      if ($6 >>> 0 < $2 >>> 0) break label$4;
      $2 = HEAPU32[$1 >> 2] | 0;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = $2 + 12 | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($3 + 24 | 0 | 0, $2 | 0);
      $2 = $6 + (HEAPU32[($3 + 28 | 0) >> 2] | 0) | 0;
      if ($2 >>> 0 < $6 >>> 0) break label$4;
      $6 = HEAPU32[$1 >> 2] | 0;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = $6 + 12 | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($3 + 16 | 0 | 0, $6 | 0);
      $6 = $2 + (HEAPU32[($3 + 20 | 0) >> 2] | 0) | 0;
      if ($6 >>> 0 < $2 >>> 0) break label$4;
      $2 = HEAPU32[$1 >> 2] | 0;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = $2 + 12 | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($3 + 8 | 0 | 0, $2 | 0);
      $2 = $6 + (HEAPU32[($3 + 12 | 0) >> 2] | 0) | 0;
      if ($2 >>> 0 >= $6 >>> 0) continue label$3;
      break label$1;
     };
     break label$3;
    } while (1);
    break label$1;
   };
   $7 = 1;
   if (($6 | 0) == ($5 | 0)) break label$1;
   $5 = $1 + 4 | 0;
   label$5 : {
    label$6 : do {
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $6 + 12 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($3 + 40 | 0 | 0, $6 | 0);
     $4 = $2 + (HEAPU32[($3 + 44 | 0) >> 2] | 0) | 0;
     if ($4 >>> 0 < $2 >>> 0) break label$5;
     $2 = $4;
     $6 = HEAPU32[$1 >> 2] | 0;
     if (($6 | 0) != (HEAPU32[$5 >> 2] | 0 | 0)) continue label$6;
     break label$6;
    } while (1);
    $2 = $4;
    break label$1;
   };
   $7 = 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $7;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $3 + 48 | 0;
 }
 
 function _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__reserve__heb5a1b6dfa32b1d2($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   $0 = (_$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__reserve_internal__hbc3014871495cb23($0 | 0, $1 | 0, 1 | 0) | 0) & 255 | 0;
   if (($0 | 0) != (2 | 0)) break label$1;
   return;
  };
  label$2 : {
   if ($0 & 1 | 0) break label$2;
   std__panicking__begin_panic__h4e65df4d8221a3c1(1049592 | 0, 17 | 0, 1055460 | 0);
   abort();
  };
  std__panicking__begin_panic__h4e65df4d8221a3c1(1049552 | 0, 40 | 0, 1055444 | 0);
  abort();
 }
 
 function _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__insert__hc79096d12c4aaf3c($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $2 = 0, $3 = 0, $16 = 0, $22 = 0, $25 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  $3 = std__collections__hash__table__make_hash__hb56593c8f352b36b($0 | 0, $1 | 0) | 0;
  _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__reserve__heb5a1b6dfa32b1d2($0 | 0, 1 | 0);
  i64toi32_i32$2 = $1 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $16 = i64toi32_i32$0;
  i64toi32_i32$0 = ($2 + 8 | 0) + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $16;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $22 = i64toi32_i32$1;
  i64toi32_i32$1 = ($2 + 8 | 0) + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $22;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $25 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $25;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $1 = _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__insert_hashed_nocheck__h345e4cf26341fbd9($0 | 0, $3 | 0, i64toi32_i32$0 + 8 | 0 | 0) | 0;
  global$0 = i64toi32_i32$0 + 32 | 0;
  return $1 | 0;
 }
 
 function core__ptr__drop_in_place__h6def1930f9002033($0) {
  $0 = $0 | 0;
  var $1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $2 = 0, $18 = 0, $32 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 64 | 0;
  global$0 = $1;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   $2 = ($1 + 48 | 0) + 8 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $0;
   i64toi32_i32$0 = HEAPU32[$0 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $18 = i64toi32_i32$0;
   i64toi32_i32$0 = $1;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $18;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($1 + 8 | 0 | 0, $1 + 48 | 0 | 0);
   _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($1 + 8 | 0 | 0);
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[($0 + 20 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $0 + 12 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $32 = i64toi32_i32$1;
   i64toi32_i32$1 = $1;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $32;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($1 + 8 | 0 | 0, $1 + 48 | 0 | 0);
   _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($1 + 8 | 0 | 0);
  };
  global$0 = $1 + 64 | 0;
 }
 
 function std__collections__hash__map__robin_hood__h2232586edb2f76f0($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $9 = 0, $12 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $15$hi = 0, $13$hi = 0, $14$hi = 0, $66 = 0, $73 = 0, $80 = 0, $119 = 0, $124 = 0, $129 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $5 = global$0 - 32 | 0;
  global$0 = $5;
  label$1 : {
   $6 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
   if ((HEAPU32[$6 >> 2] | 0 | 0) == (4294967295 | 0)) break label$1;
   $7 = HEAPU32[$1 >> 2] | 0;
   $8 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   $9 = HEAPU32[($7 + ($8 << 2 | 0) | 0) >> 2] | 0;
   $10 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
   $1 = $8;
   label$2 : do {
    $11 = $9;
    wasm2js_i32$0 = $7 + ($1 << 2 | 0) | 0;
    wasm2js_i32$1 = $3;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $9 = $10 + Math_imul($1, 24) | 0;
    $3 = $9 + 16 | 0;
    i64toi32_i32$2 = $3;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    $13 = i64toi32_i32$0;
    $13$hi = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$0 = ($5 + 8 | 0) + 16 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $13;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $12 = $9 + 8 | 0;
    i64toi32_i32$2 = $12;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $14 = i64toi32_i32$1;
    $14$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = ($5 + 8 | 0) + 8 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $14;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $9;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    $15 = i64toi32_i32$0;
    $15$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $4;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $66 = i64toi32_i32$1;
    i64toi32_i32$1 = $9;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $66;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = $15$hi;
    i64toi32_i32$1 = i64toi32_i32$2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $15;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $9 = i64toi32_i32$1 + 8 | 0;
    i64toi32_i32$2 = $9;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $73 = i64toi32_i32$0;
    i64toi32_i32$0 = $12;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $73;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$1 = $14$hi;
    i64toi32_i32$0 = i64toi32_i32$2;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $14;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $9 = $4 + 16 | 0;
    i64toi32_i32$2 = $9;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $80 = i64toi32_i32$1;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $80;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = $13$hi;
    i64toi32_i32$1 = i64toi32_i32$2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $13;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = $15$hi;
    i64toi32_i32$1 = $5;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $15;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $3 = HEAPU32[$6 >> 2] | 0;
    label$3 : {
     label$4 : do {
      $1 = $3 & ($1 + 1 | 0) | 0;
      $12 = $7 + ($1 << 2 | 0) | 0;
      $9 = HEAPU32[$12 >> 2] | 0;
      if (($9 | 0) == (0 | 0)) break label$3;
      $12 = $3 & ($1 - $9 | 0) | 0;
      $2 = $2 + 1 | 0;
      if ($12 >>> 0 >= $2 >>> 0) continue label$4;
      break label$4;
     } while (1);
     $3 = $11;
     $2 = $12;
     continue label$2;
    };
    break label$2;
   } while (1);
   wasm2js_i32$0 = $12;
   wasm2js_i32$1 = $11;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $1 = $10 + Math_imul($1, 24) | 0;
   i64toi32_i32$2 = $4;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $119 = i64toi32_i32$0;
   i64toi32_i32$0 = $1;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $119;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = i64toi32_i32$2 + 16 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $124 = i64toi32_i32$1;
   i64toi32_i32$1 = $1 + 16 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $124;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $4 + 8 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $129 = i64toi32_i32$0;
   i64toi32_i32$0 = $1 + 8 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $129;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $7;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $10;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $8;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $6;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = (HEAPU32[($6 + 4 | 0) >> 2] | 0) + 1 | 0;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   global$0 = $5 + 32 | 0;
   return;
  };
  core__panicking__panic__h629a30fc6a0298aa(1055324 | 0);
  abort();
 }
 
 function std__collections__hash__map__RandomState__new__KEYS____init__h0db74402949e4dc0($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, $1 = 0, i64toi32_i32$0 = 0, $2 = 0, $2$hi = 0, $11 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 16 | 0;
  global$0 = $1;
  std__sys__wasm__hashmap_random_keys__haca36b8afa59d926($1 | 0);
  i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  $2 = i64toi32_i32$0;
  $2$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $11 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $11;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $1 + 16 | 0;
 }
 
 function _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__try_resize__h54014b7472950fe0($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $10 = 0, $12 = 0, $9 = 0, $12$hi = 0, $4 = 0, $6 = 0, $11 = 0, $46 = 0, $51 = 0, $80 = 0, $7 = 0, $8 = 0, $128 = 0, $132 = 0, $135 = 0, $201 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $3 = global$0 - 112 | 0;
  global$0 = $3;
  label$1 : {
   label$2 : {
    label$3 : {
     if ((HEAPU32[($0 + 20 | 0) >> 2] | 0) >>> 0 > $1 >>> 0) break label$3;
     if (($1 + 4294967295 | 0) & $1 | 0) break label$2;
     label$4 : {
      label$5 : {
       label$6 : {
        if (($2 | 0) == (0 | 0)) break label$6;
        _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new__h2374d5b6a2d22074($3 + 96 | 0 | 0, $1 | 0);
        break label$5;
       };
       _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new_internal__he2f4ef55b082d46a($3 + 72 | 0 | 0, $1 | 0, 0 | 0);
       label$7 : {
        if ((HEAPU8[($3 + 72 | 0) >> 0] | 0 | 0) != (1 | 0)) break label$7;
        $1 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(HEAPU8[($3 + 73 | 0) >> 0] | 0 | 0) | 0;
        break label$4;
       };
       wasm2js_i32$1 = $3 + 104 | 0;
       wasm2js_i32$2 = HEAPU32[($3 + 84 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
       i64toi32_i32$2 = $3;
       i64toi32_i32$0 = HEAPU32[($3 + 76 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$1 = $3, HEAPU8[(wasm2js_i32$1 + 80 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 81 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 82 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 83 | 0) >> 0] | 0 | 0) << 24);
       $46 = i64toi32_i32$0;
       i64toi32_i32$0 = $3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$1 = $3;
       wasm2js_i32$2 = $46;
       HEAP32[(wasm2js_i32$1 + 96 | 0) >> 2] = wasm2js_i32$2;
       wasm2js_i32$1 = $3;
       wasm2js_i32$2 = i64toi32_i32$1;
       (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 100 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 101 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 102 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 103 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
      };
      i64toi32_i32$2 = $0;
      i64toi32_i32$1 = HEAPU32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$1 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$1 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 23 | 0) >> 0] | 0 | 0) << 24);
      i64toi32_i32$0 = i64toi32_i32$0;
      $12 = i64toi32_i32$1;
      $12$hi = i64toi32_i32$0;
      i64toi32_i32$2 = $3;
      i64toi32_i32$0 = HEAPU32[($3 + 96 | 0) >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$1 = $3, HEAPU8[(wasm2js_i32$1 + 100 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 101 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 102 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 103 | 0) >> 0] | 0 | 0) << 24);
      $51 = i64toi32_i32$0;
      i64toi32_i32$0 = $0;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$1 = i64toi32_i32$0;
      wasm2js_i32$2 = $51;
      HEAP32[(wasm2js_i32$1 + 16 | 0) >> 2] = wasm2js_i32$2;
      wasm2js_i32$1 = i64toi32_i32$0;
      wasm2js_i32$2 = i64toi32_i32$1;
      (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 20 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 21 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 22 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 23 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
      $4 = ($3 + 72 | 0) + 8 | 0;
      $2 = i64toi32_i32$0 + 24 | 0;
      $5 = HEAPU32[$2 >> 2] | 0;
      wasm2js_i32$1 = $4;
      wasm2js_i32$2 = $5;
      HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
      $1 = ($3 + 96 | 0) + 8 | 0;
      wasm2js_i32$1 = $2;
      wasm2js_i32$2 = HEAPU32[$1 >> 2] | 0;
      HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
      wasm2js_i32$1 = $1;
      wasm2js_i32$2 = $5;
      HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
      i64toi32_i32$1 = $12$hi;
      i64toi32_i32$0 = $3;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$1 = $3;
      wasm2js_i32$2 = $12;
      HEAP32[(wasm2js_i32$1 + 72 | 0) >> 2] = wasm2js_i32$2;
      wasm2js_i32$1 = $3;
      wasm2js_i32$2 = i64toi32_i32$1;
      (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 76 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 77 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 78 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 79 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
      i64toi32_i32$1 = i64toi32_i32$1;
      i64toi32_i32$0 = $3;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$1 = $3;
      wasm2js_i32$2 = $12;
      HEAP32[(wasm2js_i32$1 + 96 | 0) >> 2] = wasm2js_i32$2;
      wasm2js_i32$1 = $3;
      wasm2js_i32$2 = i64toi32_i32$1;
      (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 100 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 101 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 102 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 103 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
      wasm2js_i32$1 = ($3 + 24 | 0) + 8 | 0;
      wasm2js_i32$2 = HEAPU32[$1 >> 2] | 0;
      HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
      i64toi32_i32$2 = $3;
      i64toi32_i32$1 = HEAPU32[($3 + 96 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$1 = $3, HEAPU8[(wasm2js_i32$1 + 100 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 101 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 102 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 103 | 0) >> 0] | 0 | 0) << 24);
      $80 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$1 = $3;
      wasm2js_i32$2 = $80;
      HEAP32[(wasm2js_i32$1 + 24 | 0) >> 2] = wasm2js_i32$2;
      wasm2js_i32$1 = $3;
      wasm2js_i32$2 = i64toi32_i32$0;
      (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 28 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 29 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 30 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 31 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
      $1 = HEAPU32[($3 + 28 | 0) >> 2] | 0;
      wasm2js_i32$1 = $3;
      wasm2js_i32$2 = $1;
      HEAP32[(wasm2js_i32$1 + 36 | 0) >> 2] = wasm2js_i32$2;
      label$8 : {
       label$9 : {
        if (($1 | 0) == (0 | 0)) break label$9;
        _$LT$std__collections__hash__table__Bucket$LT$K$C$$u20$V$C$$u20$M$GT$$GT$__head_bucket__h634046aa87660823($3 + 40 | 0 | 0, $3 + 24 | 0 | 0);
        $1 = HEAPU32[($3 + 48 | 0) >> 2] | 0;
        $6 = HEAPU32[($3 + 44 | 0) >> 2] | 0;
        $7 = HEAPU32[($3 + 40 | 0) >> 2] | 0;
        $2 = ($3 + 40 | 0) + 8 | 0;
        $8 = $3 + 52 | 0;
        $5 = HEAPU32[($3 + 52 | 0) >> 2] | 0;
        $9 = $5 + 4 | 0;
        label$10 : {
         label$11 : do {
          label$12 : {
           $10 = $7 + ($1 << 2 | 0) | 0;
           $11 = HEAPU32[$10 >> 2] | 0;
           if (($11 | 0) == (0 | 0)) break label$12;
           wasm2js_i32$1 = $9;
           wasm2js_i32$2 = (HEAPU32[$9 >> 2] | 0) + 4294967295 | 0;
           HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
           wasm2js_i32$1 = $10;
           wasm2js_i32$2 = 0;
           HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
           $10 = $6 + Math_imul($1, 24) | 0;
           i64toi32_i32$2 = $10 + 16 | 0;
           i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$1 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
           $128 = i64toi32_i32$0;
           i64toi32_i32$0 = ($3 + 72 | 0) + 16 | 0;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           wasm2js_i32$2 = $128;
           HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
           wasm2js_i32$1 = i64toi32_i32$0;
           wasm2js_i32$2 = i64toi32_i32$1;
           (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 4 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 5 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 6 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 7 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $10 + 8 | 0;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$1 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
           $132 = i64toi32_i32$1;
           i64toi32_i32$1 = $4;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$1 = i64toi32_i32$1;
           wasm2js_i32$2 = $132;
           HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
           wasm2js_i32$1 = i64toi32_i32$1;
           wasm2js_i32$2 = i64toi32_i32$0;
           (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 4 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 5 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 6 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 7 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $10;
           i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$1 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
           $135 = i64toi32_i32$0;
           i64toi32_i32$0 = $3;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$1 = $3;
           wasm2js_i32$2 = $135;
           HEAP32[(wasm2js_i32$1 + 72 | 0) >> 2] = wasm2js_i32$2;
           wasm2js_i32$1 = $3;
           wasm2js_i32$2 = i64toi32_i32$1;
           (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 76 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 77 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 78 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 79 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
           _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__insert_hashed_ordered__h3584183304055b4c($0 | 0, $11 | 0, $3 + 72 | 0 | 0);
           if ((HEAPU32[$9 >> 2] | 0 | 0) == (0 | 0)) break label$10;
          };
          wasm2js_i32$1 = $2;
          wasm2js_i32$2 = $1;
          HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
          wasm2js_i32$1 = $8;
          wasm2js_i32$2 = $5;
          HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
          wasm2js_i32$1 = $3;
          wasm2js_i32$2 = $6;
          HEAP32[(wasm2js_i32$1 + 44 | 0) >> 2] = wasm2js_i32$2;
          $1 = (HEAPU32[$5 >> 2] | 0) & ($1 + 1 | 0) | 0;
          wasm2js_i32$1 = $2;
          wasm2js_i32$2 = $1;
          HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
          continue label$11;
          break label$11;
         } while (1);
        };
        $1 = HEAPU32[($0 + 20 | 0) >> 2] | 0;
        wasm2js_i32$1 = $3;
        wasm2js_i32$2 = $1;
        HEAP32[(wasm2js_i32$1 + 60 | 0) >> 2] = wasm2js_i32$2;
        wasm2js_i32$1 = $3;
        wasm2js_i32$2 = $3 + 60 | 0;
        HEAP32[(wasm2js_i32$1 + 64 | 0) >> 2] = wasm2js_i32$2;
        $2 = HEAPU32[($3 + 36 | 0) >> 2] | 0;
        wasm2js_i32$1 = $3;
        wasm2js_i32$2 = $3 + 36 | 0;
        HEAP32[(wasm2js_i32$1 + 68 | 0) >> 2] = wasm2js_i32$2;
        if (($1 | 0) != ($2 | 0)) break label$1;
        _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hccaa43b317c76f2b($3 + 24 | 0 | 0);
        break label$8;
       };
       _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hccaa43b317c76f2b($3 + 24 | 0 | 0);
      };
      $1 = 2;
     };
     global$0 = $3 + 112 | 0;
     return $1 | 0;
    };
    std__panicking__begin_panic__h4e65df4d8221a3c1(1049303 | 0, 50 | 0, 1055356 | 0);
    abort();
   };
   std__panicking__begin_panic__h4e65df4d8221a3c1(1049353 | 0, 67 | 0, 1055372 | 0);
   abort();
  };
  core__fmt__ArgumentV1__new__hbdc9fd637428a42d($3 + 16 | 0 | 0, $3 + 64 | 0 | 0, 12 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$1 = $3, HEAPU8[(wasm2js_i32$1 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 23 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$0 = i64toi32_i32$0;
  $12 = i64toi32_i32$1;
  $12$hi = i64toi32_i32$0;
  core__fmt__ArgumentV1__new__hbdc9fd637428a42d($3 + 8 | 0 | 0, $3 + 68 | 0 | 0, 12 | 0);
  wasm2js_i32$1 = $3 + 84 | 0;
  wasm2js_i32$2 = 2;
  HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = ($3 + 72 | 0) + 20 | 0;
  wasm2js_i32$2 = 2;
  HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $12;
  HEAP32[(wasm2js_i32$1 + 96 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = i64toi32_i32$0;
  (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 100 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 101 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 102 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 103 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 1055388;
  HEAP32[(wasm2js_i32$1 + 72 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 3;
  HEAP32[(wasm2js_i32$1 + 76 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 1049480;
  HEAP32[(wasm2js_i32$1 + 80 | 0) >> 2] = wasm2js_i32$2;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$1 = $3, HEAPU8[(wasm2js_i32$1 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 15 | 0) >> 0] | 0 | 0) << 24);
  $201 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $201;
  HEAP32[(wasm2js_i32$1 + 104 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = i64toi32_i32$1;
  (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 108 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 109 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 110 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 111 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $3 + 96 | 0;
  HEAP32[(wasm2js_i32$1 + 88 | 0) >> 2] = wasm2js_i32$2;
  std__panicking__begin_panic_fmt__h431a7a5c1376ac58($3 + 72 | 0 | 0, 1055412 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__insert_hashed_ordered__h3584183304055b4c($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $4 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $6 = 0, $55 = 0, $62 = 0, $65 = 0, $75 = 0, $79 = 0, $82 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 64 | 0;
  global$0 = $3;
  $4 = HEAPU32[($0 + 16 | 0) >> 2] | 0;
  std__collections__hash__table__calculate_layout__heca53458de3ef603($3 + 40 | 0 | 0, $4 + 1 | 0 | 0);
  $5 = (HEAPU32[($0 + 24 | 0) >> 2] | 0) & 4294967294 | 0;
  $6 = $5 + (HEAPU32[($3 + 48 | 0) >> 2] | 0) | 0;
  label$1 : {
   $4 = $4 & $1 | 0;
   $7 = $5 + ($4 << 2 | 0) | 0;
   if ((HEAPU32[$7 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   $8 = $0 + 16 | 0;
   label$2 : do {
    $4 = (HEAPU32[$8 >> 2] | 0) & ($4 + 1 | 0) | 0;
    $7 = $5 + ($4 << 2 | 0) | 0;
    if (HEAPU32[$7 >> 2] | 0) continue label$2;
    break label$2;
   } while (1);
  };
  $5 = ($3 + 40 | 0) + 16 | 0;
  i64toi32_i32$2 = $2 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $55 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $55;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $8 = ($3 + 40 | 0) + 8 | 0;
  i64toi32_i32$2 = $2 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $62 = i64toi32_i32$1;
  i64toi32_i32$1 = $8;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $62;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $65 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $65;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 44 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 45 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 46 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 47 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $7;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $4 = $6 + Math_imul($4, 24) | 0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $75 = i64toi32_i32$1;
  i64toi32_i32$1 = $4 + 16 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $75;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $8;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $79 = i64toi32_i32$0;
  i64toi32_i32$0 = $4 + 8 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $79;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAPU32[(i64toi32_i32$2 + 40 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 44 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 45 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 46 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 47 | 0) >> 0] | 0 | 0) << 24);
  $82 = i64toi32_i32$1;
  i64toi32_i32$1 = $4;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $82;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $4 = $0 + 20 | 0;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = (HEAPU32[$4 >> 2] | 0) + 1 | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = i64toi32_i32$2 + 64 | 0;
 }
 
 function _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__reserve_internal__hbc3014871495cb23($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $5 = 0, $3 = 0, i64toi32_i32$4 = 0, $4 = 0, $6 = 0, i64toi32_i32$3 = 0, $14 = 0, $7 = 0, $7$hi = 0, i64toi32_i32$2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  label$1 : {
   label$2 : {
    label$3 : {
     $4 = (HEAPU32[($0 + 16 | 0) >> 2] | 0) + 1 | 0;
     $5 = HEAPU32[($0 + 20 | 0) >> 2] | 0;
     $6 = (((Math_imul($4, 10) + 9 | 0) >>> 0) / (11 >>> 0) | 0) - $5 | 0;
     if ($6 >>> 0 >= $1 >>> 0) break label$3;
     $1 = $5 + $1 | 0;
     if ($1 >>> 0 >= $5 >>> 0) break label$2;
     $1 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0;
     break label$1;
    };
    $1 = 2;
    if ($6 >>> 0 > $5 >>> 0) break label$1;
    if (((HEAPU32[($0 + 24 | 0) >> 2] | 0) & 1 | 0 | 0) == (0 | 0)) break label$1;
    $1 = 2;
    $0 = (_$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__try_resize__h54014b7472950fe0($0 | 0, $4 << 1 | 0 | 0, $2 | 0) | 0) & 255 | 0;
    if (($0 | 0) == (2 | 0)) break label$1;
    $1 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3($0 & 1 | 0 | 0) | 0;
    break label$1;
   };
   label$4 : {
    label$5 : {
     label$6 : {
      if (($1 | 0) == (0 | 0)) break label$6;
      label$7 : {
       i64toi32_i32$0 = 0;
       i64toi32_i32$0 = i64toi32_i32$0;
       i64toi32_i32$1 = 0;
       i64toi32_i32$1 = __wasm_i64_mul($1 | 0, i64toi32_i32$0 | 0, 11 | 0, i64toi32_i32$1 | 0) | 0;
       i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
       i64toi32_i32$0 = i64toi32_i32$0;
       $7 = i64toi32_i32$1;
       $7$hi = i64toi32_i32$0;
       i64toi32_i32$0 = i64toi32_i32$0;
       i64toi32_i32$0 = i64toi32_i32$0;
       i64toi32_i32$2 = i64toi32_i32$1;
       i64toi32_i32$1 = 0;
       i64toi32_i32$3 = 32;
       i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
       if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
        i64toi32_i32$1 = 0;
        $14 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
       } else {
        i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
        $14 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
       }
       i64toi32_i32$1 = i64toi32_i32$1;
       if ($14) break label$7;
       i64toi32_i32$1 = $7$hi;
       i64toi32_i32$1 = i64toi32_i32$1;
       core__num___$LT$impl$u20$usize$GT$__checked_next_power_of_two__h85a3fcfa00e54f41($3 + 8 | 0 | 0, ($7 >>> 0) / (10 >>> 0) | 0 | 0);
       if (HEAPU32[($3 + 8 | 0) >> 2] | 0) break label$5;
      };
      $1 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(_$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0 | 0) | 0;
      break label$1;
     };
     $5 = 0;
     break label$4;
    };
    $1 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
    $5 = (wasm2js_i32$0 = $1, wasm2js_i32$1 = 32, wasm2js_i32$2 = $1 >>> 0 > 32 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
   };
   $1 = 2;
   $0 = (_$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__try_resize__h54014b7472950fe0($0 | 0, $5 | 0, $2 | 0) | 0) & 255 | 0;
   if (($0 | 0) == (2 | 0)) break label$1;
   $1 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3($0 & 1 | 0 | 0) | 0;
  };
  global$0 = $3 + 16 | 0;
  return $1 | 0;
 }
 
 function _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__insert_hashed_nocheck__h345e4cf26341fbd9($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $3 = 0, $4 = 0, $5 = 0, i64toi32_i32$4 = 0, $13 = 0, $8 = 0, $13$hi = 0, $12 = 0, $14 = 0, $6 = 0, i64toi32_i32$3 = 0, $14$hi = 0, $7 = 0, $9 = 0, $36 = 0, $37 = 0, $10 = 0, $11 = 0, $144 = 0, $150 = 0, $153 = 0, $161 = 0, $167 = 0, $170 = 0, $177 = 0, $194 = 0, $199 = 0, $259 = 0, $266 = 0, $269 = 0, $278 = 0, $289 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 128 | 0;
  global$0 = $3;
  label$1 : {
   label$2 : {
    $4 = HEAPU32[($0 + 16 | 0) >> 2] | 0;
    $5 = $4 + 1 | 0;
    if (($5 | 0) == (0 | 0)) break label$2;
    std__collections__hash__table__calculate_layout__heca53458de3ef603($3 | 0, $5 | 0);
    $5 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
    $6 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
    $7 = $3 + 12 | 0;
    $8 = $4 & $1 | 0;
    wasm2js_i32$0 = $7;
    wasm2js_i32$1 = $8;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3 + 16 | 0;
    wasm2js_i32$1 = $0 + 16 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $0 = $6 & 4294967294 | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    $9 = $3 + 8 | 0;
    wasm2js_i32$0 = $9;
    wasm2js_i32$1 = $0 + $5 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $4 = 0;
    $0 = HEAPU32[($0 + ($8 << 2 | 0) | 0) >> 2] | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = ($0 | 0) != (0 | 0);
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        if (($0 | 0) == (0 | 0)) break label$6;
        $10 = $2 + 12 | 0;
        $11 = $3 + 16 | 0;
        $4 = 0;
        label$7 : do {
         i64toi32_i32$2 = $7;
         i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
         i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
         i64toi32_i32$1 = i64toi32_i32$1;
         $13 = i64toi32_i32$0;
         $13$hi = i64toi32_i32$1;
         i64toi32_i32$1 = i64toi32_i32$1;
         i64toi32_i32$1 = i64toi32_i32$1;
         i64toi32_i32$2 = i64toi32_i32$0;
         i64toi32_i32$0 = 0;
         i64toi32_i32$3 = 32;
         i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
         if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
          i64toi32_i32$0 = 0;
          $36 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
         } else {
          i64toi32_i32$0 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
          $36 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
         }
         i64toi32_i32$0 = i64toi32_i32$0;
         $6 = $36;
         i64toi32_i32$0 = $13$hi;
         i64toi32_i32$0 = i64toi32_i32$0;
         $0 = $13;
         i64toi32_i32$1 = $3;
         i64toi32_i32$0 = HEAPU32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
         i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
         i64toi32_i32$2 = i64toi32_i32$2;
         $14 = i64toi32_i32$0;
         $14$hi = i64toi32_i32$2;
         i64toi32_i32$2 = i64toi32_i32$2;
         i64toi32_i32$2 = i64toi32_i32$2;
         $5 = i64toi32_i32$0;
         $12 = HEAPU32[(i64toi32_i32$0 + ($0 << 2 | 0) | 0) >> 2] | 0;
         $8 = (HEAPU32[$6 >> 2] | 0) & ($0 - $12 | 0) | 0;
         if ($8 >>> 0 < $4 >>> 0) break label$5;
         i64toi32_i32$2 = $14$hi;
         i64toi32_i32$2 = i64toi32_i32$2;
         i64toi32_i32$1 = $14;
         i64toi32_i32$0 = 0;
         i64toi32_i32$3 = 32;
         i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
         if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
          i64toi32_i32$0 = 0;
          $37 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
         } else {
          i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
          $37 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
         }
         i64toi32_i32$0 = i64toi32_i32$0;
         $8 = $37;
         label$8 : {
          if (($12 | 0) != ($1 | 0)) break label$8;
          $12 = $8 + Math_imul($0, 24) | 0;
          if ((_$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__cmp__PartialEq$GT$__eq__hba8dbff631a7b8b2($12 | 0, $2 | 0) | 0 | 0) == (0 | 0)) break label$8;
          if (_$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__cmp__PartialEq$GT$__eq__hba8dbff631a7b8b2($12 + 12 | 0 | 0, $10 | 0) | 0) break label$3;
         };
         $12 = HEAPU32[$6 >> 2] | 0;
         wasm2js_i32$0 = $9;
         wasm2js_i32$1 = $8;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         $0 = $12 & ($0 + 1 | 0) | 0;
         wasm2js_i32$0 = $7;
         wasm2js_i32$1 = $0;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $11;
         wasm2js_i32$1 = $6;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $3;
         wasm2js_i32$1 = $5;
         HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
         $0 = HEAPU32[($5 + ($0 << 2 | 0) | 0) >> 2] | 0;
         wasm2js_i32$0 = $3;
         wasm2js_i32$1 = ($0 | 0) != (0 | 0);
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         $4 = $4 + 1 | 0;
         if ($0) continue label$7;
         break label$7;
        } while (1);
       };
       i64toi32_i32$2 = $3 + 12 | 0;
       i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       i64toi32_i32$1 = i64toi32_i32$1;
       $13 = i64toi32_i32$0;
       $13$hi = i64toi32_i32$1;
       i64toi32_i32$2 = $3;
       i64toi32_i32$1 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
       i64toi32_i32$0 = i64toi32_i32$0;
       $14 = i64toi32_i32$1;
       $14$hi = i64toi32_i32$0;
       i64toi32_i32$2 = $2 + 16 | 0;
       i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $144 = i64toi32_i32$0;
       i64toi32_i32$0 = ($3 + 56 | 0) + 16 | 0;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = $144;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       i64toi32_i32$2 = $2 + 8 | 0;
       i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $150 = i64toi32_i32$1;
       i64toi32_i32$1 = ($3 + 56 | 0) + 8 | 0;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = $150;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       i64toi32_i32$2 = $2;
       i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $153 = i64toi32_i32$0;
       i64toi32_i32$0 = $3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = $153;
       HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $5 = 1;
       $0 = i64toi32_i32$0 + 56 | 0;
       break label$4;
      };
      i64toi32_i32$2 = $2 + 16 | 0;
      i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $161 = i64toi32_i32$1;
      i64toi32_i32$1 = ($3 + 56 | 0) + 16 | 0;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = $161;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      i64toi32_i32$2 = $2 + 8 | 0;
      i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $167 = i64toi32_i32$0;
      i64toi32_i32$0 = ($3 + 56 | 0) + 8 | 0;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = i64toi32_i32$0;
      wasm2js_i32$1 = $167;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$0;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      i64toi32_i32$2 = $2;
      i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $170 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = $170;
      HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      $5 = 0;
      $0 = i64toi32_i32$1 + 56 | 0;
      $4 = $8;
     };
     i64toi32_i32$2 = $0;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $177 = i64toi32_i32$0;
     i64toi32_i32$0 = $3 + 8 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $177;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $3 + 32 | 0;
     wasm2js_i32$1 = $5;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = $14$hi;
     i64toi32_i32$0 = $3 + 36 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $14;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = $13$hi;
     i64toi32_i32$0 = $3 + 44 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $13;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $3 + 52 | 0;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;
     i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $194 = i64toi32_i32$1;
     i64toi32_i32$1 = $3 + 16 | 0;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $194;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$2 = $0 + 16 | 0;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $199 = i64toi32_i32$0;
     i64toi32_i32$0 = $3 + 24 | 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $199;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $1;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = 1;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     memcpy($3 + 56 | 0 | 0, $3 | 4 | 0 | 0, 52 | 0) | 0;
     _$LT$std__collections__hash__map__VacantEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__insert__hde442f25b89c7ff7($3 + 56 | 0 | 0) | 0;
     $0 = 0;
     break label$1;
    };
    wasm2js_i32$0 = $3 + 28 | 0;
    wasm2js_i32$1 = $5;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3 + 32 | 0;
    wasm2js_i32$1 = $8;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = $13$hi;
    i64toi32_i32$0 = $3 + 36 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $13;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $2 + 16 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $13 = i64toi32_i32$1;
    $13$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = ($3 + 56 | 0) + 16 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $13;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $2 + 8 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    $14 = i64toi32_i32$0;
    $14$hi = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$0 = ($3 + 56 | 0) + 8 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $14;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$0 = $3 + 12 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $14;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$1 = $13$hi;
    i64toi32_i32$0 = $3 + 20 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $13;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $13 = i64toi32_i32$1;
    $13$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $13;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $13;
    HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    memcpy(i64toi32_i32$1 + 56 | 0 | 0, i64toi32_i32$1 | 4 | 0 | 0, 40 | 0) | 0;
    core__ptr__drop_in_place__h6def1930f9002033(i64toi32_i32$1 + 56 | 0 | 0);
    $0 = 1;
    break label$1;
   };
   i64toi32_i32$2 = $2 + 16 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $259 = i64toi32_i32$0;
   i64toi32_i32$0 = ($3 + 56 | 0) + 16 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $259;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $0 = $2 + 8 | 0;
   i64toi32_i32$2 = $0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $266 = i64toi32_i32$1;
   i64toi32_i32$1 = ($3 + 56 | 0) + 8 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $266;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $269 = i64toi32_i32$0;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $269;
   HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $4 = (i64toi32_i32$0 + 112 | 0) + 8 | 0;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = i64toi32_i32$2;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $278 = i64toi32_i32$1;
   i64toi32_i32$1 = $3;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $278;
   HEAP32[(wasm2js_i32$0 + 112 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 116 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 117 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 118 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 119 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404(i64toi32_i32$1 | 0, i64toi32_i32$1 + 112 | 0 | 0);
   _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a(i64toi32_i32$1 | 0);
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = HEAPU32[(i64toi32_i32$1 + 76 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$0 = HEAPU32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 72 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 73 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 74 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 75 | 0) >> 0] | 0 | 0) << 24);
   $289 = i64toi32_i32$0;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $289;
   HEAP32[(wasm2js_i32$0 + 112 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 116 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 117 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 118 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 119 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404(i64toi32_i32$0 | 0, i64toi32_i32$0 + 112 | 0 | 0);
   _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a(i64toi32_i32$0 | 0);
   std__panicking__begin_panic__h4e65df4d8221a3c1(1049552 | 0, 40 | 0, 1055428 | 0);
   abort();
  };
  global$0 = $3 + 128 | 0;
  return $0 | 0;
 }
 
 function _$LT$std__collections__hash__map__VacantEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__insert__hde442f25b89c7ff7($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $1 = 0, $4 = 0, $2 = 0, $5 = 0, $6 = 0, $3 = 0, $18 = 0, $22 = 0, $53 = 0, $58 = 0, $61 = 0, $80 = 0, $84 = 0, $100 = 0, $103 = 0, $110 = 0, $116 = 0, $119 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 80 | 0;
  global$0 = $1;
  label$1 : {
   label$2 : {
    if ((HEAPU32[($0 + 28 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$2;
    i64toi32_i32$2 = $0 + 40 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $18 = i64toi32_i32$0;
    i64toi32_i32$0 = ($1 + 56 | 0) + 8 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $18;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $0 + 32 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $22 = i64toi32_i32$1;
    i64toi32_i32$1 = $1;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $22;
    HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $2 = HEAPU32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
    label$3 : {
     if ((HEAPU32[($0 + 48 | 0) >> 2] | 0) >>> 0 <= 127 >>> 0) break label$3;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0 | 1 | 0;
     HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    };
    $3 = HEAPU32[($1 + 56 | 0) >> 2] | 0;
    $4 = HEAPU32[($1 + 64 | 0) >> 2] | 0;
    wasm2js_i32$0 = $3 + ($4 << 2 | 0) | 0;
    wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $5 = HEAPU32[($1 + 60 | 0) >> 2] | 0;
    $6 = $5 + Math_imul($4, 24) | 0;
    i64toi32_i32$2 = $0 + 20 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $53 = i64toi32_i32$0;
    i64toi32_i32$0 = $6 + 16 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $53;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $0 + 12 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $58 = i64toi32_i32$1;
    i64toi32_i32$1 = $6 + 8 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $58;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $0;
    i64toi32_i32$0 = HEAPU32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
    $61 = i64toi32_i32$0;
    i64toi32_i32$0 = $6;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $61;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = (HEAPU32[($2 + 4 | 0) >> 2] | 0) + 1 | 0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $3;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $5;
    HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $4;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $2;
    HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
    break label$1;
   };
   $4 = ($1 + 24 | 0) + 8 | 0;
   i64toi32_i32$2 = $0 + 40 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $80 = i64toi32_i32$1;
   i64toi32_i32$1 = $4;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $80;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $0 + 32 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $84 = i64toi32_i32$0;
   i64toi32_i32$0 = $1;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $84;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   label$4 : {
    $2 = HEAPU32[($0 + 48 | 0) >> 2] | 0;
    if ($2 >>> 0 <= 127 >>> 0) break label$4;
    $5 = HEAPU32[($1 + 36 | 0) >> 2] | 0;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = HEAPU32[($5 + 8 | 0) >> 2] | 0 | 1 | 0;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   };
   i64toi32_i32$2 = $4;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $100 = i64toi32_i32$1;
   i64toi32_i32$1 = ($1 + 40 | 0) + 8 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $100;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $1;
   i64toi32_i32$0 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
   $103 = i64toi32_i32$0;
   i64toi32_i32$0 = $1;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $103;
   HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 44 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 45 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 46 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 47 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $4 = HEAPU32[$0 >> 2] | 0;
   i64toi32_i32$2 = $0 + 20 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $110 = i64toi32_i32$1;
   i64toi32_i32$1 = $1 + 72 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $110;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $0 + 12 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $116 = i64toi32_i32$0;
   i64toi32_i32$0 = ($1 + 56 | 0) + 8 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $116;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $0;
   i64toi32_i32$1 = HEAPU32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
   $119 = i64toi32_i32$1;
   i64toi32_i32$1 = $1;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $119;
   HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   std__collections__hash__map__robin_hood__h2232586edb2f76f0(i64toi32_i32$1 + 8 | 0 | 0, i64toi32_i32$1 + 40 | 0 | 0, $2 | 0, $4 | 0, i64toi32_i32$1 + 56 | 0 | 0);
   $4 = HEAPU32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
   $5 = HEAPU32[(i64toi32_i32$1 + 12 | 0) >> 2] | 0;
  };
  global$0 = $1 + 80 | 0;
  return ($5 + Math_imul($4, 24) | 0) + 24 | 0 | 0;
 }
 
 function _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  $0 = HEAPU32[$0 >> 2] | 0;
  wasm2js_i32$0 = $2 + 12 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 20 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 15;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1055540;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1049768;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 24 | 0;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  $1 = core__fmt__Formatter__write_fmt__h706c41653795aaba($1 | 0, $2 | 0) | 0;
  global$0 = $2 + 32 | 0;
  return $1 | 0;
 }
 
 function _$LT$alloc__string__String$u20$as$u20$core__fmt__Display$GT$__fmt__h7d9f2d3d6f323d40($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($2 + 8 | 0 | 0, $0 | 0);
  $1 = _$LT$str$u20$as$u20$core__fmt__Display$GT$__fmt__hbbfce271ab05a0ce(HEAPU32[($2 + 8 | 0) >> 2] | 0 | 0, HEAPU32[($2 + 12 | 0) >> 2] | 0 | 0, $1 | 0) | 0;
  global$0 = $2 + 16 | 0;
  return $1 | 0;
 }
 
 function _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h23452ccb2e1fc734($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return _$LT$dbapp__functional_dependencies__AttributeSet$u20$as$u20$core__fmt__Display$GT$__fmt__hf8b7226d268eb85a(HEAPU32[$0 >> 2] | 0 | 0, $1 | 0) | 0 | 0;
 }
 
 function _$LT$dbapp__functional_dependencies__AttributeSet$u20$as$u20$core__fmt__Display$GT$__fmt__hf8b7226d268eb85a($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 112 | 0;
  global$0 = $2;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($2 + 32 | 0 | 0, $0 | 0);
  memcpy($2 + 72 | 0 | 0, $2 + 32 | 0 | 0, 36 | 0) | 0;
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$T$C$$u20$I$GT$$GT$__from_iter__heba6358119733323($2 + 16 | 0 | 0, $2 + 72 | 0 | 0);
  alloc__str__join_generic_copy__haaa3ad8152f8a1ad($2 + 32 | 0 | 0, HEAPU32[($2 + 16 | 0) >> 2] | 0 | 0, HEAPU32[($2 + 24 | 0) >> 2] | 0 | 0, 1049804 | 0, 2 | 0);
  wasm2js_i32$0 = ($2 + 72 | 0) + 12 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 92 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 15;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1055540;
  HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1049768;
  HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 32 | 0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
  $1 = core__fmt__Formatter__write_fmt__h706c41653795aaba($1 | 0, $2 + 72 | 0 | 0) | 0;
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($2 + 32 | 0 | 0);
  _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($2 + 32 | 0 | 0);
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hed8cc4d2839fdcaa($2 + 16 | 0 | 0);
  label$1 : {
   $0 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
   if (($0 | 0) == (0 | 0)) break label$1;
   __rust_dealloc(HEAPU32[($2 + 16 | 0) >> 2] | 0 | 0, Math_imul($0, 12) | 0, 4 | 0);
  };
  global$0 = $2 + 112 | 0;
  return $1 | 0;
 }
 
 function core__ops__function__impls___$LT$impl$u20$core__ops__function__FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$__call_once__h5809665f158d4e36($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, $12 = 0, $18 = 0, $21 = 0, $29 = 0, $41 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 80 | 0;
  global$0 = $3;
  i64toi32_i32$2 = $2 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $12 = i64toi32_i32$0;
  i64toi32_i32$0 = $3 + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $12;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $4 = $2 + 8 | 0;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $18 = i64toi32_i32$1;
  i64toi32_i32$1 = $3 + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $18;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $21 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $21;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = ($3 + 24 | 0) + 8 | 0;
  wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $29 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $29;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($0 | 0, $3 + 24 | 0 | 0);
  wasm2js_i32$0 = ($3 + 64 | 0) + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($3 + 20 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 16 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 17 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 18 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 19 | 0) >> 0] | 0 | 0) << 24);
  $41 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $41;
  HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 24 | 0 | 0, $3 + 64 | 0 | 0);
  memcpy($0 + 36 | 0 | 0, $3 + 24 | 0 | 0, 36 | 0) | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP8[(wasm2js_i32$0 + 72 | 0) >> 0] = wasm2js_i32$1;
  global$0 = $3 + 80 | 0;
 }
 
 function core__ptr__drop_in_place__h5f323eac697b9663($0) {
  $0 = $0 | 0;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($0 | 0);
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($0 | 0);
  };
 }
 
 function core__str__traits___$LT$impl$u20$core__slice__SliceIndex$LT$str$GT$$u20$for$u20$core__ops__range__RangeFrom$LT$usize$GT$$GT$__index___$u7b$$u7b$closure$u7d$$u7d$__h40498af093b1e50e($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = HEAPU32[$0 >> 2] | 0;
  core__str__slice_error_fail__hf97d66f6274169ea(HEAPU32[$1 >> 2] | 0 | 0, HEAPU32[($1 + 4 | 0) >> 2] | 0 | 0, HEAPU32[(HEAPU32[($0 + 4 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAPU32[(HEAPU32[($0 + 8 | 0) >> 2] | 0) >> 2] | 0 | 0);
  abort();
 }
 
 function core__str__pattern__TwoWaySearcher__next__ha67a6584fbe06fc8($0, $1, $2, $3, $4, $5, $6) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  var $9 = 0, $8 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $17 = 0, i64toi32_i32$3 = 0, $10 = 0, i64toi32_i32$4 = 0, $15 = 0, $16 = 0, $7 = 0, $12 = 0, $19$hi = 0, $14 = 0, $29 = 0, $11 = 0, $13 = 0, $19 = 0, $49 = 0, $49$hi = 0, $50$hi = 0, $18 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       $7 = $5 + 4294967295 | 0;
       $8 = HEAPU32[($1 + 20 | 0) >> 2] | 0;
       $9 = $7 + $8 | 0;
       if ($9 >>> 0 >= $3 >>> 0) break label$5;
       $10 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
       $11 = 0 - $10 | 0;
       $12 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
       $13 = $5 - $12 | 0;
       i64toi32_i32$2 = $1;
       i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       i64toi32_i32$1 = i64toi32_i32$1;
       $19 = i64toi32_i32$0;
       $19$hi = i64toi32_i32$1;
       $14 = $1 + 20 | 0;
       $15 = $1 + 28 | 0;
       label$6 : do {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             i64toi32_i32$2 = $2 + $9 | 0;
             i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0;
             i64toi32_i32$0 = 0;
             i64toi32_i32$0 = i64toi32_i32$0;
             i64toi32_i32$2 = i64toi32_i32$1;
             i64toi32_i32$1 = 0;
             i64toi32_i32$3 = 63;
             i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
             $49 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
             $49$hi = i64toi32_i32$1;
             i64toi32_i32$1 = 0;
             i64toi32_i32$0 = 1;
             i64toi32_i32$2 = $49$hi;
             i64toi32_i32$3 = $49;
             i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
             if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
              i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
              $29 = 0;
             } else {
              i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
              $29 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
             }
             $50$hi = i64toi32_i32$2;
             i64toi32_i32$2 = $19$hi;
             i64toi32_i32$2 = $50$hi;
             i64toi32_i32$1 = $29;
             i64toi32_i32$0 = $19$hi;
             i64toi32_i32$3 = $19;
             i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
             i64toi32_i32$0 = i64toi32_i32$0;
             if ((i64toi32_i32$1 & i64toi32_i32$3 | 0 | i64toi32_i32$0 | 0 | 0) == (0 | 0)) break label$11;
             $9 = $10;
             label$12 : {
              if ($6) break label$12;
              $9 = HEAPU32[$15 >> 2] | 0;
              $9 = (wasm2js_i32$0 = $10, wasm2js_i32$1 = $9, wasm2js_i32$2 = $9 >>> 0 < $10 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
             };
             $18 = $2 + $8 | 0;
             label$13 : do {
              if ($9 >>> 0 >= $5 >>> 0) break label$8;
              $17 = $8 + $9 | 0;
              if ($17 >>> 0 >= $3 >>> 0) break label$9;
              $17 = $18 + $9 | 0;
              $16 = $4 + $9 | 0;
              $9 = $9 + 1 | 0;
              if ((HEAPU8[$16 >> 0] | 0 | 0) == (HEAPU8[$17 >> 0] | 0 | 0)) continue label$13;
              break label$13;
             } while (1);
             $8 = ($11 + $8 | 0) + $9 | 0;
             break label$10;
            };
            $8 = $8 + $5 | 0;
           };
           wasm2js_i32$0 = $14;
           wasm2js_i32$1 = $8;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           if ($6) break label$7;
           wasm2js_i32$0 = $15;
           wasm2js_i32$1 = 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           break label$7;
          };
          core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055476 | 0, $17 | 0, $3 | 0);
          abort();
         };
         $16 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = HEAPU32[$15 >> 2] | 0, wasm2js_i32$2 = $6, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
         $9 = $10;
         label$14 : do {
          if ($16 >>> 0 >= $9 >>> 0) break label$4;
          $9 = $9 + 4294967295 | 0;
          if ($9 >>> 0 >= $5 >>> 0) break label$2;
          $17 = $9 + $8 | 0;
          if ($17 >>> 0 >= $3 >>> 0) break label$1;
          if ((HEAPU8[($4 + $9 | 0) >> 0] | 0 | 0) == (HEAPU8[($2 + $17 | 0) >> 0] | 0 | 0)) continue label$14;
          break label$14;
         } while (1);
         $8 = $12 + $8 | 0;
         wasm2js_i32$0 = $14;
         wasm2js_i32$1 = $8;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         if ($6) break label$7;
         wasm2js_i32$0 = $15;
         wasm2js_i32$1 = $13;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        };
        $9 = $7 + $8 | 0;
        if ($9 >>> 0 < $3 >>> 0) continue label$6;
        break label$6;
       } while (1);
      };
      wasm2js_i32$0 = $1 + 20 | 0;
      wasm2js_i32$1 = $3;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      $9 = 0;
      break label$3;
     };
     $9 = $8 + $5 | 0;
     wasm2js_i32$0 = $1 + 20 | 0;
     wasm2js_i32$1 = $9;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     label$15 : {
      if ($6) break label$15;
      wasm2js_i32$0 = $1 + 28 | 0;
      wasm2js_i32$1 = 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     };
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = $8;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $0 + 8 | 0;
     wasm2js_i32$1 = $9;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $9 = 1;
    };
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $9;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    return;
   };
   core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055492 | 0, $9 | 0, $5 | 0);
   abort();
  };
  core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055508 | 0, $17 | 0, $3 | 0);
  abort();
 }
 
 function core__hash__impls___$LT$impl$u20$core__hash__Hash$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$__hash__h997f8334a464a250($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($2 | 0, HEAPU32[$0 >> 2] | 0 | 0);
  _$LT$std__collections__hash__map__DefaultHasher$u20$as$u20$core__hash__Hasher$GT$__write__h48b3b4b166bc02b9_20_28_llvm_908532883051983360_29($1 | 0, HEAPU32[$2 >> 2] | 0 | 0, HEAPU32[($2 + 4 | 0) >> 2] | 0 | 0);
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 255;
  HEAP8[(wasm2js_i32$0 + 15 | 0) >> 0] = wasm2js_i32$1;
  _$LT$std__collections__hash__map__DefaultHasher$u20$as$u20$core__hash__Hasher$GT$__write__h48b3b4b166bc02b9_20_28_llvm_908532883051983360_29($1 | 0, $2 + 15 | 0 | 0, 1 | 0);
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$core__str__Split$LT$$u27$a$C$$u20$P$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h9844296a47f3edd6($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $5 = 0, $6 = 0, $2 = 0, $3 = 0, $4 = 0, $11 = 0, $10 = 0, $12 = 0, $7 = 0, $13 = 0, $14 = 0, $8 = 0, $9 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    label$3 : {
     if ((HEAPU8[($1 + 73 | 0) >> 0] | 0 | 0) == (0 | 0)) break label$3;
     $3 = 0;
     break label$2;
    };
    $4 = HEAPU32[($1 + 48 | 0) >> 2] | 0;
    label$4 : {
     label$5 : {
      label$6 : {
       label$7 : {
        if ((HEAPU32[$1 >> 2] | 0 | 0) != (1 | 0)) break label$7;
        $3 = $1 + 8 | 0;
        $5 = HEAPU32[($1 + 60 | 0) >> 2] | 0;
        $6 = HEAPU32[($1 + 52 | 0) >> 2] | 0;
        $7 = HEAPU32[($1 + 56 | 0) >> 2] | 0;
        if ((HEAPU32[($1 + 36 | 0) >> 2] | 0 | 0) == (4294967295 | 0)) break label$6;
        core__str__pattern__TwoWaySearcher__next__ha67a6584fbe06fc8($2 + 16 | 0 | 0, $3 | 0, $4 | 0, $6 | 0, $7 | 0, $5 | 0, 0 | 0);
        break label$5;
       };
       $7 = $1 + 12 | 0;
       $8 = $1 + 4 | 0;
       $9 = $1 + 52 | 0;
       label$8 : {
        label$9 : do {
         $10 = HEAPU8[$7 >> 0] | 0;
         wasm2js_i32$0 = $7;
         wasm2js_i32$1 = ($10 | 0) == (0 | 0);
         HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
         $3 = HEAPU32[$8 >> 2] | 0;
         $5 = HEAPU32[$9 >> 2] | 0;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = $5;
         HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = $4;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = $3;
         HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = $5;
         HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
         label$10 : {
          label$11 : {
           if (($3 | 0) == (0 | 0)) break label$11;
           if (($5 | 0) == ($3 | 0)) break label$11;
           if ($5 >>> 0 <= $3 >>> 0) break label$4;
           $6 = $4 + $3 | 0;
           if ((HEAP8[$6 >> 0] | 0 | 0) > (4294967231 | 0)) break label$10;
           break label$4;
          };
          $6 = $4 + $3 | 0;
         };
         label$12 : {
          label$13 : {
           label$14 : {
            $5 = $4 + $5 | 0;
            if (($6 | 0) == ($5 | 0)) break label$14;
            $6 = HEAP8[$6 >> 0] | 0;
            if (($6 | 0) < (0 | 0)) break label$13;
            $5 = $6 & 255 | 0;
            if (($10 | 0) == (0 | 0)) break label$12;
            break label$8;
           };
           $5 = 1114112;
           if (($10 | 0) == (0 | 0)) break label$12;
           break label$8;
          };
          label$15 : {
           label$16 : {
            $11 = $4 + $3 | 0;
            $12 = $11 + 1 | 0;
            if (($12 | 0) == ($5 | 0)) break label$16;
            $11 = $11 + 2 | 0;
            $12 = (HEAPU8[$12 >> 0] | 0) & 63 | 0;
            break label$15;
           };
           $12 = 0;
           $11 = $5;
          };
          $13 = $6 & 31 | 0;
          label$17 : {
           label$18 : {
            label$19 : {
             $6 = $6 & 255 | 0;
             if ($6 >>> 0 < 224 >>> 0) break label$19;
             if (($11 | 0) == ($5 | 0)) break label$18;
             $14 = $11 + 1 | 0;
             $11 = (HEAPU8[$11 >> 0] | 0) & 63 | 0;
             break label$17;
            };
            $5 = $12 | ($13 << 6 | 0) | 0;
            if (($10 | 0) == (0 | 0)) break label$12;
            break label$8;
           };
           $11 = 0;
           $14 = $5;
          };
          $11 = $11 | ($12 << 6 | 0) | 0;
          label$20 : {
           label$21 : {
            label$22 : {
             if ($6 >>> 0 < 240 >>> 0) break label$22;
             if (($14 | 0) == ($5 | 0)) break label$21;
             $5 = (HEAPU8[$14 >> 0] | 0) & 63 | 0;
             break label$20;
            };
            $5 = $11 | ($13 << 12 | 0) | 0;
            if (($10 | 0) == (0 | 0)) break label$12;
            break label$8;
           };
           $5 = 0;
          };
          $5 = $11 << 6 | 0 | (($13 << 18 | 0) & 1835008 | 0) | 0 | $5 | 0;
          if ($10) break label$8;
         };
         label$23 : {
          if (($5 | 0) == (1114112 | 0)) break label$23;
          $6 = 1;
          label$24 : {
           if ($5 >>> 0 < 128 >>> 0) break label$24;
           $6 = 2;
           if ($5 >>> 0 < 2048 >>> 0) break label$24;
           $6 = (wasm2js_i32$0 = 3, wasm2js_i32$1 = 4, wasm2js_i32$2 = $5 >>> 0 < 65536 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
          };
          wasm2js_i32$0 = $8;
          wasm2js_i32$1 = $6 + $3 | 0;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          continue label$9;
         };
         break label$9;
        } while (1);
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = 0;
        HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
        break label$5;
       };
       wasm2js_i32$0 = $2 + 24 | 0;
       wasm2js_i32$1 = $3;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $3;
       HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = 1;
       HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
       break label$5;
      };
      core__str__pattern__TwoWaySearcher__next__ha67a6584fbe06fc8($2 + 16 | 0 | 0, $3 | 0, $4 | 0, $6 | 0, $7 | 0, $5 | 0, 1 | 0);
     };
     label$25 : {
      if ((HEAPU32[($2 + 16 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$25;
      $3 = HEAPU32[($1 + 64 | 0) >> 2] | 0;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = HEAPU32[($2 + 24 | 0) >> 2] | 0;
      HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
      $5 = (HEAPU32[($2 + 20 | 0) >> 2] | 0) - $3 | 0;
      $3 = $4 + $3 | 0;
      break label$1;
     };
     $3 = 0;
     if (HEAPU8[($1 + 73 | 0) >> 0] | 0) break label$2;
     label$26 : {
      label$27 : {
       if ((HEAPU8[($1 + 72 | 0) >> 0] | 0 | 0) == (0 | 0)) break label$27;
       $6 = HEAPU32[($1 + 68 | 0) >> 2] | 0;
       $4 = HEAPU32[($1 + 64 | 0) >> 2] | 0;
       break label$26;
      };
      $6 = HEAPU32[($1 + 68 | 0) >> 2] | 0;
      $4 = HEAPU32[($1 + 64 | 0) >> 2] | 0;
      if (($6 | 0) == ($4 | 0)) break label$1;
     };
     wasm2js_i32$0 = $1 + 73 | 0;
     wasm2js_i32$1 = 1;
     HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
     $5 = $6 - $4 | 0;
     $3 = (HEAPU32[($1 + 48 | 0) >> 2] | 0) + $4 | 0;
     break label$1;
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $2 + 8 | 0;
    HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $2;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $2 + 12 | 0;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    core__str__traits___$LT$impl$u20$core__slice__SliceIndex$LT$str$GT$$u20$for$u20$core__ops__range__RangeFrom$LT$usize$GT$$GT$__index___$u7b$$u7b$closure$u7d$$u7d$__h40498af093b1e50e($2 + 16 | 0 | 0);
    abort();
   };
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $5;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $3;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $2 + 32 | 0;
 }
 
 function dbapp__functional_dependencies__AttributeSet__closure__hb8d3865e2539c254($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $16 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $13 = 0, $15 = 0, $5 = 0, $17 = 0, $12 = 0, $6 = 0, $7 = 0, $14 = 0, $18 = 0, $4 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $138 = 0, $152 = 0, $264 = 0, $278 = 0, $307 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 208 | 0;
  global$0 = $3;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($3 + 8 | 0 | 0, $1 | 0);
  $4 = (HEAPU32[($2 + 16 | 0) >> 2] | 0) + 1 | 0;
  $5 = (HEAPU32[($2 + 24 | 0) >> 2] | 0) & 4294967294 | 0;
  $6 = 24 - $5 | 0;
  $7 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
  $8 = ($3 + 120 | 0) + 40 | 0;
  $9 = ($3 + 120 | 0) + 4 | 0;
  $10 = ($3 + 120 | 0) + 8 | 0;
  $11 = $3 + 200 | 0;
  label$1 : do {
   std__collections__hash__table__calculate_layout__heca53458de3ef603($3 + 120 | 0 | 0, $4 | 0);
   $12 = 0;
   label$2 : {
    if (($7 | 0) == (0 | 0)) break label$2;
    $13 = HEAPU32[$10 >> 2] | 0;
    $14 = $5 + $13 | 0;
    $15 = $6 - $13 | 0;
    $2 = 4294967295;
    $16 = $5;
    label$3 : do {
     $15 = $15 + 4294967272 | 0;
     $2 = $2 + 1 | 0;
     $17 = HEAPU32[$16 >> 2] | 0;
     $16 = $16 + 4 | 0;
     if (($17 | 0) == (0 | 0)) continue label$3;
     break label$3;
    } while (1);
    $18 = $6 - $13 | 0;
    $16 = $2 + 1 | 0;
    $12 = 0;
    $13 = $7;
    label$4 : do {
     $13 = $13 + 4294967295 | 0;
     label$5 : {
      $2 = $14 + Math_imul($2, 24) | 0;
      if ((_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($2 | 0, $3 + 8 | 0 | 0) | 0 | 0) == (0 | 0)) break label$5;
      $2 = $2 + 12 | 0;
      if (_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($2 | 0, $3 + 8 | 0 | 0) | 0) break label$5;
      _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 80 | 0 | 0, $3 + 8 | 0 | 0);
      _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 40 | 0 | 0, $2 | 0);
      memcpy($9 | 0, $3 + 40 | 0 | 0, 36 | 0) | 0;
      memcpy($3 + 40 | 0 | 0, $3 + 120 | 0 | 0, 40 | 0) | 0;
      memcpy($3 + 120 | 0 | 0, $3 + 80 | 0 | 0, 36 | 0) | 0;
      wasm2js_i32$0 = ($3 + 120 | 0) + 36 | 0;
      wasm2js_i32$1 = 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      memcpy($8 | 0, $3 + 40 | 0 | 0, 40 | 0) | 0;
      wasm2js_i32$0 = $11;
      wasm2js_i32$1 = 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h8df78ab925a4e1b2($3 + 24 | 0 | 0, $3 + 120 | 0 | 0);
      $2 = ($3 + 8 | 0) + 8 | 0;
      wasm2js_i32$0 = ($3 + 40 | 0) + 8 | 0;
      wasm2js_i32$1 = HEAPU32[$2 >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$0 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
      $138 = i64toi32_i32$0;
      i64toi32_i32$0 = $3;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $138;
      HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 44 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 45 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 46 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 47 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 120 | 0 | 0, $3 + 40 | 0 | 0);
      _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 120 | 0 | 0);
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = HEAPU32[(($3 + 24 | 0) + 8 | 0) >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$1 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
      $152 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $152;
      HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      $12 = 1;
     };
     if (($13 | 0) == (0 | 0)) break label$2;
     $2 = $5 + ($16 << 2 | 0) | 0;
     $15 = $18 - Math_imul($16, 24) | 0;
     label$6 : do {
      $15 = $15 + 4294967272 | 0;
      $16 = $16 + 1 | 0;
      $17 = HEAPU32[$2 >> 2] | 0;
      $2 = $2 + 4 | 0;
      if (($17 | 0) == (0 | 0)) continue label$6;
      break label$6;
     } while (1);
     $2 = $16 + 4294967295 | 0;
     continue label$4;
     break label$4;
    } while (1);
   };
   std__collections__hash__table__calculate_layout__heca53458de3ef603($3 + 120 | 0 | 0, $4 | 0);
   label$7 : {
    label$8 : {
     if (($7 | 0) == (0 | 0)) break label$8;
     $13 = HEAPU32[$10 >> 2] | 0;
     $14 = $5 + $13 | 0;
     $15 = $6 - $13 | 0;
     $2 = 4294967295;
     $16 = $5;
     label$9 : do {
      $15 = $15 + 4294967272 | 0;
      $2 = $2 + 1 | 0;
      $17 = HEAPU32[$16 >> 2] | 0;
      $16 = $16 + 4 | 0;
      if (($17 | 0) == (0 | 0)) continue label$9;
      break label$9;
     } while (1);
     $18 = $6 - $13 | 0;
     $16 = $2 + 1 | 0;
     $13 = $7;
     label$10 : do {
      $13 = $13 + 4294967295 | 0;
      label$11 : {
       $2 = $14 + Math_imul($2, 24) | 0;
       if ((_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($2 | 0, $1 | 0) | 0 | 0) == (0 | 0)) break label$11;
       $2 = $2 + 12 | 0;
       if (_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($2 | 0, $3 + 8 | 0 | 0) | 0) break label$11;
       _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 80 | 0 | 0, $3 + 8 | 0 | 0);
       _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 40 | 0 | 0, $2 | 0);
       memcpy($9 | 0, $3 + 40 | 0 | 0, 36 | 0) | 0;
       memcpy($3 + 40 | 0 | 0, $3 + 120 | 0 | 0, 40 | 0) | 0;
       memcpy($3 + 120 | 0 | 0, $3 + 80 | 0 | 0, 36 | 0) | 0;
       wasm2js_i32$0 = ($3 + 120 | 0) + 36 | 0;
       wasm2js_i32$1 = 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       memcpy($8 | 0, $3 + 40 | 0 | 0, 40 | 0) | 0;
       wasm2js_i32$0 = $11;
       wasm2js_i32$1 = 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h8df78ab925a4e1b2($3 + 24 | 0 | 0, $3 + 120 | 0 | 0);
       $2 = ($3 + 8 | 0) + 8 | 0;
       wasm2js_i32$0 = ($3 + 40 | 0) + 8 | 0;
       wasm2js_i32$1 = HEAPU32[$2 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$0 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
       $264 = i64toi32_i32$0;
       i64toi32_i32$0 = $3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $264;
       HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 44 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 45 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 46 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 47 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 120 | 0 | 0, $3 + 40 | 0 | 0);
       _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 120 | 0 | 0);
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = HEAPU32[(($3 + 24 | 0) + 8 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$1 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
       $278 = i64toi32_i32$1;
       i64toi32_i32$1 = $3;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $278;
       HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $12 = 1;
      };
      label$12 : {
       if (($13 | 0) == (0 | 0)) break label$12;
       $2 = $5 + ($16 << 2 | 0) | 0;
       $15 = $18 - Math_imul($16, 24) | 0;
       label$13 : do {
        $15 = $15 + 4294967272 | 0;
        $16 = $16 + 1 | 0;
        $17 = HEAPU32[$2 >> 2] | 0;
        $2 = $2 + 4 | 0;
        if (($17 | 0) == (0 | 0)) continue label$13;
        break label$13;
       } while (1);
       $2 = $16 + 4294967295 | 0;
       continue label$10;
      };
      break label$10;
     } while (1);
     if ($12 & 1 | 0) continue label$1;
     break label$7;
    };
    if ($12 & 1 | 0) continue label$1;
   };
   break label$1;
  } while (1);
  i64toi32_i32$0 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $307 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $307;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[(($3 + 8 | 0) + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $3 + 208 | 0;
 }
 
 function _$LT$dbapp__functional_dependencies__AttributeSet$u20$as$u20$core__str__FromStr$GT$__from_str__h36eefaf88a3bb3ce($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $35 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 176 | 0;
  global$0 = $3;
  core__str__pattern__StrSearcher__new__h77816f7d465d5371($3 + 96 | 0 | 0, $1 | 0, $2 | 0, 1049806 | 0, 1 | 0);
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 164 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 160 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1;
  HEAP16[(wasm2js_i32$0 + 168 | 0) >> 1] = wasm2js_i32$1;
  memcpy($3 + 16 | 0 | 0, $3 + 96 | 0 | 0, 80 | 0) | 0;
  memcpy($3 + 96 | 0 | 0, $3 + 16 | 0 | 0, 80 | 0) | 0;
  _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h7fbcaed8e8cbf3a3($3 | 0, $3 + 96 | 0 | 0);
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[$3 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $35 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $35;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $3 + 176 | 0;
 }
 
 function dbapp__functional_dependencies__Dependency__minimize__h4b75696f9817e488($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $4 = 0, $6 = 0, $24 = 0, $52 = 0, $76 = 0, $91 = 0, $100 = 0, $120 = 0, $140 = 0, $159 = 0, $172 = 0, $177 = 0, $180 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 208 | 0;
  global$0 = $3;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($3 | 0, $1 | 0);
  $4 = $1 + 12 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($3 + 152 | 0 | 0, $4 | 0);
  wasm2js_i32$0 = $3 + 20 | 0;
  wasm2js_i32$1 = HEAPU32[($3 + 160 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAPU32[($3 + 152 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 156 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 157 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 158 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 159 | 0) >> 0] | 0 | 0) << 24);
  $24 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $24;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 16 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 17 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 18 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 19 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  label$1 : {
   label$2 : {
    if ((HEAPU32[($3 + 8 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$2;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
    HEAP32[(wasm2js_i32$0 + 152 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
    HEAP32[(wasm2js_i32$0 + 156 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $3;
    HEAP32[(wasm2js_i32$0 + 160 | 0) >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__clone_subtree__he5796344cf82ad38($3 + 64 | 0 | 0, $3 + 152 | 0 | 0);
    break label$1;
   };
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 1050784;
   HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 72 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 73 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 74 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 75 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  };
  $1 = ($3 + 152 | 0) + 8 | 0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = HEAPU32[(($3 + 64 | 0) + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAPU32[($3 + 64 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 68 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 69 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 70 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 71 | 0) >> 0] | 0 | 0) << 24);
  $52 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $52;
  HEAP32[(wasm2js_i32$0 + 152 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 156 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 157 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 158 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 159 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 24 | 0 | 0, $3 + 152 | 0 | 0);
  memcpy($3 + 64 | 0 | 0, $3 + 24 | 0 | 0, 36 | 0) | 0;
  _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($3 + 152 | 0 | 0, $3 + 64 | 0 | 0);
  label$3 : {
   label$4 : {
    label$5 : {
     if ((HEAPU32[($3 + 152 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$5;
     wasm2js_i32$0 = ($3 + 192 | 0) + 8 | 0;
     wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $3;
     i64toi32_i32$0 = HEAPU32[($3 + 152 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 156 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 157 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 158 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 159 | 0) >> 0] | 0 | 0) << 24);
     $76 = i64toi32_i32$0;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $76;
     HEAP32[(wasm2js_i32$0 + 192 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 196 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 197 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 198 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 199 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     if ((HEAPU32[($3 + 192 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$3;
     label$6 : do {
      $5 = ($3 + 104 | 0) + 8 | 0;
      $1 = ($3 + 192 | 0) + 8 | 0;
      wasm2js_i32$0 = $5;
      wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$2 = $3;
      i64toi32_i32$1 = HEAPU32[($3 + 192 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 196 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 197 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 198 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 199 | 0) >> 0] | 0 | 0) << 24);
      $91 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $91;
      HEAP32[(wasm2js_i32$0 + 104 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 108 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 109 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 110 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 111 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      $6 = ($3 + 120 | 0) + 8 | 0;
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$2 = $3;
      i64toi32_i32$0 = HEAPU32[($3 + 104 | 0) >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 108 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 109 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 110 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 111 | 0) >> 0] | 0 | 0) << 24);
      $100 = i64toi32_i32$0;
      i64toi32_i32$0 = $3;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $100;
      HEAP32[(wasm2js_i32$0 + 120 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 124 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 125 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 126 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 127 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__remove__h94d5372ff58d6bf8($3 | 0, $3 + 120 | 0 | 0) | 0;
      dbapp__functional_dependencies__AttributeSet__closure__hb8d3865e2539c254($3 + 136 | 0 | 0, $3 | 0, $2 | 0);
      $5 = _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($4 | 0, $3 + 136 | 0 | 0) | 0;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = HEAPU32[(($3 + 136 | 0) + 8 | 0) >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$2 = $3;
      i64toi32_i32$1 = HEAPU32[($3 + 136 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 140 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 141 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 142 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 143 | 0) >> 0] | 0 | 0) << 24);
      $120 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $120;
      HEAP32[(wasm2js_i32$0 + 192 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 196 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 197 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 198 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 199 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 152 | 0 | 0, $3 + 192 | 0 | 0);
      _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 152 | 0 | 0);
      label$7 : {
       label$8 : {
        if (($5 | 0) == (0 | 0)) break label$8;
        _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($3 + 120 | 0 | 0);
        _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($3 + 120 | 0 | 0);
        break label$7;
       };
       wasm2js_i32$0 = ($3 + 152 | 0) + 8 | 0;
       wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = $3;
       i64toi32_i32$0 = HEAPU32[($3 + 120 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 124 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 125 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 126 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 127 | 0) >> 0] | 0 | 0) << 24);
       $140 = i64toi32_i32$0;
       i64toi32_i32$0 = $3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $140;
       HEAP32[(wasm2js_i32$0 + 152 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 156 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 157 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 158 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 159 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__insert__he711eca5d2540e0e($3 | 0, $3 + 152 | 0 | 0) | 0;
      };
      _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($3 + 152 | 0 | 0, $3 + 64 | 0 | 0);
      if ((HEAPU32[($3 + 152 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$4;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = HEAPU32[(($3 + 152 | 0) + 8 | 0) >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$2 = $3;
      i64toi32_i32$1 = HEAPU32[($3 + 152 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 156 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 157 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 158 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 159 | 0) >> 0] | 0 | 0) << 24);
      $159 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $159;
      HEAP32[(wasm2js_i32$0 + 192 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 196 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 197 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 198 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 199 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      if (HEAPU32[($3 + 192 | 0) >> 2] | 0) continue label$6;
      break label$3;
      break label$6;
     } while (1);
    };
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 192 | 0) >> 2] = wasm2js_i32$1;
    break label$3;
   };
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 192 | 0) >> 2] = wasm2js_i32$1;
  };
  core__ptr__drop_in_place__h5f323eac697b9663($3 + 192 | 0 | 0);
  _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 64 | 0 | 0);
  i64toi32_i32$2 = $3 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $172 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $172;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $3 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $177 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $177;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAPU32[$3 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $180 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $180;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $3 + 208 | 0;
 }
 
 function _$LT$dbapp__functional_dependencies__Dependency$u20$as$u20$core__str__FromStr$GT$__from_str__h3e428ffa8d494e9f($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $48 = 0, $80 = 0, $83 = 0, $89 = 0, $93 = 0, $96 = 0, $107 = 0, $124 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 208 | 0;
  global$0 = $3;
  core__str___$LT$impl$u20$str$GT$__trim__hc1d729ddcc9832cb($3 + 16 | 0 | 0, $1 | 0, $2 | 0);
  $1 = HEAPU32[($3 + 20 | 0) >> 2] | 0;
  core__str__pattern__StrSearcher__new__h77816f7d465d5371($3 + 24 | 0 | 0, HEAPU32[($3 + 16 | 0) >> 2] | 0 | 0, $1 | 0, 1049807 | 0, 2 | 0);
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 92 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1;
  HEAP16[(wasm2js_i32$0 + 96 | 0) >> 1] = wasm2js_i32$1;
  _$LT$core__str__Split$LT$$u27$a$C$$u20$P$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h9844296a47f3edd6($3 + 8 | 0 | 0, $3 + 24 | 0 | 0);
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       $1 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
       if (($1 | 0) == (0 | 0)) break label$5;
       _$LT$dbapp__functional_dependencies__AttributeSet$u20$as$u20$core__str__FromStr$GT$__from_str__h36eefaf88a3bb3ce($3 + 120 | 0 | 0, $1 | 0, HEAPU32[($3 + 12 | 0) >> 2] | 0 | 0);
       if ((HEAPU32[($3 + 120 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$4;
       $2 = ($3 + 104 | 0) + 8 | 0;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = HEAPU32[(($3 + 120 | 0) + 8 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = $3;
       i64toi32_i32$0 = HEAPU32[($3 + 120 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 124 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 125 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 126 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 127 | 0) >> 0] | 0 | 0) << 24);
       $48 = i64toi32_i32$0;
       i64toi32_i32$0 = $3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $48;
       HEAP32[(wasm2js_i32$0 + 104 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 108 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 109 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 110 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 111 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       _$LT$core__str__Split$LT$$u27$a$C$$u20$P$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h9844296a47f3edd6($3 | 0, $3 + 24 | 0 | 0);
       $1 = HEAPU32[$3 >> 2] | 0;
       if (($1 | 0) == (0 | 0)) break label$3;
       _$LT$dbapp__functional_dependencies__AttributeSet$u20$as$u20$core__str__FromStr$GT$__from_str__h36eefaf88a3bb3ce($3 + 136 | 0 | 0, $1 | 0, HEAPU32[($3 + 4 | 0) >> 2] | 0 | 0);
       if ((HEAPU32[($3 + 136 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$2;
       $1 = ($3 + 152 | 0) + 8 | 0;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = HEAPU32[(($3 + 104 | 0) + 8 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3 + 172 | 0;
       wasm2js_i32$1 = HEAPU32[(($3 + 136 | 0) + 8 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = $3;
       i64toi32_i32$1 = HEAPU32[($3 + 104 | 0) >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 108 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 109 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 110 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 111 | 0) >> 0] | 0 | 0) << 24);
       $80 = i64toi32_i32$1;
       i64toi32_i32$1 = $3;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $80;
       HEAP32[(wasm2js_i32$0 + 152 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 156 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 157 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 158 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 159 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       i64toi32_i32$2 = $3;
       i64toi32_i32$0 = HEAPU32[($3 + 136 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 140 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 141 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 142 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 143 | 0) >> 0] | 0 | 0) << 24);
       $83 = i64toi32_i32$0;
       i64toi32_i32$0 = $3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $83;
       HEAP32[(wasm2js_i32$0 + 164 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 168 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 169 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 170 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 171 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       i64toi32_i32$2 = ($3 + 152 | 0) + 16 | 0;
       i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $89 = i64toi32_i32$1;
       i64toi32_i32$1 = $0 + 16 | 0;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = $89;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       i64toi32_i32$2 = $1;
       i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $93 = i64toi32_i32$0;
       i64toi32_i32$0 = $0 + 8 | 0;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = $93;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       i64toi32_i32$2 = $3;
       i64toi32_i32$1 = HEAPU32[($3 + 152 | 0) >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 156 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 157 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 158 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 159 | 0) >> 0] | 0 | 0) << 24);
       $96 = i64toi32_i32$1;
       i64toi32_i32$1 = $0;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = $96;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       break label$1;
      };
      wasm2js_i32$0 = $0;
      wasm2js_i32$1 = 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      break label$1;
     };
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     break label$1;
    };
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = ($3 + 192 | 0) + 8 | 0;
    wasm2js_i32$1 = HEAPU32[$2 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $3;
    i64toi32_i32$0 = HEAPU32[($3 + 104 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 108 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 109 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 110 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 111 | 0) >> 0] | 0 | 0) << 24);
    $107 = i64toi32_i32$0;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $107;
    HEAP32[(wasm2js_i32$0 + 192 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 196 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 197 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 198 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 199 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 152 | 0 | 0, $3 + 192 | 0 | 0);
    _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 152 | 0 | 0);
    break label$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = ($3 + 192 | 0) + 8 | 0;
   wasm2js_i32$1 = HEAPU32[(($3 + 104 | 0) + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAPU32[($3 + 104 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 108 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 109 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 110 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 111 | 0) >> 0] | 0 | 0) << 24);
   $124 = i64toi32_i32$1;
   i64toi32_i32$1 = $3;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = $124;
   HEAP32[(wasm2js_i32$0 + 192 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 196 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 197 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 198 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 199 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 152 | 0 | 0, $3 + 192 | 0 | 0);
   _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 152 | 0 | 0);
  };
  global$0 = $3 + 208 | 0;
 }
 
 function dbapp__functional_dependencies__DependencySet__effective_attributes__h5265051ebdcbfb37($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $5 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 208 | 0;
  global$0 = $2;
  _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hc39faf4470d85a20($2 + 8 | 0 | 0, $1 + 16 | 0 | 0);
  $1 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
  $3 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
  $4 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  std__collections__hash__table__calculate_layout__heca53458de3ef603($2 + 24 | 0 | 0, $4 + 1 | 0 | 0);
  $5 = HEAPU32[($2 + 32 | 0) >> 2] | 0;
  wasm2js_i32$0 = $2 + 44 | 0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 48 | 0;
  wasm2js_i32$1 = $3;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 124 | 0;
  wasm2js_i32$1 = 3;
  HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 200 | 0;
  wasm2js_i32$1 = 3;
  HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
  $6 = $1 & 4294967294 | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 24 | 0) + 16 | 0;
  wasm2js_i32$1 = $6 + $5 | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h85b9c76b39e3dc46($0 | 0, $2 + 24 | 0 | 0);
  global$0 = $2 + 208 | 0;
 }
 
 function dbapp__functional_dependencies__DependencySet__candidate_keys__h0df0125f28a114f5($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $12 = 0, $7 = 0, $9 = 0, $11 = 0, $4 = 0, $6 = 0, $10 = 0, $5 = 0, $8 = 0, $13 = 0, $15 = 0, $18 = 0, $16 = 0, $17 = 0, $43 = 0, $58 = 0, $61 = 0, $81 = 0, $84 = 0, $97 = 0, $114 = 0, $126 = 0, $138 = 0, $14 = 0, $19 = 0, $20 = 0, $212 = 0, $218 = 0, $276 = 0, $296 = 0, $315 = 0, $354 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 128 | 0;
  global$0 = $3;
  $4 = 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 4;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($3 + 88 | 0 | 0, $2 | 0);
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($3 + 48 | 0 | 0, $2 | 0);
  $2 = ($3 + 88 | 0) + 20 | 0;
  $5 = ($3 + 48 | 0) + 8 | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($3 + 48 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
  $43 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $43;
  HEAP32[(wasm2js_i32$0 + 100 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 104 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 105 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 106 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 107 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $6 = ($3 + 88 | 0) + 8 | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $7 = ($3 + 48 | 0) + 20 | 0;
  wasm2js_i32$0 = $7;
  wasm2js_i32$1 = HEAPU32[$2 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = HEAPU32[($3 + 88 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 92 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 93 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 94 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 95 | 0) >> 0] | 0 | 0) << 24);
  $58 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $58;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$0 = HEAPU32[($3 + 100 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 104 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 105 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 106 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 107 | 0) >> 0] | 0 | 0) << 24);
  $61 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $61;
  HEAP32[(wasm2js_i32$0 + 60 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 64 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 65 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 66 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 67 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  dbapp__functional_dependencies__Dependency__minimize__h4b75696f9817e488($3 + 88 | 0 | 0, $3 + 48 | 0 | 0, $1 | 0);
  $8 = ($3 + 24 | 0) + 8 | 0;
  wasm2js_i32$0 = $8;
  wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $9 = ($3 + 24 | 0) + 20 | 0;
  wasm2js_i32$0 = $9;
  wasm2js_i32$1 = HEAPU32[$2 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = HEAPU32[($3 + 88 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 92 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 93 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 94 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 95 | 0) >> 0] | 0 | 0) << 24);
  $81 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $81;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$0 = HEAPU32[($3 + 100 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 104 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 105 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 106 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 107 | 0) >> 0] | 0 | 0) << 24);
  $84 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $84;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 40 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 41 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 42 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 43 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h9e1a393fd5c982ea($3 + 8 | 0 | 0, 0 | 0, 1 | 0);
  $10 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  $2 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
  $11 = $10 + Math_imul($2, 12) | 0;
  i64toi32_i32$1 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
  $97 = i64toi32_i32$1;
  i64toi32_i32$1 = $11;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $97;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = i64toi32_i32$1 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[$8 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $12 = $2 + 1 | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $12;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  $13 = ($3 + 72 | 0) + 8 | 0;
  wasm2js_i32$0 = $13;
  wasm2js_i32$1 = HEAPU32[$9 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($3 + 36 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 40 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 41 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 42 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 43 | 0) >> 0] | 0 | 0) << 24);
  $114 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $114;
  HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 76 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 77 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 78 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 79 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 88 | 0 | 0, $3 + 72 | 0 | 0);
  _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 88 | 0 | 0);
  wasm2js_i32$0 = $8;
  wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = HEAPU32[($3 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
  $126 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $126;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 88 | 0 | 0, $3 + 24 | 0 | 0);
  _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 88 | 0 | 0);
  wasm2js_i32$0 = $8;
  wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($3 + 60 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 64 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 65 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 66 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 67 | 0) >> 0] | 0 | 0) << 24);
  $138 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $138;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 88 | 0 | 0, $3 + 24 | 0 | 0);
  _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 88 | 0 | 0);
  $14 = (HEAPU32[($1 + 16 | 0) >> 2] | 0) + 1 | 0;
  $15 = (HEAPU32[($1 + 24 | 0) >> 2] | 0) & 4294967294 | 0;
  $16 = 24 - $15 | 0;
  $17 = HEAPU32[($1 + 20 | 0) >> 2] | 0;
  $18 = 1;
  label$1 : {
   label$2 : do {
    std__collections__hash__table__calculate_layout__heca53458de3ef603($3 + 88 | 0 | 0, $14 | 0);
    label$3 : {
     if (($17 | 0) == (0 | 0)) break label$3;
     $11 = HEAPU32[$6 >> 2] | 0;
     $19 = $15 + $11 | 0;
     $7 = $16 - $11 | 0;
     $1 = 4294967295;
     $2 = $15;
     label$4 : do {
      $7 = $7 + 4294967272 | 0;
      $1 = $1 + 1 | 0;
      $9 = HEAPU32[$2 >> 2] | 0;
      $2 = $2 + 4 | 0;
      if (($9 | 0) == (0 | 0)) continue label$4;
      break label$4;
     } while (1);
     if ($12 >>> 0 <= $4 >>> 0) break label$1;
     $2 = $1 + 1 | 0;
     $20 = $16 - $11 | 0;
     $11 = $17;
     label$5 : do {
      $1 = $19 + Math_imul($1, 24) | 0;
      _$LT$$RF$$u27$a$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__ops__arith__Sub$LT$$RF$$u27$b$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$$GT$__sub__h185e88ba4071a156($3 + 24 | 0 | 0, $10 + Math_imul($4, 12) | 0 | 0, $1 + 12 | 0 | 0);
      _$LT$$RF$$u27$a$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__ops__bit__BitOr$LT$$RF$$u27$b$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$$GT$__bitor__h08dbd728a983bcf3($3 + 88 | 0 | 0, $1 | 0, $3 + 24 | 0 | 0);
      wasm2js_i32$0 = $13;
      wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$1 = HEAPU32[($3 + 88 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 92 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 93 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 94 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 95 | 0) >> 0] | 0 | 0) << 24);
      $212 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $212;
      HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 76 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 77 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 78 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 79 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      wasm2js_i32$0 = $5;
      wasm2js_i32$1 = HEAPU32[$8 >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$0 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
      $218 = i64toi32_i32$0;
      i64toi32_i32$0 = $3;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $218;
      HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      $11 = $11 + 4294967295 | 0;
      $9 = $10 + Math_imul($12, 12) | 0;
      _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 88 | 0 | 0, $3 + 48 | 0 | 0);
      _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 88 | 0 | 0);
      $1 = $10;
      label$6 : {
       label$7 : {
        label$8 : {
         label$9 : do {
          if (($9 - $1 | 0) >>> 0 <= 47 >>> 0) break label$8;
          if (_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($1 | 0, $3 + 72 | 0 | 0) | 0) break label$7;
          if (_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($1 + 12 | 0 | 0, $3 + 72 | 0 | 0) | 0) break label$7;
          if (_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($1 + 24 | 0 | 0, $3 + 72 | 0 | 0) | 0) break label$7;
          $7 = $1 + 36 | 0;
          $1 = $1 + 48 | 0;
          if ((_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($7 | 0, $3 + 72 | 0 | 0) | 0 | 0) == (0 | 0)) continue label$9;
          break label$7;
          break label$9;
         } while (1);
        };
        label$10 : {
         if (($1 | 0) == ($9 | 0)) break label$10;
         label$11 : do {
          if (_$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($1 | 0, $3 + 72 | 0 | 0) | 0) break label$7;
          $1 = $1 + 12 | 0;
          if (($9 | 0) != ($1 | 0)) continue label$11;
          break label$11;
         } while (1);
        };
        wasm2js_i32$0 = $6;
        wasm2js_i32$1 = HEAPU32[$13 >> 2] | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        i64toi32_i32$1 = HEAPU32[($3 + 72 | 0) >> 2] | 0;
        i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 76 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 77 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 78 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 79 | 0) >> 0] | 0 | 0) << 24);
        $276 = i64toi32_i32$1;
        i64toi32_i32$1 = $3;
        i64toi32_i32$0 = i64toi32_i32$0;
        wasm2js_i32$0 = $3;
        wasm2js_i32$1 = $276;
        HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = $3;
        wasm2js_i32$1 = i64toi32_i32$0;
        (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 92 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 93 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 94 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 95 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
        label$12 : {
         if (($12 | 0) != (HEAPU32[($3 + 12 | 0) >> 2] | 0 | 0)) break label$12;
         _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h9e1a393fd5c982ea($3 + 8 | 0 | 0, $12 | 0, 1 | 0);
         $12 = HEAPU32[(($3 + 8 | 0) + 8 | 0) >> 2] | 0;
         $10 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
        };
        $1 = $10 + Math_imul($12, 12) | 0;
        i64toi32_i32$0 = HEAPU32[($3 + 88 | 0) >> 2] | 0;
        i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 92 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 93 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 94 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 95 | 0) >> 0] | 0 | 0) << 24);
        $296 = i64toi32_i32$0;
        i64toi32_i32$0 = $1;
        i64toi32_i32$1 = i64toi32_i32$1;
        wasm2js_i32$0 = i64toi32_i32$0;
        wasm2js_i32$1 = $296;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = i64toi32_i32$0;
        wasm2js_i32$1 = i64toi32_i32$1;
        (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
        wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
        wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        $12 = $12 + 1 | 0;
        wasm2js_i32$0 = ($3 + 8 | 0) + 8 | 0;
        wasm2js_i32$1 = $12;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        $18 = $18 + 1 | 0;
        if ($11) break label$6;
        break label$3;
       };
       wasm2js_i32$0 = $5;
       wasm2js_i32$1 = HEAPU32[$13 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$1 = HEAPU32[($3 + 72 | 0) >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 76 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 77 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 78 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 79 | 0) >> 0] | 0 | 0) << 24);
       $315 = i64toi32_i32$1;
       i64toi32_i32$1 = $3;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $315;
       HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($3 + 88 | 0 | 0, $3 + 48 | 0 | 0);
       _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($3 + 88 | 0 | 0);
       if (($11 | 0) == (0 | 0)) break label$3;
      };
      $1 = $15 + ($2 << 2 | 0) | 0;
      $7 = $20 - Math_imul($2, 24) | 0;
      label$13 : do {
       $7 = $7 + 4294967272 | 0;
       $2 = $2 + 1 | 0;
       $9 = HEAPU32[$1 >> 2] | 0;
       $1 = $1 + 4 | 0;
       if (($9 | 0) == (0 | 0)) continue label$13;
       break label$13;
      } while (1);
      $1 = $2 + 4294967295 | 0;
      if ($12 >>> 0 > $4 >>> 0) continue label$5;
      break label$1;
      break label$5;
     } while (1);
    };
    $4 = $4 + 1 | 0;
    if ($4 >>> 0 < $18 >>> 0) continue label$2;
    break label$2;
   } while (1);
   i64toi32_i32$0 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $354 = i64toi32_i32$0;
   i64toi32_i32$0 = $0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $354;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[(($3 + 8 | 0) + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = $3 + 128 | 0;
   return;
  };
  core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055524 | 0, $4 | 0, $12 | 0);
  abort();
 }
 
 function _$LT$dbapp__functional_dependencies__DependencySet$u20$as$u20$core__str__FromStr$GT$__from_str__h02f3f6eae982459c($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $4 = 0, $13 = 0, $6 = 0, $5 = 0, $7 = 0, $8 = 0, $10 = 0, $12 = 0, $9 = 0, $14 = 0, $15 = 0, $15$hi = 0, $37 = 0, $42 = 0, $11 = 0, $235 = 0, $244 = 0, $247 = 0, $250 = 0, $253 = 0, $256 = 0, $274 = 0, $280 = 0, $286 = 0, $292 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 160 | 0;
  global$0 = $3;
  _$LT$std__thread__local__LocalKey$LT$T$GT$$GT$__with__he38b0091bd712cd5($3 + 24 | 0 | 0, 1055348 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  $15 = i64toi32_i32$0;
  $15$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAPU32[($3 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$0 = i64toi32_i32$0;
  $4 = 0;
  _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$GT$__new__h2374d5b6a2d22074($3 + 72 | 0 | 0, 0 | 0);
  $5 = ($3 + 72 | 0) + 8 | 0;
  wasm2js_i32$0 = ($3 + 40 | 0) + 24 | 0;
  wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = i64toi32_i32$0;
  $37 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $37;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$0 = $15$hi;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $15;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 44 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 45 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 46 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 47 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAPU32[($3 + 72 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 76 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 77 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 78 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 79 | 0) >> 0] | 0 | 0) << 24);
  $42 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $42;
  HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 60 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 61 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 62 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 63 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  core__str___$LT$impl$u20$str$GT$__trim__hc1d729ddcc9832cb($3 + 16 | 0 | 0, $1 | 0, $2 | 0);
  $6 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
  $7 = $3 + 84 | 0;
  $1 = HEAPU32[($3 + 20 | 0) >> 2] | 0;
  wasm2js_i32$0 = $7;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $2 = ($3 + 72 | 0) + 16 | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $8 = $3 + 92 | 0;
  wasm2js_i32$0 = $8;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = ($3 + 72 | 0) + 24 | 0;
  i64toi32_i32$1 = 1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = 10;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $9 = $3 + 104 | 0;
  wasm2js_i32$0 = $9;
  wasm2js_i32$1 = 10;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP16[(wasm2js_i32$0 + 108 | 0) >> 1] = wasm2js_i32$1;
  $10 = $3 + 109 | 0;
  $11 = $3 + 108 | 0;
  $12 = $3 + 100 | 0;
  $13 = $1;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : do {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            if ($1 >>> 0 < $4 >>> 0) break label$10;
            if ($13 >>> 0 < $1 >>> 0) break label$10;
            core__slice__memchr__memchr__h53efca7e69b2613d($3 + 8 | 0 | 0, HEAPU8[((($3 + 72 | 0) + (HEAPU32[$12 >> 2] | 0) | 0) + 31 | 0) >> 0] | 0 | 0, $6 + $4 | 0 | 0, $1 - $4 | 0 | 0);
            label$11 : {
             if ((HEAPU32[($3 + 8 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$11;
             $1 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
             label$12 : do {
              $1 = ($1 + (HEAPU32[$2 >> 2] | 0) | 0) + 1 | 0;
              wasm2js_i32$0 = $2;
              wasm2js_i32$1 = $1;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              label$13 : {
               $4 = HEAPU32[$12 >> 2] | 0;
               if ($1 >>> 0 < $4 >>> 0) break label$13;
               if ((HEAPU32[$7 >> 2] | 0) >>> 0 < $1 >>> 0) break label$13;
               if ($4 >>> 0 >= 5 >>> 0) break label$9;
               $13 = $1 - $4 | 0;
               $4 = core__slice___$LT$impl$u20$core__cmp__PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$__eq__hf1b1596e21e6043b((HEAPU32[$5 >> 2] | 0) + $13 | 0 | 0, $4 | 0, $9 | 0, $4 | 0) | 0;
               $1 = HEAPU32[$2 >> 2] | 0;
               if ($4) break label$8;
              };
              $4 = HEAPU32[$8 >> 2] | 0;
              if ($4 >>> 0 < $1 >>> 0) break label$10;
              if ((HEAPU32[$7 >> 2] | 0) >>> 0 < $4 >>> 0) break label$10;
              core__slice__memchr__memchr__h53efca7e69b2613d($3 | 0, HEAPU8[(($5 + (HEAPU32[$12 >> 2] | 0) | 0) + 23 | 0) >> 0] | 0 | 0, (HEAPU32[$5 >> 2] | 0) + $1 | 0 | 0, $4 - $1 | 0 | 0);
              $1 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
              if ((HEAPU32[$3 >> 2] | 0 | 0) == (1 | 0)) continue label$12;
              break label$12;
             } while (1);
            };
            wasm2js_i32$0 = $2;
            wasm2js_i32$1 = HEAPU32[$8 >> 2] | 0;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           };
           if (HEAPU8[$10 >> 0] | 0) break label$3;
           label$14 : {
            label$15 : {
             if ((HEAPU8[$11 >> 0] | 0 | 0) == (0 | 0)) break label$15;
             $13 = HEAPU32[($3 + 76 | 0) >> 2] | 0;
             $1 = HEAPU32[($3 + 72 | 0) >> 2] | 0;
             break label$14;
            };
            $13 = HEAPU32[($3 + 76 | 0) >> 2] | 0;
            $1 = HEAPU32[($3 + 72 | 0) >> 2] | 0;
            if (($13 | 0) == ($1 | 0)) break label$3;
           };
           wasm2js_i32$0 = $10;
           wasm2js_i32$1 = 1;
           HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
           $4 = (HEAPU32[$5 >> 2] | 0) + $1 | 0;
           $1 = $13 - $1 | 0;
           if (($1 | 0) == (0 | 0)) break label$6;
           break label$7;
          };
          core__slice__slice_index_len_fail__h9aa177f21a8ff28c($4 | 0, 4 | 0);
          abort();
         };
         $14 = HEAPU32[($3 + 72 | 0) >> 2] | 0;
         wasm2js_i32$0 = $3;
         wasm2js_i32$1 = $1;
         HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
         $4 = $6 + $14 | 0;
         $1 = $13 - $14 | 0;
         if (($1 | 0) == (0 | 0)) break label$6;
        };
        $13 = $1 + 4294967295 | 0;
        $1 = (wasm2js_i32$0 = $13, wasm2js_i32$1 = $1, wasm2js_i32$2 = (HEAPU8[($4 + $13 | 0) >> 0] | 0 | 0) == (13 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
        break label$5;
       };
       $1 = 0;
      };
      _$LT$dbapp__functional_dependencies__Dependency$u20$as$u20$core__str__FromStr$GT$__from_str__h3e428ffa8d494e9f($3 + 136 | 0 | 0, $4 | 0, $1 | 0);
      if ((HEAPU32[($3 + 136 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$2;
      $1 = ($3 + 112 | 0) + 16 | 0;
      $4 = ($3 + 136 | 0) + 16 | 0;
      i64toi32_i32$2 = $4;
      i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $235 = i64toi32_i32$1;
      i64toi32_i32$1 = $1;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = $235;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      $13 = ($3 + 112 | 0) + 8 | 0;
      $6 = ($3 + 136 | 0) + 8 | 0;
      i64toi32_i32$2 = $6;
      i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $244 = i64toi32_i32$0;
      i64toi32_i32$0 = $13;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = i64toi32_i32$0;
      wasm2js_i32$1 = $244;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$0;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      i64toi32_i32$2 = $3;
      i64toi32_i32$1 = HEAPU32[($3 + 136 | 0) >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 140 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 141 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 142 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 143 | 0) >> 0] | 0 | 0) << 24);
      $247 = i64toi32_i32$1;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $247;
      HEAP32[(wasm2js_i32$0 + 112 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 116 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 117 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 118 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 119 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      i64toi32_i32$2 = $1;
      i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $250 = i64toi32_i32$0;
      i64toi32_i32$0 = $4;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = i64toi32_i32$0;
      wasm2js_i32$1 = $250;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$0;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      i64toi32_i32$2 = $13;
      i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $253 = i64toi32_i32$1;
      i64toi32_i32$1 = $6;
      i64toi32_i32$0 = i64toi32_i32$0;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = $253;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$1;
      wasm2js_i32$1 = i64toi32_i32$0;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      i64toi32_i32$2 = $3;
      i64toi32_i32$0 = HEAPU32[($3 + 112 | 0) >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 116 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 117 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 118 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 119 | 0) >> 0] | 0 | 0) << 24);
      $256 = i64toi32_i32$0;
      i64toi32_i32$0 = $3;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $256;
      HEAP32[(wasm2js_i32$0 + 136 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 140 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 141 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 142 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 143 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      _$LT$std__collections__hash__map__HashMap$LT$K$C$$u20$V$C$$u20$S$GT$$GT$__insert__hc79096d12c4aaf3c($3 + 40 | 0 | 0, $3 + 136 | 0 | 0) | 0;
      if (HEAPU8[$10 >> 0] | 0) break label$3;
      $1 = HEAPU32[$8 >> 2] | 0;
      $4 = HEAPU32[$2 >> 2] | 0;
      $13 = HEAPU32[$7 >> 2] | 0;
      $6 = HEAPU32[$5 >> 2] | 0;
      continue label$4;
      break label$4;
     } while (1);
    };
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAPU32[($3 + 40 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 44 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 45 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 46 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 47 | 0) >> 0] | 0 | 0) << 24);
    $274 = i64toi32_i32$1;
    i64toi32_i32$1 = $0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $274;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = ($3 + 40 | 0) + 24 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $280 = i64toi32_i32$0;
    i64toi32_i32$0 = $0 + 24 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $280;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = ($3 + 40 | 0) + 16 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $286 = i64toi32_i32$1;
    i64toi32_i32$1 = $0 + 16 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $286;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = ($3 + 40 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $292 = i64toi32_i32$0;
    i64toi32_i32$0 = $0 + 8 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $292;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    break label$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hccaa43b317c76f2b($3 + 56 | 0 | 0);
  };
  global$0 = $3 + 160 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $4 = 0, $3 = 0, $35 = 0, $38 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  $1 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  alloc__collections__btree__map__first_leaf_edge__hc9a2b9367ef0b541($0 | 0, $2 | 0);
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  alloc__collections__btree__map__last_leaf_edge__hd536fca1aa64c628($2 | 0, $2 + 16 | 0 | 0);
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $2 + 8 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $35 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + 24 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $35;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = HEAPU32[$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $38 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $38;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 32 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($0) {
  $0 = $0 | 0;
  var $1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2 = 0, $3 = 0, $20 = 0, $63 = 0, $72 = 0, $87 = 0, $93 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 64 | 0;
  global$0 = $1;
  _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($1 | 0, $0 | 0);
  label$1 : {
   if ((HEAPU32[$1 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   label$2 : do {
    wasm2js_i32$0 = ($1 + 32 | 0) + 8 | 0;
    wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $20 = i64toi32_i32$0;
    i64toi32_i32$0 = $1;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $20;
    HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($1 + 32 | 0 | 0);
    _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($1 + 32 | 0 | 0);
    label$3 : {
     if (HEAPU32[$1 >> 2] | 0) break label$3;
     core__ptr__drop_in_place__h5b266f34524b084f($1 | 0);
    };
    _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($1 | 0, $0 | 0);
    if (HEAPU32[$1 >> 2] | 0) continue label$2;
    break label$2;
   } while (1);
  };
  core__ptr__drop_in_place__h5b266f34524b084f($1 | 0);
  label$4 : {
   $2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   if (($2 | 0) == (1050784 | 0)) break label$4;
   $3 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   $0 = HEAPU32[$0 >> 2] | 0;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $2;
   HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $0;
   HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Leaf$GT$$GT$__deallocate_and_ascend__h9151da6af63a93f7($1 | 0, $1 + 32 | 0 | 0);
   if ((HEAPU32[($1 + 4 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$4;
   $0 = ($1 + 16 | 0) + 8 | 0;
   $3 = $1 + 8 | 0;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$1 = HEAPU32[$1 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $63 = i64toi32_i32$1;
   i64toi32_i32$1 = $1;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $63;
   HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $2 = ($1 + 48 | 0) + 8 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = HEAPU32[$1 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $72 = i64toi32_i32$0;
   i64toi32_i32$0 = $1;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $72;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$GT$__deallocate_and_ascend__hc26bb7d2bd4949b9($1 + 32 | 0 | 0, $1 + 48 | 0 | 0);
   if ((HEAPU32[($1 + 36 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$4;
   label$5 : do {
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = HEAPU32[(($1 + 32 | 0) + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
    $87 = i64toi32_i32$1;
    i64toi32_i32$1 = $1;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $87;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$0 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
    $93 = i64toi32_i32$0;
    i64toi32_i32$0 = $1;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $93;
    HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$GT$__deallocate_and_ascend__hc26bb7d2bd4949b9($1 + 32 | 0 | 0, $1 + 48 | 0 | 0);
    if (HEAPU32[($1 + 36 | 0) >> 2] | 0) continue label$5;
    break label$5;
   } while (1);
  };
  global$0 = $1 + 64 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3 = 0, $4 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $115 = 0, $157 = 0, $194 = 0, $199 = 0, $218 = 0, $242 = 0, $245 = 0, $252 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 112 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    label$3 : {
     $3 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
     if (($3 | 0) == (0 | 0)) break label$3;
     wasm2js_i32$0 = $1 + 32 | 0;
     wasm2js_i32$1 = $3 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $4 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
     $5 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
     $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
     if ($5 >>> 0 >= (HEAPU16[($3 + 6 | 0) >> 1] | 0) >>> 0) break label$2;
     $6 = $3 + Math_imul($5, 12) | 0;
     $7 = HEAPU32[($6 + 16 | 0) >> 2] | 0;
     wasm2js_i32$0 = ($2 + 24 | 0) + 8 | 0;
     wasm2js_i32$1 = $7;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $6 + 8 | 0;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     i64toi32_i32$1 = i64toi32_i32$1;
     $8 = i64toi32_i32$0;
     wasm2js_i32$0 = $1 + 4 | 0;
     wasm2js_i32$1 = $3;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1 + 8 | 0;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1 + 12 | 0;
     wasm2js_i32$1 = $5 + 1 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = i64toi32_i32$1;
     i64toi32_i32$0 = $0;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = $8;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$0;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
     wasm2js_i32$1 = $7;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = i64toi32_i32$1;
     i64toi32_i32$0 = $2;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $8;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     break label$1;
    };
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    break label$1;
   };
   $5 = HEAPU32[$1 >> 2] | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $5;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $4;
   HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Leaf$GT$$GT$__deallocate_and_ascend__h9151da6af63a93f7($2 + 8 | 0 | 0, $2 + 24 | 0 | 0);
   $3 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
   $4 = HEAPU16[($3 + 6 | 0) >> 1] | 0;
   $6 = ($2 + 24 | 0) + 8 | 0;
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $3 = ($2 + 24 | 0) + 12 | 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $7 = $2 + 40 | 0;
   $5 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
   wasm2js_i32$0 = $7;
   wasm2js_i32$1 = $5;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
   HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
   label$4 : {
    label$5 : {
     if ($5 >>> 0 >= $4 >>> 0) break label$5;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = 0;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
     $3 = $2 + 24 | 0 | 4 | 0;
     $4 = $2 + 48 | 0;
     break label$4;
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 1;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = ($2 + 48 | 0) + 8 | 0;
    wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = HEAPU32[($2 + 28 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 32 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 33 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 34 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 35 | 0) >> 0] | 0 | 0) << 24);
    $115 = i64toi32_i32$1;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $115;
    HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$GT$__deallocate_and_ascend__hc26bb7d2bd4949b9($2 + 8 | 0 | 0, $2 + 48 | 0 | 0);
    $4 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
    $5 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU32[(($2 + 8 | 0) + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $4 = HEAPU32[(($2 + 8 | 0) + 12 | 0) >> 2] | 0;
    wasm2js_i32$0 = $7;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
    $3 = $2 + 24 | 0 | 4 | 0;
    label$6 : {
     if ($4 >>> 0 < $5 >>> 0) break label$6;
     $6 = $2 + 40 | 0;
     label$7 : do {
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = 1;
      HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = ($2 + 48 | 0) + 8 | 0;
      wasm2js_i32$1 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      i64toi32_i32$2 = $3;
      i64toi32_i32$0 = HEAPU32[$3 >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
      $157 = i64toi32_i32$0;
      i64toi32_i32$0 = $2;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $157;
      HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      _$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Owned$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$GT$__deallocate_and_ascend__hc26bb7d2bd4949b9($2 + 8 | 0 | 0, $2 + 48 | 0 | 0);
      $4 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
      $5 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
      wasm2js_i32$0 = ($2 + 24 | 0) + 8 | 0;
      wasm2js_i32$1 = $4;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = ($2 + 24 | 0) + 12 | 0;
      wasm2js_i32$1 = HEAPU32[(($2 + 8 | 0) + 8 | 0) >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      $4 = HEAPU32[(($2 + 8 | 0) + 12 | 0) >> 2] | 0;
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = $4;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
      HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
      if ($4 >>> 0 >= $5 >>> 0) continue label$7;
      break label$7;
     } while (1);
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    $4 = $2 + 48 | 0;
   };
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAPU32[$3 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $3, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $194 = i64toi32_i32$1;
   i64toi32_i32$1 = $4;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $194;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $3 + 8 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $199 = i64toi32_i32$0;
   i64toi32_i32$0 = $4 + 8 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $199;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $3 = ($2 + 64 | 0) + 8 | 0;
   $5 = HEAPU32[($2 + 52 | 0) >> 2] | 0;
   $6 = HEAPU32[($2 + 60 | 0) >> 2] | 0;
   $7 = $5 + Math_imul($6, 12) | 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = HEAPU32[($7 + 16 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $7 + 8 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $218 = i64toi32_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $218;
   HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[(($5 + ($6 << 2 | 0) | 0) + 144 | 0) >> 2] | 0;
   HEAP32[(wasm2js_i32$0 + 100 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[($2 + 56 | 0) >> 2] | 0;
   HEAP32[(wasm2js_i32$0 + 104 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = (HEAPU32[$4 >> 2] | 0) + 4294967295 | 0;
   HEAP32[(wasm2js_i32$0 + 96 | 0) >> 2] = wasm2js_i32$1;
   alloc__collections__btree__map__first_leaf_edge__hc9a2b9367ef0b541($2 + 80 | 0 | 0, $2 + 96 | 0 | 0);
   i64toi32_i32$2 = ($2 + 80 | 0) + 8 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $242 = i64toi32_i32$0;
   i64toi32_i32$0 = $1 + 8 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $242;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 84 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 85 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 86 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 87 | 0) >> 0] | 0 | 0) << 24);
   $245 = i64toi32_i32$1;
   i64toi32_i32$1 = $1;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $245;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[($2 + 64 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 68 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 69 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 70 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 71 | 0) >> 0] | 0 | 0) << 24);
   $252 = i64toi32_i32$0;
   i64toi32_i32$0 = $0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $252;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  };
  global$0 = $2 + 112 | 0;
 }
 
 function core__ptr__drop_in_place__h5b266f34524b084f($0) {
  $0 = $0 | 0;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($0 | 0);
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($0 | 0);
  };
 }
 
 function alloc__collections__btree__map__first_leaf_edge__hc9a2b9367ef0b541($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $7 = 0, $2 = 0, $4 = 0, i64toi32_i32$1 = 0, $3 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  $3 = $2 + 8 | 0;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $5 = $2 + 12 | 0;
  $6 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = $6;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $7 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $7;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = ($7 | 0) != (0 | 0);
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    if (($7 | 0) == (0 | 0)) break label$2;
    $7 = $7 + 4294967295 | 0;
    label$3 : do {
     $4 = HEAPU32[($4 + 140 | 0) >> 2] | 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $6;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $7;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($7 | 0) != (0 | 0);
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $7 = $7 + 4294967295 | 0;
     if (($7 | 0) != (4294967295 | 0)) continue label$3;
     break label$3;
    } while (1);
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1 + 4 | 0;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $7 = $2 | 4 | 0;
    break label$1;
   };
   $7 = $2 | 4 | 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = (wasm2js_i32$0 = $7, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($7 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function alloc__collections__btree__map__last_leaf_edge__hd536fca1aa64c628($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $7 = 0, $4 = 0, $6 = 0, i64toi32_i32$1 = 0, $3 = 0, $5 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  $3 = $2 + 8 | 0;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $5 = $2 + 12 | 0;
  $6 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = $6;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $7 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $7;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = ($7 | 0) != (0 | 0);
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    if (($7 | 0) == (0 | 0)) break label$2;
    $7 = $7 + 4294967295 | 0;
    label$3 : do {
     $4 = HEAPU32[(($4 + ((HEAPU16[($4 + 6 | 0) >> 1] | 0) << 2 | 0) | 0) + 140 | 0) >> 2] | 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $6;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $7;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($7 | 0) != (0 | 0);
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $7 = $7 + 4294967295 | 0;
     if (($7 | 0) != (4294967295 | 0)) continue label$3;
     break label$3;
    } while (1);
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1 + 4 | 0;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $7 = $2 | 4 | 0;
    $2 = $2 + 16 | 0;
    break label$1;
   };
   $7 = $2 | 4 | 0;
   $2 = $2 + 16 | 0;
  };
  i64toi32_i32$1 = (wasm2js_i32$0 = $7, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $2 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($7 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, $2 = 0, i64toi32_i32$4 = 0, $3 = 0, i64toi32_i32$3 = 0, $4 = 0, $5 = 0, $9 = 0, $9$hi = 0, $6 = 0, $27 = 0, $7 = 0, $28 = 0, $8 = 0, $29 = 0, $30 = 0, $42$hi = 0, $44$hi = 0, $87 = 0, $90 = 0, $97$hi = 0, $99 = 0, $99$hi = 0, $129 = 0, $134 = 0, $164 = 0, $167 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 80 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    $3 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
    $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    if ($3 >>> 0 >= (HEAPU16[($4 + 6 | 0) >> 1] | 0) >>> 0) break label$2;
    wasm2js_i32$0 = $1 + 12 | 0;
    wasm2js_i32$1 = $3 + 1 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $3 = ($4 + Math_imul($3, 12) | 0) + 8 | 0;
    break label$1;
   };
   $5 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   $6 = HEAPU32[$1 >> 2] | 0;
   label$3 : {
    label$4 : {
     $3 = HEAPU32[$4 >> 2] | 0;
     if (($3 | 0) == (0 | 0)) break label$4;
     $6 = $6 + 1 | 0;
     i64toi32_i32$2 = $4;
     i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0;
     i64toi32_i32$1 = 0;
     i64toi32_i32$1 = i64toi32_i32$1;
     i64toi32_i32$2 = i64toi32_i32$0;
     i64toi32_i32$0 = 0;
     i64toi32_i32$3 = 32;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
      $27 = 0;
     } else {
      i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
      $27 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     }
     $42$hi = i64toi32_i32$0;
     i64toi32_i32$0 = 0;
     $44$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $42$hi;
     i64toi32_i32$1 = $27;
     i64toi32_i32$2 = $44$hi;
     i64toi32_i32$3 = $5;
     i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
     i64toi32_i32$2 = i64toi32_i32$2;
     $9 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
     $9$hi = i64toi32_i32$2;
     break label$3;
    };
    i64toi32_i32$2 = 0;
    i64toi32_i32$2 = i64toi32_i32$2;
    $9 = $5;
    $9$hi = i64toi32_i32$2;
    $3 = 0;
   };
   $7 = ($2 + 8 | 0) + 8 | 0;
   wasm2js_i32$0 = $7;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $6;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   label$5 : {
    label$6 : {
     i64toi32_i32$2 = $9$hi;
     i64toi32_i32$2 = i64toi32_i32$2;
     i64toi32_i32$0 = $9;
     i64toi32_i32$1 = 0;
     i64toi32_i32$3 = 32;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$1 = 0;
      $28 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
     } else {
      i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
      $28 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
     }
     i64toi32_i32$1 = i64toi32_i32$1;
     $4 = $28;
     if ($4 >>> 0 >= (HEAPU16[($3 + 6 | 0) >> 1] | 0) >>> 0) break label$6;
     wasm2js_i32$0 = $2 + 24 | 0;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = $9$hi;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $2 + 20 | 0;
     wasm2js_i32$1 = $9;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = 0;
     HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
     $5 = $2 + 8 | 0 | 4 | 0;
     $3 = $2 + 32 | 0;
     break label$5;
    };
    $8 = $2 + 20 | 0;
    i64toi32_i32$1 = $9$hi;
    i64toi32_i32$0 = $8;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $9;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 1;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    $5 = $2 + 8 | 0 | 4 | 0;
    label$7 : do {
     i64toi32_i32$2 = $5 + 8 | 0;
     i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $87 = i64toi32_i32$1;
     i64toi32_i32$1 = ($2 + 48 | 0) + 8 | 0;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $87;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$2 = $5;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $90 = i64toi32_i32$0;
     i64toi32_i32$0 = $2;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $90;
     HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     label$8 : {
      $4 = HEAPU32[$3 >> 2] | 0;
      if (($4 | 0) == (0 | 0)) break label$8;
      i64toi32_i32$2 = $3;
      i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$0 = i64toi32_i32$0;
      i64toi32_i32$2 = i64toi32_i32$1;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
       $29 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
       $29 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
      }
      $97$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $9$hi;
      i64toi32_i32$1 = i64toi32_i32$1;
      i64toi32_i32$0 = $9;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = 4294967295;
      i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
      $99 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
      $99$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $97$hi;
      i64toi32_i32$1 = $29;
      i64toi32_i32$0 = $99$hi;
      i64toi32_i32$3 = $99;
      i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
      i64toi32_i32$0 = i64toi32_i32$0;
      $9 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
      $9$hi = i64toi32_i32$0;
      $6 = $6 + 1 | 0;
     };
     wasm2js_i32$0 = $7;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $6;
     HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
     label$9 : {
      i64toi32_i32$0 = $9$hi;
      i64toi32_i32$0 = i64toi32_i32$0;
      i64toi32_i32$2 = $9;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = 0;
       $30 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
       $30 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
      }
      i64toi32_i32$1 = i64toi32_i32$1;
      $3 = $30;
      if ($3 >>> 0 < (HEAPU16[($4 + 6 | 0) >> 1] | 0) >>> 0) break label$9;
      i64toi32_i32$1 = $9$hi;
      i64toi32_i32$2 = $8;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = i64toi32_i32$2;
      wasm2js_i32$1 = $9;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = i64toi32_i32$2;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = 1;
      HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
      $3 = $4;
      continue label$7;
     };
     break label$7;
    } while (1);
    wasm2js_i32$0 = $2 + 24 | 0;
    wasm2js_i32$1 = $3;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = $9$hi;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $2 + 20 | 0;
    wasm2js_i32$1 = $9;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    $3 = $2 + 32 | 0;
   };
   i64toi32_i32$0 = $5;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $129 = i64toi32_i32$1;
   i64toi32_i32$1 = $3;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $129;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$0 = i64toi32_i32$0 + 8 | 0;
   i64toi32_i32$2 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $134 = i64toi32_i32$2;
   i64toi32_i32$2 = $3 + 8 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$2;
   wasm2js_i32$1 = $134;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $4 = HEAPU32[($5 + 4 | 0) >> 2] | 0;
   $6 = HEAPU32[($5 + 12 | 0) >> 2] | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[($2 + 40 | 0) >> 2] | 0;
   HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = (HEAPU32[$3 >> 2] | 0) + 4294967295 | 0;
   HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = HEAPU32[(((HEAPU32[($2 + 36 | 0) >> 2] | 0) + ((HEAPU32[($2 + 44 | 0) >> 2] | 0) << 2 | 0) | 0) + 144 | 0) >> 2] | 0;
   HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
   alloc__collections__btree__map__first_leaf_edge__h2e002077133379a1($2 + 48 | 0 | 0, $2 + 64 | 0 | 0);
   i64toi32_i32$0 = ($2 + 48 | 0) + 8 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $164 = i64toi32_i32$1;
   i64toi32_i32$1 = $1 + 8 | 0;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $164;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$0 = $2;
   i64toi32_i32$2 = HEAPU32[($2 + 48 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
   $167 = i64toi32_i32$2;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$2;
   wasm2js_i32$1 = $167;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $3 = ($4 + Math_imul($6, 12) | 0) + 8 | 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $3;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4 + 140 | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  global$0 = $2 + 80 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $3 = 0, $36 = 0, $39 = 0, $42 = 0, $47 = 0, $51 = 0, $55 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 64 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  alloc__collections__btree__map__first_leaf_edge__h2e002077133379a1($2 | 0, $2 + 32 | 0 | 0);
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 52 | 0) >> 2] = wasm2js_i32$1;
  alloc__collections__btree__map__last_leaf_edge__h6407226ec51b7d42($2 + 32 | 0 | 0, $2 + 48 | 0 | 0);
  $3 = $2 + 24 | 0;
  i64toi32_i32$2 = ($2 + 32 | 0) + 8 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $36 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $36;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = HEAPU32[($2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
  $39 = i64toi32_i32$1;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $39;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$0 = HEAPU32[$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $42 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $42;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $47 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $47;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$0 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
  $51 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $51;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $55 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + 24 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $55;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  global$0 = $2 + 64 | 0;
 }
 
 function core__ptr__drop_in_place__hed9337c1a9882ac9($0) {
  $0 = $0 | 0;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   $0 = $0 + 16 | 0;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($0 | 0);
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($0 | 0);
  };
 }
 
 function alloc__collections__btree__map__last_leaf_edge__h6407226ec51b7d42($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $7 = 0, $4 = 0, $6 = 0, i64toi32_i32$1 = 0, $3 = 0, $5 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  $3 = $2 + 8 | 0;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $5 = $2 + 12 | 0;
  $6 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = $6;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $7 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $7;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = ($7 | 0) != (0 | 0);
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    if (($7 | 0) == (0 | 0)) break label$2;
    $7 = $7 + 4294967295 | 0;
    label$3 : do {
     $4 = HEAPU32[(($4 + ((HEAPU16[($4 + 6 | 0) >> 1] | 0) << 2 | 0) | 0) + 140 | 0) >> 2] | 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $6;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $7;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($7 | 0) != (0 | 0);
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $7 = $7 + 4294967295 | 0;
     if (($7 | 0) != (4294967295 | 0)) continue label$3;
     break label$3;
    } while (1);
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1 + 4 | 0;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $7 = $2 | 4 | 0;
    $2 = $2 + 16 | 0;
    break label$1;
   };
   $7 = $2 | 4 | 0;
   $2 = $2 + 16 | 0;
  };
  i64toi32_i32$1 = (wasm2js_i32$0 = $7, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $2 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($7 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function alloc__collections__btree__map__first_leaf_edge__h2e002077133379a1($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $7 = 0, $2 = 0, $4 = 0, i64toi32_i32$1 = 0, $3 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  $3 = $2 + 8 | 0;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $5 = $2 + 12 | 0;
  $6 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = $6;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $7 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $7;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = ($7 | 0) != (0 | 0);
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    if (($7 | 0) == (0 | 0)) break label$2;
    $7 = $7 + 4294967295 | 0;
    label$3 : do {
     $4 = HEAPU32[($4 + 140 | 0) >> 2] | 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $6;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $7;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($7 | 0) != (0 | 0);
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $7 = $7 + 4294967295 | 0;
     if (($7 | 0) != (4294967295 | 0)) continue label$3;
     break label$3;
    } while (1);
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1 + 4 | 0;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $7 = $2 | 4 | 0;
    break label$1;
   };
   $7 = $2 | 4 | 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = (wasm2js_i32$0 = $7, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($7 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function alloc__collections__btree__map__first_leaf_edge__h8b678c55a12f3f3f($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $7 = 0, $2 = 0, $4 = 0, i64toi32_i32$1 = 0, $3 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  $3 = $2 + 8 | 0;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $5 = $2 + 12 | 0;
  $6 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $5;
  wasm2js_i32$1 = $6;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $7 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $7;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = ($7 | 0) != (0 | 0);
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    if (($7 | 0) == (0 | 0)) break label$2;
    $7 = $7 + 4294967295 | 0;
    label$3 : do {
     $4 = HEAPU32[($4 + 140 | 0) >> 2] | 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $6;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $7;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($7 | 0) != (0 | 0);
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $7 = $7 + 4294967295 | 0;
     if (($7 | 0) != (4294967295 | 0)) continue label$3;
     break label$3;
    } while (1);
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1 + 4 | 0;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $7 = $2 | 4 | 0;
    break label$1;
   };
   $7 = $2 | 4 | 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = (wasm2js_i32$0 = $7, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($7 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function alloc__collections__btree__map__handle_underfull_node__h2d72a08f3e99902a($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $4 = 0, i64toi32_i32$2 = 0, $3 = 0, $5 = 0, $6 = 0, $73 = 0, $76 = 0, $99 = 0, $102 = 0, $114 = 0, $122 = 0, $131 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 64 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
       $4 = HEAPU32[$3 >> 2] | 0;
       if (($4 | 0) == (0 | 0)) break label$5;
       $5 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
       $6 = 1;
       $1 = (HEAPU32[$1 >> 2] | 0) + 1 | 0;
       $3 = HEAPU16[($3 + 4 | 0) >> 1] | 0;
       if (($3 | 0) == (0 | 0)) break label$4;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $4;
       HEAP32[(wasm2js_i32$0 + 52 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $1;
       HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $5;
       HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 27 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $4;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 32 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 33 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 34 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $5;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 35 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $1 = $3 + 4294967295 | 0;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $1;
       HEAP32[(wasm2js_i32$0 + 60 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 40 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 41 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 42 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $1 = $2 + 27 | 0;
       break label$3;
      };
      wasm2js_i32$0 = $0;
      wasm2js_i32$1 = 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      break label$1;
     };
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1;
     HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $5;
     HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 60 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $4;
     HEAP32[(wasm2js_i32$0 + 52 | 0) >> 2] = wasm2js_i32$1;
     if ((HEAPU16[($4 + 6 | 0) >> 1] | 0 | 0) == (0 | 0)) break label$2;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $4;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 32 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 33 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 34 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 27 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $5;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 35 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 40 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 41 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 42 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $1 = $2 + 27 | 0;
     $6 = 0;
    };
    $4 = ($2 + 8 | 0) + 8 | 0;
    i64toi32_i32$2 = $1 + 8 | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[wasm2js_i32$0 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 1 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 2 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 3 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $73 = i64toi32_i32$0;
    i64toi32_i32$0 = $4;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $73;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $1;
    i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[wasm2js_i32$0 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 1 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 2 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 3 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $76 = i64toi32_i32$1;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $76;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    label$6 : {
     $1 = (HEAPU32[($2 + 12 | 0) >> 2] | 0) + ((HEAPU32[($2 + 20 | 0) >> 2] | 0) << 2 | 0) | 0;
     if ((((HEAPU16[((HEAPU32[($1 + 140 | 0) >> 2] | 0) + 6 | 0) >> 1] | 0) + (HEAPU16[((HEAPU32[($1 + 144 | 0) >> 2] | 0) + 6 | 0) >> 1] | 0) | 0) + 1 | 0) >>> 0 >= 12 >>> 0) break label$6;
     $1 = ($2 + 24 | 0) + 8 | 0;
     i64toi32_i32$2 = $4;
     i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $99 = i64toi32_i32$0;
     i64toi32_i32$0 = $1;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $99;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$2 = $2;
     i64toi32_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
     $102 = i64toi32_i32$1;
     i64toi32_i32$1 = $2;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $102;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__merge__hb1b0051062846c6f($2 + 48 | 0 | 0, $2 + 24 | 0 | 0);
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = HEAPU32[(($2 + 48 | 0) + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$0 = HEAPU32[($2 + 48 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
     $114 = i64toi32_i32$0;
     i64toi32_i32$0 = $2;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $114;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = 2;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $0 + 12 | 0;
     wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$1 = HEAPU32[($2 + 24 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
     $122 = i64toi32_i32$1;
     i64toi32_i32$1 = $0;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $122;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     break label$1;
    };
    label$7 : {
     label$8 : {
      if (($6 | 0) == (0 | 0)) break label$8;
      _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__steal_left__h2e495003246f8092($2 + 8 | 0 | 0);
      break label$7;
     };
     _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__KV$GT$$GT$__steal_right__h78f03274e390ff68($2 + 8 | 0 | 0);
    };
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
    $131 = i64toi32_i32$0;
    i64toi32_i32$0 = $0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $131;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = 3;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0 + 12 | 0;
    wasm2js_i32$1 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    break label$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $1;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 8 | 0;
   wasm2js_i32$1 = $4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 12 | 0;
   wasm2js_i32$1 = $5;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  global$0 = $2 + 64 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__entry__h5994341b878759ad($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $3 = 0, $5 = 0, $4 = 0, $6 = 0, $54 = 0, $6$hi = 0, $65 = 0, $69 = 0, $74 = 0, $84 = 0, $93 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 64 | 0;
  global$0 = $3;
  label$1 : {
   label$2 : {
    $4 = HEAPU32[$1 >> 2] | 0;
    if (($4 | 0) == (1050784 | 0)) break label$2;
    $5 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    break label$1;
   };
   _$LT$alloc__collections__btree__node__Root$LT$K$C$$u20$V$GT$$GT$__new_leaf__h68eff2757de7a210($3 | 0);
   $4 = HEAPU32[$3 >> 2] | 0;
   $5 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $5;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $5;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  alloc__collections__btree__search__search_tree__hba997feb6bda6482($3 + 8 | 0 | 0, $3 + 32 | 0 | 0, $2 | 0);
  $5 = 1;
  $4 = $3 + 8 | 0 | 4 | 0;
  label$3 : {
   label$4 : {
    if ((HEAPU32[($3 + 8 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$4;
    $5 = ($3 + 32 | 0) + 8 | 0;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $4 + 8 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $54 = i64toi32_i32$0;
    i64toi32_i32$0 = ($3 + 32 | 0) + 20 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $54;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $6 = i64toi32_i32$1;
    $6$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = $0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $6;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = i64toi32_i32$1 + 32 | 0;
    wasm2js_i32$1 = $1 + 8 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $4;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $65 = i64toi32_i32$0;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $65;
    HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 48 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 49 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 50 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 51 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $5;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $69 = i64toi32_i32$1;
    i64toi32_i32$1 = $0 + 12 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $69;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $3 + 48 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $74 = i64toi32_i32$0;
    i64toi32_i32$0 = $0 + 20 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $74;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $0 + 28 | 0;
    wasm2js_i32$1 = HEAPU32[($3 + 56 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = $6$hi;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $6;
    HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $5 = 0;
    break label$3;
   };
   i64toi32_i32$2 = $4;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $84 = i64toi32_i32$1;
   i64toi32_i32$1 = $0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $84;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$1 + 20 | 0;
   wasm2js_i32$1 = $1 + 8 | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $93 = i64toi32_i32$0;
   i64toi32_i32$0 = $0 + 12 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $93;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($2 | 0);
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($2 | 0);
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $5;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $3 + 64 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__insert__he711eca5d2540e0e($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $2 = 0, i64toi32_i32$2 = 0, $3 = 0, $4 = 0, $17 = 0, $34 = 0, $37 = 0, $44 = 0, $51 = 0, $58 = 0, $61 = 0, $66 = 0, $71 = 0, $74 = 0, $77 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 112 | 0;
  global$0 = $2;
  $3 = ($2 + 80 | 0) + 8 | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $17 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $17;
  HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__entry__h5994341b878759ad(i64toi32_i32$0 + 8 | 0 | 0, $0 | 0, i64toi32_i32$0 + 80 | 0 | 0);
  $1 = 1;
  label$1 : {
   label$2 : {
    if ((HEAPU32[(i64toi32_i32$0 + 8 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$2;
    wasm2js_i32$0 = $2 + 96 | 0;
    wasm2js_i32$1 = HEAPU32[($2 + 28 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2 + 20 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $34 = i64toi32_i32$1;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $34;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 16 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 17 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 18 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 19 | 0) >> 0] | 0 | 0) << 24);
    $37 = i64toi32_i32$0;
    i64toi32_i32$0 = $2;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $37;
    HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    break label$1;
   };
   $1 = $2 + 36 | 0;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $44 = i64toi32_i32$1;
   i64toi32_i32$1 = ($2 + 48 | 0) + 24 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $44;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $0 = $2 + 28 | 0;
   i64toi32_i32$2 = $0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $51 = i64toi32_i32$0;
   i64toi32_i32$0 = ($2 + 48 | 0) + 16 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $51;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $4 = $2 + 20 | 0;
   i64toi32_i32$2 = $4;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $58 = i64toi32_i32$1;
   i64toi32_i32$1 = ($2 + 48 | 0) + 8 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $58;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 16 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 17 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 18 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 19 | 0) >> 0] | 0 | 0) << 24);
   $61 = i64toi32_i32$0;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $61;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $66 = i64toi32_i32$1;
   i64toi32_i32$1 = ($2 + 80 | 0) + 24 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $66;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $71 = i64toi32_i32$0;
   i64toi32_i32$0 = ($2 + 80 | 0) + 16 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $71;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $4;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $74 = i64toi32_i32$1;
   i64toi32_i32$1 = $3;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $74;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 16 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 17 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 18 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 19 | 0) >> 0] | 0 | 0) << 24);
   $77 = i64toi32_i32$0;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $77;
   HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   _$LT$alloc__collections__btree__map__VacantEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__insert__h2f19af99da22ca02(i64toi32_i32$0 + 80 | 0 | 0) | 0;
   $1 = 0;
  };
  global$0 = $2 + 112 | 0;
  return $1 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__VacantEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__insert__h2f19af99da22ca02($0) {
  $0 = $0 | 0;
  var $1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $2 = 0, $5 = 0, $3 = 0, $6 = 0, $7 = 0, $8 = 0, $4 = 0, $9 = 0, $28 = 0, $31 = 0, $40 = 0, $60 = 0, $104 = 0, $10 = 0, $11 = 0, $12 = 0, $129 = 0, $13 = 0, $166 = 0, $205 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 96 | 0;
  global$0 = $1;
  $2 = HEAPU32[($0 + 28 | 0) >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = (HEAPU32[$2 >> 2] | 0) + 1 | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $0 + 20 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $28 = i64toi32_i32$0;
  i64toi32_i32$0 = ($1 + 64 | 0) + 8 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $28;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $0;
  i64toi32_i32$1 = HEAPU32[(i64toi32_i32$2 + 12 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 16 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 17 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 18 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 19 | 0) >> 0] | 0 | 0) << 24);
  $31 = i64toi32_i32$1;
  i64toi32_i32$1 = $1;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $31;
  HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = ($1 + 80 | 0) + 8 | 0;
  wasm2js_i32$1 = HEAPU32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $40 = i64toi32_i32$0;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $40;
  HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Leaf$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert__h30350e746b7d0b66($1 + 24 | 0 | 0, $1 + 64 | 0 | 0, $1 + 80 | 0 | 0);
  label$1 : {
   label$2 : {
    label$3 : {
     if ((HEAPU32[($1 + 24 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$3;
     wasm2js_i32$0 = ($1 + 8 | 0) + 8 | 0;
     wasm2js_i32$1 = HEAPU32[($1 + 48 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $3 = $1 + 40 | 0;
     i64toi32_i32$2 = $3;
     i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $60 = i64toi32_i32$1;
     i64toi32_i32$1 = $1;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $60;
     HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $2 = HEAPU32[($1 + 36 | 0) >> 2] | 0;
     $0 = HEAPU32[($1 + 52 | 0) >> 2] | 0;
     $4 = HEAPU32[($1 + 60 | 0) >> 2] | 0;
     $5 = HEAPU32[(($1 + 24 | 0) + 8 | 0) >> 2] | 0;
     $6 = HEAPU32[$5 >> 2] | 0;
     if (($6 | 0) == (0 | 0)) break label$2;
     $7 = HEAPU32[($1 + 56 | 0) >> 2] | 0;
     $5 = HEAPU16[($5 + 4 | 0) >> 1] | 0;
     $8 = HEAPU32[($1 + 28 | 0) >> 2] | 0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $6;
     HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $8 + 1 | 0;
     HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $2;
     HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $5;
     HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
     $9 = ($1 + 80 | 0) + 8 | 0;
     $5 = ($1 + 8 | 0) + 8 | 0;
     wasm2js_i32$0 = $9;
     wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $1;
     i64toi32_i32$0 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
     $104 = i64toi32_i32$0;
     i64toi32_i32$0 = $1;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $104;
     HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert__heb60b6b8959c9b5d($1 + 24 | 0 | 0, $1 + 64 | 0 | 0, $1 + 80 | 0 | 0, $0 | 0, $7 | 0);
     label$4 : {
      if ((HEAPU32[($1 + 24 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$4;
      $10 = ($1 + 24 | 0) + 12 | 0;
      $11 = $1 + 56 | 0;
      $12 = $1 + 52 | 0;
      label$5 : do {
       wasm2js_i32$0 = $5;
       wasm2js_i32$1 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = $3;
       i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $129 = i64toi32_i32$1;
       i64toi32_i32$1 = $1;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $129;
       HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $2 = HEAPU32[$10 >> 2] | 0;
       $0 = HEAPU32[$12 >> 2] | 0;
       $6 = HEAPU32[(($1 + 24 | 0) + 8 | 0) >> 2] | 0;
       $7 = HEAPU32[$6 >> 2] | 0;
       if (($7 | 0) == (0 | 0)) break label$2;
       $8 = HEAPU32[$11 >> 2] | 0;
       $6 = HEAPU16[($6 + 4 | 0) >> 1] | 0;
       $13 = HEAPU32[($1 + 28 | 0) >> 2] | 0;
       wasm2js_i32$0 = ($1 + 64 | 0) + 8 | 0;
       wasm2js_i32$1 = $2;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = ($1 + 64 | 0) + 12 | 0;
       wasm2js_i32$1 = $6;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $7;
       HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $13 + 1 | 0;
       HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $9;
       wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = $1;
       i64toi32_i32$0 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
       $166 = i64toi32_i32$0;
       i64toi32_i32$0 = $1;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $166;
       HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       _$LT$alloc__collections__btree__node__Handle$LT$alloc__collections__btree__node__NodeRef$LT$alloc__collections__btree__node__marker__Mut$LT$$u27$a$GT$$C$$u20$K$C$$u20$V$C$$u20$alloc__collections__btree__node__marker__Internal$GT$$C$$u20$alloc__collections__btree__node__marker__Edge$GT$$GT$__insert__heb60b6b8959c9b5d($1 + 24 | 0 | 0, $1 + 64 | 0 | 0, $1 + 80 | 0 | 0, $0 | 0, $8 | 0);
       if ((HEAPU32[($1 + 24 | 0) >> 2] | 0 | 0) == (1 | 0)) continue label$5;
       break label$5;
      } while (1);
     };
     core__ptr__drop_in_place__hed9337c1a9882ac9($1 + 24 | 0 | 0);
     break label$1;
    };
    $4 = (HEAPU32[(($1 + 24 | 0) + 8 | 0) >> 2] | 0) + 140 | 0;
    break label$1;
   };
   _$LT$alloc__collections__btree__node__Root$LT$K$C$$u20$V$GT$$GT$__push_level__hce7a863fec2fb051($1 + 24 | 0 | 0, $2 | 0);
   $2 = HEAPU32[($1 + 28 | 0) >> 2] | 0;
   $3 = HEAPU16[($2 + 6 | 0) >> 1] | 0;
   $5 = $2 + Math_imul($3, 12) | 0;
   wasm2js_i32$0 = $5 + 16 | 0;
   wasm2js_i32$1 = HEAPU32[(($1 + 8 | 0) + 8 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $205 = i64toi32_i32$1;
   i64toi32_i32$1 = $5 + 8 | 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $205;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $3 = $3 + 1 | 0;
   wasm2js_i32$0 = ($2 + ($3 << 2 | 0) | 0) + 140 | 0;
   wasm2js_i32$1 = $0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $3;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $3;
   HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  global$0 = $1 + 96 | 0;
  return $4 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__remove__h94d5372ff58d6bf8($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $26 = 0, $29 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  alloc__collections__btree__search__search_tree__hba997feb6bda6482($2 | 0, $2 + 24 | 0 | 0, $1 | 0);
  $1 = 0;
  label$1 : {
   if ((HEAPU32[$2 >> 2] | 0 | 0) == (1 | 0)) break label$1;
   i64toi32_i32$2 = $2 + 12 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $26 = i64toi32_i32$0;
   i64toi32_i32$0 = ($2 + 24 | 0) + 8 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $26;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 4 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 8 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 9 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 10 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 11 | 0) >> 0] | 0 | 0) << 24);
   $29 = i64toi32_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $29;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $0 + 8 | 0;
   HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__map__OccupiedEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__remove__h854788fe09ebd606($2 + 24 | 0 | 0);
   $1 = 1;
  };
  global$0 = $2 + 48 | 0;
  return $1 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__OccupiedEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__remove__h854788fe09ebd606($0) {
  $0 = $0 | 0;
  var $1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $16 = 0, $19 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 48 | 0;
  global$0 = $1;
  wasm2js_i32$0 = ($1 + 24 | 0) + 16 | 0;
  wasm2js_i32$1 = HEAPU32[($0 + 16 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $0 + 8 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $16 = i64toi32_i32$0;
  i64toi32_i32$0 = ($1 + 24 | 0) + 8 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $16;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $19 = i64toi32_i32$1;
  i64toi32_i32$1 = $1;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $19;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__collections__btree__map__OccupiedEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__remove_kv__h342fe59082cd03ed($1 + 8 | 0 | 0, $1 + 24 | 0 | 0);
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($1 + 8 | 0 | 0);
  _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($1 + 8 | 0 | 0);
  global$0 = $1 + 48 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__OccupiedEntry$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__remove_kv__h342fe59082cd03ed($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, i64toi32_i32$4 = 0, i64toi32_i32$3 = 0, $8 = 0, $6 = 0, $10 = 0, $10$hi = 0, $35 = 0, $36 = 0, $71$hi = 0, $75 = 0, $75$hi = 0, $101 = 0, $123 = 0, $132 = 0, $145 = 0, $158 = 0, $159 = 0, $173 = 0, $196 = 0, $205 = 0, $213 = 0, $219 = 0, $225 = 0, $234 = 0, $250 = 0, $265 = 0, $318 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 96 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = (HEAPU32[$3 >> 2] | 0) + 4294967295 | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $4 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
  $5 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      $1 = HEAPU32[$1 >> 2] | 0;
      if (($1 | 0) == (0 | 0)) break label$4;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $5;
      HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $1;
      HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $3;
      HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $4;
      HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $1 + 4294967295 | 0;
      HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $5;
      HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = HEAPU32[(($3 + ($4 << 2 | 0) | 0) + 144 | 0) >> 2] | 0;
      HEAP32[(wasm2js_i32$0 + 84 | 0) >> 2] = wasm2js_i32$1;
      $1 = ($3 + Math_imul($4, 12) | 0) + 8 | 0;
      alloc__collections__btree__map__first_leaf_edge__h8b678c55a12f3f3f($2 + 8 | 0 | 0, $2 + 80 | 0 | 0);
      $6 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
      $5 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
      $3 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
      if ($5 >>> 0 >= (HEAPU16[($3 + 6 | 0) >> 1] | 0) >>> 0) break label$3;
      i64toi32_i32$0 = 0;
      i64toi32_i32$0 = i64toi32_i32$0;
      i64toi32_i32$2 = $5;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
       $35 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
       $35 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
      }
      $71$hi = i64toi32_i32$1;
      i64toi32_i32$0 = ($2 + 8 | 0) + 8 | 0;
      i64toi32_i32$1 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
      i64toi32_i32$2 = 0;
      $75 = i64toi32_i32$1;
      $75$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $71$hi;
      i64toi32_i32$0 = $35;
      i64toi32_i32$1 = $75$hi;
      i64toi32_i32$3 = $75;
      i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
      i64toi32_i32$1 = i64toi32_i32$1;
      $10 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
      $10$hi = i64toi32_i32$1;
      break label$2;
     };
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
     $6 = 0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = 0;
     HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $5;
     HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $4;
     HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
     $7 = HEAPU16[($3 + 6 | 0) >> 1] | 0;
     $8 = ($2 + 8 | 0) + 8 | 0;
     $1 = $3 + Math_imul($4, 12) | 0;
     wasm2js_i32$0 = $8;
     wasm2js_i32$1 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $1 + 8 | 0;
     i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
     $101 = i64toi32_i32$1;
     i64toi32_i32$1 = $2;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $101;
     HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     memmove(i64toi32_i32$2 | 0, $1 + 20 | 0 | 0, Math_imul($7 + ($4 ^ 4294967295 | 0) | 0, 12) | 0) | 0;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = (HEAPU16[($3 + 6 | 0) >> 1] | 0) + 4294967295 | 0;
     HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
     $1 = ($2 + 80 | 0) + 8 | 0;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = HEAPU32[$8 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
     $123 = i64toi32_i32$0;
     i64toi32_i32$0 = $2;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $123;
     HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $4 = ($2 + 64 | 0) + 8 | 0;
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$1 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 84 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 85 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 86 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 87 | 0) >> 0] | 0 | 0) << 24);
     $132 = i64toi32_i32$1;
     i64toi32_i32$1 = $2;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $132;
     HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = ($2 + 8 | 0) + 20 | 0;
     wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = 0;
     HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $5;
     HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$0 = HEAPU32[($2 + 64 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 68 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 69 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 70 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 71 | 0) >> 0] | 0 | 0) << 24);
     $145 = i64toi32_i32$0;
     i64toi32_i32$0 = $2;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $145;
     HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 24 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 25 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 26 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 27 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     $4 = $3 + 6 | 0;
     $1 = ($2 + 8 | 0) + 12 | 0;
     break label$1;
    };
    i64toi32_i32$2 = ($2 + 8 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $10 = i64toi32_i32$1;
    $10$hi = i64toi32_i32$0;
    $3 = 0;
   };
   $5 = ($2 + 8 | 0) + 8 | 0;
   $158 = $5;
   $159 = $3;
   i64toi32_i32$0 = $10$hi;
   i64toi32_i32$0 = i64toi32_i32$0;
   i64toi32_i32$2 = $10;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $36 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $36 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   i64toi32_i32$1 = i64toi32_i32$1;
   $7 = $36;
   $4 = $159 + Math_imul($7, 12) | 0;
   wasm2js_i32$0 = $158;
   wasm2js_i32$1 = HEAPU32[($4 + 16 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $8 = $4 + 8 | 0;
   i64toi32_i32$0 = $8;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $173 = i64toi32_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $173;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   memmove(i64toi32_i32$0 | 0, $4 + 20 | 0 | 0, Math_imul((HEAPU16[($3 + 6 | 0) >> 1] | 0) + ($7 ^ 4294967295 | 0) | 0, 12) | 0) | 0;
   wasm2js_i32$0 = $3;
   wasm2js_i32$1 = (HEAPU16[($3 + 6 | 0) >> 1] | 0) + 4294967295 | 0;
   HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
   $7 = ($2 + 48 | 0) + 8 | 0;
   wasm2js_i32$0 = $7;
   wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $2;
   i64toi32_i32$2 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $196 = i64toi32_i32$2;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $196;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $4 = ($2 + 80 | 0) + 8 | 0;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 48 | 0) >> 2] | 0;
   i64toi32_i32$2 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
   $205 = i64toi32_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $205;
   HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $7 = $1 + 8 | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $1;
   i64toi32_i32$2 = HEAPU32[$1 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $213 = i64toi32_i32$2;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $213;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $7;
   wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
   i64toi32_i32$2 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 84 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 85 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 86 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 87 | 0) >> 0] | 0 | 0) << 24);
   $219 = i64toi32_i32$1;
   i64toi32_i32$1 = $1;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $219;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $2;
   i64toi32_i32$2 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $225 = i64toi32_i32$2;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $225;
   HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $1 = ($2 + 64 | 0) + 8 | 0;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
   i64toi32_i32$2 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 84 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 85 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 86 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 87 | 0) >> 0] | 0 | 0) << 24);
   $234 = i64toi32_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$2 = i64toi32_i32$2;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $234;
   HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$2;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 68 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 69 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 70 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 71 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = ($2 + 8 | 0) + 20 | 0;
   wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $6;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $10$hi;
   i64toi32_i32$2 = i64toi32_i32$2;
   $5 = $10;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $5;
   HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$0 = $2;
   i64toi32_i32$2 = HEAPU32[($2 + 64 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 68 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 69 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 70 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 71 | 0) >> 0] | 0 | 0) << 24);
   $250 = i64toi32_i32$2;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $250;
   HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 24 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 25 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 26 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 27 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $4 = $3 + 6 | 0;
   $1 = ($2 + 8 | 0) + 12 | 0;
  };
  $7 = ($2 + 80 | 0) + 8 | 0;
  wasm2js_i32$0 = $7;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = HEAPU32[$1 >> 2] | 0;
  i64toi32_i32$2 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $265 = i64toi32_i32$1;
  i64toi32_i32$1 = $2;
  i64toi32_i32$2 = i64toi32_i32$2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $265;
  HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$2;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  label$5 : {
   if ((HEAPU16[$4 >> 1] | 0) >>> 0 > 4 >>> 0) break label$5;
   $1 = ($2 + 32 | 0) + 8 | 0;
   $4 = $2 + 20 | 0;
   label$6 : {
    label$7 : {
     label$8 : {
      label$9 : do {
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $5;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $3;
       HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $6;
       HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
       alloc__collections__btree__map__handle_underfull_node__h2d72a08f3e99902a($2 + 8 | 0 | 0, $2 + 32 | 0 | 0);
       $3 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
       if (($3 | 0) != (2 | 0)) break label$8;
       $5 = HEAPU32[$4 >> 2] | 0;
       $3 = HEAPU32[(($2 + 8 | 0) + 8 | 0) >> 2] | 0;
       $8 = HEAPU16[($3 + 6 | 0) >> 1] | 0;
       if (($8 | 0) == (0 | 0)) break label$7;
       $6 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
       if ($8 >>> 0 < 5 >>> 0) continue label$9;
       break label$5;
       break label$9;
      } while (1);
     };
     if (($3 | 0) == (1 | 0)) break label$6;
     break label$5;
    };
    $3 = HEAPU32[$5 >> 2] | 0;
    $1 = HEAPU32[($3 + 140 | 0) >> 2] | 0;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $1;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = (HEAPU32[($5 + 4 | 0) >> 2] | 0) + 4294967295 | 0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    __rust_dealloc($3 | 0, 188 | 0, 4 | 0);
    break label$5;
   };
   core__panicking__panic__h629a30fc6a0298aa(1055548 | 0);
   abort();
  };
  i64toi32_i32$0 = $2;
  i64toi32_i32$2 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 84 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 85 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 86 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 87 | 0) >> 0] | 0 | 0) << 24);
  $318 = i64toi32_i32$2;
  i64toi32_i32$2 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = $318;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = i64toi32_i32$2 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[$7 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $2 + 96 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__hash__Hash$GT$__hash__h960bebd8f444d8b5($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 96 | 0;
  global$0 = $2;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($2 + 8 | 0 | 0, $0 | 0);
  memcpy($2 + 48 | 0 | 0, $2 + 8 | 0 | 0, 36 | 0) | 0;
  label$1 : {
   $0 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
   if (($0 | 0) == (0 | 0)) break label$1;
   $3 = $2 + 80 | 0;
   label$2 : do {
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $0 + 4294967295 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 | 0, $2 + 48 | 0 | 0);
    $0 = HEAPU32[$2 >> 2] | 0;
    if (($0 | 0) == (0 | 0)) break label$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = HEAPU32[($2 + 4 | 0) >> 2] | 0;
    HEAP32[(wasm2js_i32$0 + 92 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $0;
    HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
    core__hash__impls___$LT$impl$u20$core__hash__Hash$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$__hash__h997f8334a464a250($2 + 88 | 0 | 0, $1 | 0);
    $0 = HEAPU32[$3 >> 2] | 0;
    if ($0) continue label$2;
    break label$2;
   } while (1);
  };
  global$0 = $2 + 96 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__clone_subtree__he5796344cf82ad38($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$1 = 0, $10 = 0, i64toi32_i32$0 = 0, $4 = 0, $6 = 0, $11 = 0, $12 = 0, $7 = 0, $8 = 0, $3 = 0, $5 = 0, $14 = 0, $13 = 0, $9 = 0, $151 = 0, $195 = 0, $219 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 112 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     $1 = HEAPU32[$1 >> 2] | 0;
     if (($1 | 0) == (0 | 0)) break label$3;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1;
     HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $4;
     HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
     $5 = $1 + 4294967295 | 0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $5;
     HEAP32[(wasm2js_i32$0 + 96 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 104 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = HEAPU32[($4 + 140 | 0) >> 2] | 0;
     HEAP32[(wasm2js_i32$0 + 100 | 0) >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__clone_subtree__he5796344cf82ad38($2 + 32 | 0 | 0, $2 + 96 | 0 | 0);
     _$LT$alloc__collections__btree__node__Root$LT$K$C$$u20$V$GT$$GT$__push_level__hce7a863fec2fb051($2 + 48 | 0 | 0, $2 + 32 | 0 | 0);
     label$4 : {
      if ((HEAPU16[($4 + 6 | 0) >> 1] | 0 | 0) == (0 | 0)) break label$4;
      $6 = $4 + 144 | 0;
      $7 = $4 + 8 | 0;
      $8 = 0;
      $1 = HEAPU32[($2 + 52 | 0) >> 2] | 0;
      $9 = $4 + 6 | 0;
      label$5 : do {
       _$LT$alloc__string__String$u20$as$u20$core__clone__Clone$GT$__clone__h67225b6b9d7ffedf($2 + 64 | 0 | 0, $7 | 0);
       $10 = ($2 + 96 | 0) + 8 | 0;
       wasm2js_i32$0 = $10;
       wasm2js_i32$1 = $3;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $5;
       HEAP32[(wasm2js_i32$0 + 96 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
       HEAP32[(wasm2js_i32$0 + 100 | 0) >> 2] = wasm2js_i32$1;
       _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__clone_subtree__he5796344cf82ad38($2 + 80 | 0 | 0, $2 + 96 | 0 | 0);
       $4 = HEAPU32[(($2 + 80 | 0) + 8 | 0) >> 2] | 0;
       $11 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
       $12 = HEAPU32[(($2 + 64 | 0) + 8 | 0) >> 2] | 0;
       wasm2js_i32$0 = $10;
       wasm2js_i32$1 = $12;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$0 = HEAPU32[($2 + 64 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 68 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 69 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 70 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 71 | 0) >> 0] | 0 | 0) << 24);
       i64toi32_i32$1 = i64toi32_i32$1;
       $14 = i64toi32_i32$0;
       i64toi32_i32$1 = i64toi32_i32$1;
       i64toi32_i32$0 = $2;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $14;
       HEAP32[(wasm2js_i32$0 + 96 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 100 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 101 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 102 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 103 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $10 = HEAPU16[($1 + 6 | 0) >> 1] | 0;
       $13 = $1 + Math_imul($10, 12) | 0;
       wasm2js_i32$0 = $13 + 16 | 0;
       wasm2js_i32$1 = $12;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$1 = i64toi32_i32$1;
       i64toi32_i32$0 = $13 + 8 | 0;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = $14;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $10 = $10 + 1 | 0;
       $12 = $10 << 2 | 0;
       wasm2js_i32$0 = ((HEAPU32[($2 + 52 | 0) >> 2] | 0) + $12 | 0) + 140 | 0;
       wasm2js_i32$1 = $11;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = (HEAPU16[($1 + 6 | 0) >> 1] | 0) + 1 | 0;
       HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;
       $1 = HEAPU32[($2 + 52 | 0) >> 2] | 0;
       $11 = HEAPU32[(($1 + $12 | 0) + 140 | 0) >> 2] | 0;
       wasm2js_i32$0 = $11;
       wasm2js_i32$1 = $1;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $11;
       wasm2js_i32$1 = $10;
       HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;
       $10 = ($2 + 32 | 0) + 8 | 0;
       wasm2js_i32$0 = $10;
       wasm2js_i32$1 = ($4 + (HEAPU32[$10 >> 2] | 0) | 0) + 1 | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       $6 = $6 + 4 | 0;
       $7 = $7 + 12 | 0;
       $8 = $8 + 1 | 0;
       if ($8 >>> 0 < (HEAPU16[$9 >> 1] | 0) >>> 0) continue label$5;
       break label$5;
      } while (1);
     };
     i64toi32_i32$1 = HEAPU32[($2 + 32 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
     $151 = i64toi32_i32$1;
     i64toi32_i32$1 = $0;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $151;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = i64toi32_i32$1 + 8 | 0;
     wasm2js_i32$1 = HEAPU32[(($2 + 32 | 0) + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     break label$2;
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $4;
    HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $3;
    HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__node__Root$LT$K$C$$u20$V$GT$$GT$__new_leaf__h68eff2757de7a210($2 + 8 | 0 | 0);
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
    $11 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $11;
    HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
    $1 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 84 | 0) >> 2] = wasm2js_i32$1;
    if ($1) break label$1;
    label$6 : {
     if ((HEAPU16[($4 + 6 | 0) >> 1] | 0 | 0) == (0 | 0)) break label$6;
     $1 = $4 + 8 | 0;
     $12 = $11 + 8 | 0;
     $6 = 0;
     label$7 : do {
      _$LT$alloc__string__String$u20$as$u20$core__clone__Clone$GT$__clone__h67225b6b9d7ffedf($2 + 96 | 0 | 0, $1 | 0);
      $7 = $11 + 6 | 0;
      $8 = HEAPU16[$7 >> 1] | 0;
      $10 = $12 + Math_imul($8, 12) | 0;
      i64toi32_i32$0 = HEAPU32[($2 + 96 | 0) >> 2] | 0;
      i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 100 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 101 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 102 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 103 | 0) >> 0] | 0 | 0) << 24);
      $195 = i64toi32_i32$0;
      i64toi32_i32$0 = $10;
      i64toi32_i32$1 = i64toi32_i32$1;
      wasm2js_i32$0 = $10;
      wasm2js_i32$1 = $195;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $10;
      wasm2js_i32$1 = i64toi32_i32$1;
      (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
      wasm2js_i32$0 = $10 + 8 | 0;
      wasm2js_i32$1 = HEAPU32[(($2 + 96 | 0) + 8 | 0) >> 2] | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $7;
      wasm2js_i32$1 = $8 + 1 | 0;
      HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;
      $1 = $1 + 12 | 0;
      $6 = $6 + 1 | 0;
      if ($6 >>> 0 < (HEAPU16[($4 + 6 | 0) >> 1] | 0) >>> 0) continue label$7;
      break label$7;
     } while (1);
     wasm2js_i32$0 = $2 + 88 | 0;
     wasm2js_i32$1 = $6;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    };
    i64toi32_i32$1 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 84 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 85 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 86 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 87 | 0) >> 0] | 0 | 0) << 24);
    $219 = i64toi32_i32$1;
    i64toi32_i32$1 = $0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $219;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = i64toi32_i32$1 + 8 | 0;
    wasm2js_i32$1 = HEAPU32[(($2 + 80 | 0) + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   };
   global$0 = $2 + 112 | 0;
   return;
  };
  core__panicking__panic__h629a30fc6a0298aa(1055572 | 0);
  abort();
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__hf687d8f47de10fe7($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    if ((HEAPU32[($1 + 8 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$2;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__clone__Clone$GT$__clone__clone_subtree__he5796344cf82ad38($0 | 0, $2 | 0);
    break label$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 1050784;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  };
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__cmp__PartialEq$GT$__eq__hba8dbff631a7b8b2($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $5 = 0, $6 = 0, $3 = 0, $4 = 0, $7 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 160 | 0;
  global$0 = $2;
  $3 = 0;
  label$1 : {
   if ((HEAPU32[($0 + 8 | 0) >> 2] | 0 | 0) != (HEAPU32[($1 + 8 | 0) >> 2] | 0 | 0)) break label$1;
   _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($2 + 40 | 0 | 0, $0 | 0);
   _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($2 + 120 | 0 | 0, $1 | 0);
   $4 = memcpy(($2 + 40 | 0) + 36 | 0 | 0, $2 + 120 | 0 | 0, 36 | 0) | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 112 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 116 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 117 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 118 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 119 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $0 = $2 + 72 | 0;
   $1 = $2 + 108 | 0;
   label$2 : {
    label$3 : do {
     $5 = HEAPU32[$0 >> 2] | 0;
     if (($5 | 0) == (0 | 0)) break label$2;
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = $5 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 + 32 | 0 | 0, $2 + 40 | 0 | 0);
     $5 = HEAPU32[($2 + 32 | 0) >> 2] | 0;
     if (($5 | 0) == (0 | 0)) break label$2;
     $6 = HEAPU32[$1 >> 2] | 0;
     if (($6 | 0) == (0 | 0)) break label$2;
     wasm2js_i32$0 = $1;
     wasm2js_i32$1 = $6 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 + 24 | 0 | 0, $4 | 0);
     $6 = HEAPU32[($2 + 24 | 0) >> 2] | 0;
     if (($6 | 0) == (0 | 0)) break label$2;
     _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($2 + 16 | 0 | 0, $5 | 0);
     $5 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
     $7 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
     _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($2 + 8 | 0 | 0, $6 | 0);
     if (core__slice___$LT$impl$u20$core__cmp__PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$__eq__hf1b1596e21e6043b($7 | 0, $5 | 0, HEAPU32[($2 + 8 | 0) >> 2] | 0 | 0, HEAPU32[($2 + 12 | 0) >> 2] | 0 | 0) | 0) continue label$3;
     break label$1;
     break label$3;
    } while (1);
   };
   $3 = 1;
  };
  global$0 = $2 + 160 | 0;
  return $3 | 0;
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in__h5f872b28e850c96e($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$4 = 0, $4 = 0, i64toi32_i32$3 = 0, $11 = 0, $3 = 0, $3$hi = 0, i64toi32_i32$2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     i64toi32_i32$0 = 0;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$1 = 0;
     i64toi32_i32$1 = __wasm_i64_mul($1 | 0, i64toi32_i32$0 | 0, 12 | 0, i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
     i64toi32_i32$0 = i64toi32_i32$0;
     $3 = i64toi32_i32$1;
     $3$hi = i64toi32_i32$0;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$0 = i64toi32_i32$0;
     i64toi32_i32$2 = i64toi32_i32$1;
     i64toi32_i32$1 = 0;
     i64toi32_i32$3 = 32;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$1 = 0;
      $11 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     } else {
      i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
      $11 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
     }
     i64toi32_i32$1 = i64toi32_i32$1;
     if ($11) break label$3;
     i64toi32_i32$1 = $3$hi;
     i64toi32_i32$1 = i64toi32_i32$1;
     $4 = $3;
     if (($4 | 0) <= (4294967295 | 0)) break label$2;
     label$4 : {
      label$5 : {
       label$6 : {
        if (($4 | 0) == (0 | 0)) break label$6;
        if (($2 | 0) == (0 | 0)) break label$5;
        $2 = __rust_alloc_zeroed($4 | 0, 4 | 0) | 0;
        if ($2) break label$4;
        break label$1;
       };
       $2 = 4;
       break label$4;
      };
      $2 = __rust_alloc($4 | 0, 4 | 0) | 0;
      if (($2 | 0) == (0 | 0)) break label$1;
     };
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = $1;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = $2;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     return;
    };
    _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__h78793d6b72dde4b8_20_28_llvm_15746424954511471587_29();
    abort();
   };
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__hc5f77c3d0097b080_20_28_llvm_15746424954511471587_29();
   abort();
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($4 | 0, 4 | 0);
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__h78793d6b72dde4b8_20_28_llvm_15746424954511471587_29() {
  alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__hc5f77c3d0097b080_20_28_llvm_15746424954511471587_29() {
  alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in__hc380267a36f4307a($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (($1 | 0) <= (4294967295 | 0)) break label$2;
    label$3 : {
     label$4 : {
      label$5 : {
       if (($1 | 0) == (0 | 0)) break label$5;
       if (($2 | 0) == (0 | 0)) break label$4;
       $2 = __rust_alloc_zeroed($1 | 0, 1 | 0) | 0;
       if ($2) break label$3;
       break label$1;
      };
      $2 = 1;
      break label$3;
     };
     $2 = __rust_alloc($1 | 0, 1 | 0) | 0;
     if (($2 | 0) == (0 | 0)) break label$1;
    };
    $2 = _$LT$T$u20$as$u20$core__convert__Into$LT$U$GT$$GT$__into__h9158ce5d832278be($2 | 0) | 0;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $2;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    return;
   };
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__h13d85b144f0ad28f_20_28_llvm_15746424954511471587_29();
   abort();
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($1 | 0, 1 | 0);
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__h13d85b144f0ad28f_20_28_llvm_15746424954511471587_29() {
  alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve_internal__h735cea011d736bea($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $5 = 0, i64toi32_i32$4 = 0, $6 = 0, i64toi32_i32$3 = 0, $14 = 0, $7 = 0, $7$hi = 0, i64toi32_i32$2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $5 = 2;
  label$1 : {
   label$2 : {
    label$3 : {
     $6 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
     if (($6 - $1 | 0) >>> 0 >= $2 >>> 0) break label$3;
     $2 = $1 + $2 | 0;
     $1 = $2 >>> 0 < $1 >>> 0;
     label$4 : {
      if (($4 | 0) == (0 | 0)) break label$4;
      if (($1 | 0) == (0 | 0)) break label$2;
      return _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(_$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0 | 0) | 0 | 0;
     };
     if (($1 | 0) == (0 | 0)) break label$1;
     $5 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0;
    };
    return $5 | 0;
   };
   $1 = $6 << 1 | 0;
   $2 = (wasm2js_i32$1 = $1, wasm2js_i32$2 = $2, wasm2js_i32$3 = $2 >>> 0 < $1 >>> 0, wasm2js_i32$3 ? wasm2js_i32$1 : wasm2js_i32$2);
  };
  label$5 : {
   i64toi32_i32$0 = 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   i64toi32_i32$1 = 0;
   i64toi32_i32$1 = __wasm_i64_mul($2 | 0, i64toi32_i32$0 | 0, 12 | 0, i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
   i64toi32_i32$0 = i64toi32_i32$0;
   $7 = i64toi32_i32$1;
   $7$hi = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $14 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $14 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   i64toi32_i32$1 = i64toi32_i32$1;
   if (($14 | 0) == (0 | 0)) break label$5;
   _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__h5441145533fb08a4();
   return _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0 | 0;
  };
  label$6 : {
   label$7 : {
    label$8 : {
     label$9 : {
      label$10 : {
       i64toi32_i32$1 = $7$hi;
       i64toi32_i32$1 = i64toi32_i32$1;
       $5 = $7;
       if (($5 | 0) <= (4294967295 | 0)) break label$10;
       if (($6 | 0) == (0 | 0)) break label$9;
       $1 = __rust_realloc(HEAPU32[$0 >> 2] | 0 | 0, Math_imul($6, 12) | 0, 4 | 0, $5 | 0) | 0;
       if (($1 | 0) == (0 | 0)) break label$8;
       break label$7;
      };
      return _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0 | 0;
     };
     $1 = __rust_alloc($5 | 0, 4 | 0) | 0;
     if ($1) break label$7;
    };
    if ($3) break label$6;
   };
   label$11 : {
    if (($1 | 0) == (0 | 0)) break label$11;
    wasm2js_i32$1 = $0;
    wasm2js_i32$2 = $1;
    HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
    wasm2js_i32$1 = $0 + 4 | 0;
    wasm2js_i32$2 = $2;
    HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
    return 2 | 0;
   };
   return 1 | 0;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($5 | 0, 4 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve_internal__ha2d3c13370f44812($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $5 = 0, i64toi32_i32$4 = 0, $6 = 0, i64toi32_i32$3 = 0, $14 = 0, $7 = 0, $7$hi = 0, i64toi32_i32$2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $5 = 2;
  label$1 : {
   label$2 : {
    label$3 : {
     $6 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
     if (($6 - $1 | 0) >>> 0 >= $2 >>> 0) break label$3;
     $2 = $1 + $2 | 0;
     $1 = $2 >>> 0 < $1 >>> 0;
     label$4 : {
      if (($4 | 0) == (0 | 0)) break label$4;
      if (($1 | 0) == (0 | 0)) break label$2;
      return _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(_$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0 | 0) | 0 | 0;
     };
     if (($1 | 0) == (0 | 0)) break label$1;
     $5 = _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0;
    };
    return $5 | 0;
   };
   $1 = $6 << 1 | 0;
   $2 = (wasm2js_i32$1 = $1, wasm2js_i32$2 = $2, wasm2js_i32$3 = $2 >>> 0 < $1 >>> 0, wasm2js_i32$3 ? wasm2js_i32$1 : wasm2js_i32$2);
  };
  label$5 : {
   i64toi32_i32$0 = 0;
   i64toi32_i32$0 = i64toi32_i32$0;
   i64toi32_i32$1 = 0;
   i64toi32_i32$1 = __wasm_i64_mul($2 | 0, i64toi32_i32$0 | 0, 12 | 0, i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
   i64toi32_i32$0 = i64toi32_i32$0;
   $7 = i64toi32_i32$1;
   $7$hi = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $14 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $14 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   i64toi32_i32$1 = i64toi32_i32$1;
   if (($14 | 0) == (0 | 0)) break label$5;
   _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__h5441145533fb08a4();
   return _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0 | 0;
  };
  label$6 : {
   label$7 : {
    label$8 : {
     label$9 : {
      label$10 : {
       i64toi32_i32$1 = $7$hi;
       i64toi32_i32$1 = i64toi32_i32$1;
       $5 = $7;
       if (($5 | 0) <= (4294967295 | 0)) break label$10;
       if (($6 | 0) == (0 | 0)) break label$9;
       $1 = __rust_realloc(HEAPU32[$0 >> 2] | 0 | 0, Math_imul($6, 12) | 0, 4 | 0, $5 | 0) | 0;
       if (($1 | 0) == (0 | 0)) break label$8;
       break label$7;
      };
      return _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3(0 | 0) | 0 | 0;
     };
     $1 = __rust_alloc($5 | 0, 4 | 0) | 0;
     if ($1) break label$7;
    };
    if ($3) break label$6;
   };
   label$11 : {
    if (($1 | 0) == (0 | 0)) break label$11;
    wasm2js_i32$1 = $0;
    wasm2js_i32$2 = $1;
    HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
    wasm2js_i32$1 = $0 + 4 | 0;
    wasm2js_i32$2 = $2;
    HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
    return 2 | 0;
   };
   return 1 | 0;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($5 | 0, 4 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h1cdda8fe9e0b73ae($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   $0 = (_$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve_internal__ha2d3c13370f44812($0 | 0, $1 | 0, $2 | 0, 1 | 0, 1 | 0) | 0) & 255 | 0;
   if (($0 | 0) != (2 | 0)) break label$1;
   return;
  };
  label$2 : {
   if ($0 & 1 | 0) break label$2;
   alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
   abort();
  };
  core__panicking__panic__h629a30fc6a0298aa(1055596 | 0);
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h9e1a393fd5c982ea($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   $0 = (_$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve_internal__h735cea011d736bea($0 | 0, $1 | 0, $2 | 0, 1 | 0, 1 | 0) | 0) & 255 | 0;
   if (($0 | 0) != (2 | 0)) break label$1;
   return;
  };
  label$2 : {
   if ($0 & 1 | 0) break label$2;
   alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
   abort();
  };
  core__panicking__panic__h629a30fc6a0298aa(1055596 | 0);
  abort();
 }
 
 function alloc__str__join_generic_copy__haaa3ad8152f8a1ad($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $5 = 0, $6 = 0, $8 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$4 = 0, $7 = 0, i64toi32_i32$3 = 0, $20 = 0, $9 = 0, $17$hi = 0, $23$hi = 0, $10 = 0, $10$hi = 0, $334 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $5 = global$0 - 144 | 0;
  global$0 = $5;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               label$14 : {
                label$15 : {
                 label$16 : {
                  label$17 : {
                   label$18 : {
                    label$19 : {
                     label$20 : {
                      label$21 : {
                       if (($2 | 0) == (0 | 0)) break label$21;
                       i64toi32_i32$0 = 0;
                       $17$hi = i64toi32_i32$0;
                       $6 = Math_imul($2, 12);
                       i64toi32_i32$0 = 0;
                       $23$hi = i64toi32_i32$0;
                       i64toi32_i32$0 = $17$hi;
                       i64toi32_i32$1 = $23$hi;
                       i64toi32_i32$1 = __wasm_i64_mul($4 | 0, i64toi32_i32$0 | 0, (($6 + 4294967284 | 0) >>> 0) / (12 >>> 0) | 0 | 0, i64toi32_i32$1 | 0) | 0;
                       i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
                       i64toi32_i32$0 = i64toi32_i32$0;
                       $10 = i64toi32_i32$1;
                       $10$hi = i64toi32_i32$0;
                       i64toi32_i32$0 = i64toi32_i32$0;
                       i64toi32_i32$0 = i64toi32_i32$0;
                       i64toi32_i32$2 = i64toi32_i32$1;
                       i64toi32_i32$1 = 0;
                       i64toi32_i32$3 = 32;
                       i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
                       if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                        i64toi32_i32$1 = 0;
                        $20 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
                       } else {
                        i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
                        $20 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
                       }
                       i64toi32_i32$1 = i64toi32_i32$1;
                       if ($20) break label$2;
                       wasm2js_i32$0 = $5;
                       wasm2js_i32$1 = $1 + $6 | 0;
                       HEAP32[(wasm2js_i32$0 + 132 | 0) >> 2] = wasm2js_i32$1;
                       wasm2js_i32$0 = $5;
                       wasm2js_i32$1 = $1;
                       HEAP32[(wasm2js_i32$0 + 128 | 0) >> 2] = wasm2js_i32$1;
                       i64toi32_i32$1 = $10$hi;
                       i64toi32_i32$1 = i64toi32_i32$1;
                       _$LT$core__iter__Map$LT$I$C$$u20$F$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__try_fold__h273b44610091965d($5 + 120 | 0 | 0, $5 + 128 | 0 | 0, $10 | 0);
                       if ((HEAPU32[($5 + 120 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$2;
                       $7 = HEAPU32[($5 + 124 | 0) >> 2] | 0;
                       _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in__hc380267a36f4307a($5 + 112 | 0 | 0, $7 | 0, 0 | 0);
                       wasm2js_i32$0 = $5;
                       wasm2js_i32$1 = 0;
                       HEAP32[(wasm2js_i32$0 + 136 | 0) >> 2] = wasm2js_i32$1;
                       wasm2js_i32$0 = $5;
                       wasm2js_i32$1 = HEAPU32[($5 + 112 | 0) >> 2] | 0;
                       HEAP32[(wasm2js_i32$0 + 128 | 0) >> 2] = wasm2js_i32$1;
                       $6 = HEAPU32[($5 + 116 | 0) >> 2] | 0;
                       wasm2js_i32$0 = $5;
                       wasm2js_i32$1 = $6;
                       HEAP32[(wasm2js_i32$0 + 132 | 0) >> 2] = wasm2js_i32$1;
                       if ($6 >>> 0 < $7 >>> 0) break label$1;
                       _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 104 | 0 | 0, $1 | 0);
                       _$LT$alloc__vec__Vec$LT$T$GT$$GT$__extend_from_slice__habeb97e2e06a328b($5 + 128 | 0 | 0, HEAPU32[($5 + 104 | 0) >> 2] | 0 | 0, HEAPU32[($5 + 108 | 0) >> 2] | 0 | 0);
                       $1 = $1 + 12 | 0;
                       $6 = HEAPU32[($5 + 136 | 0) >> 2] | 0;
                       $8 = $7 - $6 | 0;
                       _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__DerefMut$GT$__deref_mut__h407d02891bf3fb9d($5 + 96 | 0 | 0, $5 + 128 | 0 | 0);
                       $6 = $6 + (HEAPU32[($5 + 96 | 0) >> 2] | 0) | 0;
                       if ($4 >>> 0 > 4 >>> 0) break label$16;
                       label$22 : {
                        switch ($4 | 0) {
                        case 0:
                         break label$22;
                        case 1:
                         break label$17;
                        case 2:
                         break label$19;
                        case 3:
                         break label$18;
                        case 4:
                         break label$20;
                        default:
                         break label$22;
                        };
                       };
                       if (($2 | 0) == (1 | 0)) break label$15;
                       $2 = Math_imul($2, 12) + 4294967284 | 0;
                       label$23 : do {
                        core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, 0 | 0, $3 | 0, 0 | 0);
                        _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 24 | 0 | 0, $1 | 0);
                        $4 = HEAPU32[($5 + 28 | 0) >> 2] | 0;
                        if ($8 >>> 0 < $4 >>> 0) break label$13;
                        _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 16 | 0 | 0, $1 | 0);
                        core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, $4 | 0, HEAPU32[($5 + 16 | 0) >> 2] | 0 | 0, HEAPU32[($5 + 20 | 0) >> 2] | 0 | 0);
                        $6 = $6 + $4 | 0;
                        $8 = $8 - $4 | 0;
                        $1 = $1 + 12 | 0;
                        $2 = $2 + 4294967284 | 0;
                        if ($2) continue label$23;
                        break label$15;
                        break label$23;
                       } while (1);
                      };
                      _$LT$alloc__vec__Vec$LT$T$GT$$GT$__from_raw_parts__he677919afa58bbdf($0 | 0, 1 | 0, 0 | 0, 0 | 0);
                      break label$14;
                     };
                     if (($2 | 0) == (1 | 0)) break label$15;
                     $4 = Math_imul($2, 12) + 4294967284 | 0;
                     label$24 : do {
                      if ($8 >>> 0 <= 3 >>> 0) break label$12;
                      core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, 4 | 0, $3 | 0, 4 | 0);
                      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 88 | 0 | 0, $1 | 0);
                      $2 = $8 + 4294967292 | 0;
                      $8 = HEAPU32[($5 + 92 | 0) >> 2] | 0;
                      if ($2 >>> 0 < $8 >>> 0) break label$11;
                      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 80 | 0 | 0, $1 | 0);
                      $6 = $6 + 4 | 0;
                      core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, $8 | 0, HEAPU32[($5 + 80 | 0) >> 2] | 0 | 0, HEAPU32[($5 + 84 | 0) >> 2] | 0 | 0);
                      $6 = $6 + $8 | 0;
                      $8 = $2 - $8 | 0;
                      $1 = $1 + 12 | 0;
                      $4 = $4 + 4294967284 | 0;
                      if ($4) continue label$24;
                      break label$15;
                      break label$24;
                     } while (1);
                    };
                    if (($2 | 0) == (1 | 0)) break label$15;
                    $4 = Math_imul($2, 12) + 4294967284 | 0;
                    label$25 : do {
                     if ($8 >>> 0 <= 1 >>> 0) break label$10;
                     core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, 2 | 0, $3 | 0, 2 | 0);
                     _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 56 | 0 | 0, $1 | 0);
                     $2 = $8 + 4294967294 | 0;
                     $8 = HEAPU32[($5 + 60 | 0) >> 2] | 0;
                     if ($2 >>> 0 < $8 >>> 0) break label$9;
                     _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 48 | 0 | 0, $1 | 0);
                     $6 = $6 + 2 | 0;
                     core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, $8 | 0, HEAPU32[($5 + 48 | 0) >> 2] | 0 | 0, HEAPU32[($5 + 52 | 0) >> 2] | 0 | 0);
                     $6 = $6 + $8 | 0;
                     $8 = $2 - $8 | 0;
                     $1 = $1 + 12 | 0;
                     $4 = $4 + 4294967284 | 0;
                     if ($4) continue label$25;
                     break label$15;
                     break label$25;
                    } while (1);
                   };
                   if (($2 | 0) == (1 | 0)) break label$15;
                   $4 = Math_imul($2, 12) + 4294967284 | 0;
                   label$26 : do {
                    if ($8 >>> 0 <= 2 >>> 0) break label$8;
                    core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, 3 | 0, $3 | 0, 3 | 0);
                    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 72 | 0 | 0, $1 | 0);
                    $2 = $8 + 4294967293 | 0;
                    $8 = HEAPU32[($5 + 76 | 0) >> 2] | 0;
                    if ($2 >>> 0 < $8 >>> 0) break label$7;
                    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 64 | 0 | 0, $1 | 0);
                    $6 = $6 + 3 | 0;
                    core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, $8 | 0, HEAPU32[($5 + 64 | 0) >> 2] | 0 | 0, HEAPU32[($5 + 68 | 0) >> 2] | 0 | 0);
                    $6 = $6 + $8 | 0;
                    $8 = $2 - $8 | 0;
                    $1 = $1 + 12 | 0;
                    $4 = $4 + 4294967284 | 0;
                    if ($4) continue label$26;
                    break label$15;
                    break label$26;
                   } while (1);
                  };
                  if (($2 | 0) == (1 | 0)) break label$15;
                  $4 = Math_imul($2, 12) + 4294967284 | 0;
                  label$27 : do {
                   if (($8 | 0) == (0 | 0)) break label$6;
                   core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, 1 | 0, $3 | 0, 1 | 0);
                   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 40 | 0 | 0, $1 | 0);
                   $2 = $8 + 4294967295 | 0;
                   $8 = HEAPU32[($5 + 44 | 0) >> 2] | 0;
                   if ($2 >>> 0 < $8 >>> 0) break label$5;
                   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 32 | 0 | 0, $1 | 0);
                   $6 = $6 + 1 | 0;
                   core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, $8 | 0, HEAPU32[($5 + 32 | 0) >> 2] | 0 | 0, HEAPU32[($5 + 36 | 0) >> 2] | 0 | 0);
                   $6 = $6 + $8 | 0;
                   $8 = $2 - $8 | 0;
                   $1 = $1 + 12 | 0;
                   $4 = $4 + 4294967284 | 0;
                   if ($4) continue label$27;
                   break label$15;
                   break label$27;
                  } while (1);
                 };
                 if (($2 | 0) == (1 | 0)) break label$15;
                 $2 = Math_imul($2, 12) + 4294967284 | 0;
                 label$28 : do {
                  if ($8 >>> 0 < $4 >>> 0) break label$4;
                  core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, $4 | 0, $3 | 0, $4 | 0);
                  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 + 8 | 0 | 0, $1 | 0);
                  $9 = $8 - $4 | 0;
                  $8 = HEAPU32[($5 + 12 | 0) >> 2] | 0;
                  if ($9 >>> 0 < $8 >>> 0) break label$3;
                  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($5 | 0, $1 | 0);
                  $6 = $6 + $4 | 0;
                  core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($6 | 0, $8 | 0, HEAPU32[$5 >> 2] | 0 | 0, HEAPU32[($5 + 4 | 0) >> 2] | 0 | 0);
                  $6 = $6 + $8 | 0;
                  $8 = $9 - $8 | 0;
                  $1 = $1 + 12 | 0;
                  $2 = $2 + 4294967284 | 0;
                  if ($2) continue label$28;
                  break label$28;
                 } while (1);
                };
                i64toi32_i32$0 = $5;
                i64toi32_i32$1 = HEAPU32[($5 + 128 | 0) >> 2] | 0;
                i64toi32_i32$2 = (wasm2js_i32$0 = $5, HEAPU8[(wasm2js_i32$0 + 132 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 133 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 134 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 135 | 0) >> 0] | 0 | 0) << 24);
                $334 = i64toi32_i32$1;
                i64toi32_i32$1 = $0;
                i64toi32_i32$2 = i64toi32_i32$2;
                wasm2js_i32$0 = i64toi32_i32$1;
                wasm2js_i32$1 = $334;
                HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                wasm2js_i32$0 = i64toi32_i32$1;
                wasm2js_i32$1 = i64toi32_i32$2;
                (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
                wasm2js_i32$0 = ($5 + 128 | 0) + 8 | 0;
                wasm2js_i32$1 = $7;
                HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                wasm2js_i32$0 = i64toi32_i32$1 + 8 | 0;
                wasm2js_i32$1 = $7;
                HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               };
               global$0 = $5 + 144 | 0;
               return;
              };
              core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
              abort();
             };
             core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
             abort();
            };
            core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
            abort();
           };
           core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
           abort();
          };
          core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
          abort();
         };
         core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
         abort();
        };
        core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
        abort();
       };
       core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
       abort();
      };
      core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
      abort();
     };
     core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
     abort();
    };
    core__panicking__panic__h629a30fc6a0298aa(1055620 | 0);
    abort();
   };
   core__option__expect_failed__h15c623a42aab9ec5(1049989 | 0, 53 | 0);
   abort();
  };
  core__panicking__panic__h629a30fc6a0298aa(1055644 | 0);
  abort();
 }
 
 function core__ptr__drop_in_place__hc0d3d822a281d36b_20_28_llvm_8664864302840969784_29($0) {
  $0 = $0 | 0;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($0 | 0);
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($0 | 0);
  };
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$GT$__extend_desugared__h3c9efd7ef54e9fe7($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $8 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $5 = 0, $48 = 0, $75 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    $3 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
    if (($3 | 0) == (0 | 0)) break label$2;
    $4 = $1 + 32 | 0;
    $5 = $0 + 4 | 0;
    label$3 : do {
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = $3 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 + 8 | 0 | 0, $1 | 0);
     $3 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
     if (($3 | 0) == (0 | 0)) break label$2;
     core__ops__function__impls___$LT$impl$u20$core__ops__function__FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$__call_once__hd49ab53ab748967e($2 + 16 | 0 | 0, $1 | 0, $3 | 0);
     if ((HEAPU32[($2 + 16 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$1;
     $6 = ($2 + 32 | 0) + 8 | 0;
     wasm2js_i32$0 = $6;
     wasm2js_i32$1 = HEAPU32[(($2 + 16 | 0) + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$0 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
     $48 = i64toi32_i32$0;
     i64toi32_i32$0 = $2;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $48;
     HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     label$4 : {
      $7 = $0 + 8 | 0;
      $3 = HEAPU32[$7 >> 2] | 0;
      if (($3 | 0) != (HEAPU32[$5 >> 2] | 0 | 0)) break label$4;
      $8 = HEAPU32[$4 >> 2] | 0;
      $9 = $8 + 1 | 0;
      _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h1cdda8fe9e0b73ae($0 | 0, $3 | 0, (wasm2js_i32$0 = 4294967295, wasm2js_i32$1 = $9, wasm2js_i32$2 = $9 >>> 0 < $8 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0);
     };
     $8 = (HEAPU32[$0 >> 2] | 0) + Math_imul($3, 12) | 0;
     i64toi32_i32$1 = HEAPU32[($2 + 32 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
     $75 = i64toi32_i32$1;
     i64toi32_i32$1 = $8;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $75;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = i64toi32_i32$1 + 8 | 0;
     wasm2js_i32$1 = HEAPU32[$6 >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $7;
     wasm2js_i32$1 = $3 + 1 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     label$5 : {
      if (HEAPU32[($2 + 16 | 0) >> 2] | 0) break label$5;
      core__ptr__drop_in_place__hc0d3d822a281d36b_20_28_llvm_8664864302840969784_29($2 + 16 | 0 | 0);
     };
     $3 = HEAPU32[$4 >> 2] | 0;
     if ($3) continue label$3;
     break label$3;
    } while (1);
   };
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  };
  core__ptr__drop_in_place__hc0d3d822a281d36b_20_28_llvm_8664864302840969784_29($2 + 16 | 0 | 0);
  global$0 = $2 + 48 | 0;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h61ebf0b8ba547d5f($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0, i64toi32_i32$1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 64 | 0;
  global$0 = $1;
  label$1 : {
   $2 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   if (($2 | 0) == (0 | 0)) break label$1;
   $0 = HEAPU32[$0 >> 2] | 0;
   $2 = Math_imul($2, 12);
   label$2 : do {
    wasm2js_i32$0 = ($1 + 48 | 0) + 8 | 0;
    wasm2js_i32$1 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = (wasm2js_i32$0 = $0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
    HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $0 = $0 + 12 | 0;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__traits__IntoIterator$GT$__into_iter__h4d5c58de7a79f404($1 + 8 | 0 | 0, $1 + 48 | 0 | 0);
    _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($1 + 8 | 0 | 0);
    $2 = $2 + 4294967284 | 0;
    if ($2) continue label$2;
    break label$2;
   } while (1);
  };
  global$0 = $1 + 64 | 0;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hed8cc4d2839fdcaa($0) {
  $0 = $0 | 0;
  var $1 = 0;
  label$1 : {
   $1 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   if (($1 | 0) == (0 | 0)) break label$1;
   $0 = HEAPU32[$0 >> 2] | 0;
   $1 = Math_imul($1, 12);
   label$2 : do {
    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($0 | 0);
    _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($0 | 0);
    $0 = $0 + 12 | 0;
    $1 = $1 + 4294967284 | 0;
    if ($1) continue label$2;
    break label$2;
   } while (1);
  };
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$T$C$$u20$I$GT$$GT$__spec_extend__h46a6ac0bfbe895d5($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $5 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h1cdda8fe9e0b73ae($0 | 0, HEAPU32[($0 + 8 | 0) >> 2] | 0 | 0, (($2 - $1 | 0) >>> 0) / (12 >>> 0) | 0 | 0);
  $4 = HEAPU32[$0 >> 2] | 0;
  $5 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $3 + 8 | 0;
  wasm2js_i32$1 = $5;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $0 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $4 + Math_imul($5, 12) | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  _$LT$core__iter__Map$LT$I$C$$u20$F$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__fold__h8635d67efe84bbf9($1 | 0, $2 | 0, $3 | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$T$C$$u20$I$GT$$GT$__from_iter__heba6358119733323($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $4 = 0, $5 = 0, $53 = 0, $82 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 80 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    label$3 : {
     $3 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
     if (($3 | 0) == (0 | 0)) break label$3;
     wasm2js_i32$0 = $1 + 32 | 0;
     wasm2js_i32$1 = $3 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 + 16 | 0 | 0, $1 | 0);
     $3 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
     if (($3 | 0) == (0 | 0)) break label$3;
     core__ops__function__impls___$LT$impl$u20$core__ops__function__FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$__call_once__hd49ab53ab748967e($2 + 40 | 0 | 0, $1 | 0, $3 | 0);
     if ((HEAPU32[($2 + 40 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$2;
     $3 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
     $4 = $3 + 1 | 0;
     _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in__h5f872b28e850c96e($2 + 8 | 0 | 0, (wasm2js_i32$0 = 4294967295, wasm2js_i32$1 = $4, wasm2js_i32$2 = $4 >>> 0 < $3 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0, 0 | 0);
     $4 = HEAPU32[(($2 + 40 | 0) + 8 | 0) >> 2] | 0;
     $5 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
     $3 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAPU32[($2 + 40 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 44 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 45 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 46 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 47 | 0) >> 0] | 0 | 0) << 24);
     $53 = i64toi32_i32$0;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $53;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = i64toi32_i32$1;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$0 = $3 + 8 | 0;
     wasm2js_i32$1 = $4;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $5;
     HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = 1;
     HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
     label$4 : {
      if (HEAPU32[($2 + 40 | 0) >> 2] | 0) break label$4;
      core__ptr__drop_in_place__hc0d3d822a281d36b_20_28_llvm_8664864302840969784_29($2 + 40 | 0 | 0);
     };
     memcpy($2 + 40 | 0 | 0, $1 | 0, 36 | 0) | 0;
     _$LT$alloc__vec__Vec$LT$T$GT$$GT$__extend_desugared__h3c9efd7ef54e9fe7($2 + 24 | 0 | 0, $2 + 40 | 0 | 0);
     wasm2js_i32$0 = $0 + 8 | 0;
     wasm2js_i32$1 = HEAPU32[(($2 + 24 | 0) + 8 | 0) >> 2] | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     i64toi32_i32$1 = HEAPU32[($2 + 24 | 0) >> 2] | 0;
     i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
     $82 = i64toi32_i32$1;
     i64toi32_i32$1 = $0;
     i64toi32_i32$0 = i64toi32_i32$0;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = $82;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     break label$1;
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$1 = $0;
   i64toi32_i32$0 = 0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = 4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   core__ptr__drop_in_place__hc0d3d822a281d36b_20_28_llvm_8664864302840969784_29($2 + 40 | 0 | 0);
  };
  global$0 = $2 + 80 | 0;
 }
 
 function _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h48a59c6eef87d3e6($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, $31 = 0, $37 = 0, $59 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 144 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050784;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 16 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 17 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 18 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 19 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  memcpy($2 + 24 | 0 | 0, $1 | 0, 88 | 0) | 0;
  _$LT$core__iter__Cloned$LT$I$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h402338f29c5335db($2 + 128 | 0 | 0, $2 + 24 | 0 | 0);
  label$1 : {
   if ((HEAPU32[($2 + 128 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$1;
   label$2 : do {
    $1 = ($2 + 112 | 0) + 8 | 0;
    $3 = ($2 + 128 | 0) + 8 | 0;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$0 = HEAPU32[($2 + 128 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 132 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 133 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 134 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 135 | 0) >> 0] | 0 | 0) << 24);
    $31 = i64toi32_i32$0;
    i64toi32_i32$0 = $2;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $31;
    HEAP32[(wasm2js_i32$0 + 112 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 116 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 117 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 118 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 119 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = HEAPU32[($2 + 112 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 116 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 117 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 118 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 119 | 0) >> 0] | 0 | 0) << 24);
    $37 = i64toi32_i32$1;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $37;
    HEAP32[(wasm2js_i32$0 + 128 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 132 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 133 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 134 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 135 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__insert__he711eca5d2540e0e($2 + 8 | 0 | 0, $2 + 128 | 0 | 0) | 0;
    _$LT$core__iter__Cloned$LT$I$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h402338f29c5335db($2 + 128 | 0 | 0, $2 + 24 | 0 | 0);
    if (HEAPU32[($2 + 128 | 0) >> 2] | 0) continue label$2;
    break label$2;
   } while (1);
  };
  core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($2 + 128 | 0 | 0);
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[(($2 + 8 | 0) + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $59 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $59;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 144 | 0;
 }
 
 function core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($0) {
  $0 = $0 | 0;
  label$1 : {
   if ((HEAPU32[$0 >> 2] | 0 | 0) == (0 | 0)) break label$1;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($0 | 0);
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($0 | 0);
  };
 }
 
 function _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h7fbcaed8e8cbf3a3($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $25 = 0, $3 = 0, i64toi32_i32$4 = 0, $13 = 0, $26 = 0, $2 = 0, $4 = 0, $11 = 0, $16 = 0, $28 = 0, $9 = 0, $21 = 0, $5 = 0, $31 = 0, $34$hi = 0, $27 = 0, $8 = 0, $34 = 0, $19 = 0, $6 = 0, $17 = 0, $20 = 0, $35 = 0, $35$hi = 0, $22 = 0, $33 = 0, $7 = 0, $15 = 0, $18 = 0, $64 = 0, $65 = 0, $66 = 0, $32 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $10 = 0, $12 = 0, $14 = 0, $23 = 0, $24 = 0, $114 = 0, $114$hi = 0, $118$hi = 0, $29 = 0, $30 = 0, $229 = 0, $229$hi = 0, $233$hi = 0, $244 = 0, $244$hi = 0, $245$hi = 0, $417 = 0, $417$hi = 0, $421$hi = 0, $428 = 0, $428$hi = 0, $429$hi = 0, $514 = 0, $514$hi = 0, $515$hi = 0, $637 = 0, $645 = 0, $669 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2 = global$0 - 96 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050784;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 24 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 25 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 26 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 27 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  label$1 : {
   label$2 : {
    if (HEAPU8[($1 + 73 | 0) >> 0] | 0) break label$2;
    $3 = HEAPU32[($1 + 28 | 0) >> 2] | 0;
    $4 = HEAPU32[($1 + 36 | 0) >> 2] | 0;
    $5 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    $6 = HEAPU32[($1 + 64 | 0) >> 2] | 0;
    $7 = HEAPU32[($1 + 68 | 0) >> 2] | 0;
    $8 = HEAPU32[($1 + 56 | 0) >> 2] | 0;
    $9 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
    $10 = $8 + $9 | 0;
    $11 = HEAPU32[($1 + 48 | 0) >> 2] | 0;
    $12 = $11 + $9 | 0;
    $13 = HEAPU32[($1 + 52 | 0) >> 2] | 0;
    $14 = $13 + 4294967295 | 0;
    $15 = 0 - $9 | 0;
    $16 = HEAPU32[($1 + 60 | 0) >> 2] | 0;
    $17 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
    $18 = $16 - $17 | 0;
    i64toi32_i32$2 = $1 + 8 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    $34 = i64toi32_i32$0;
    $34$hi = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$2 = i64toi32_i32$0;
    i64toi32_i32$0 = 4294967040;
    i64toi32_i32$3 = 4294967295;
    i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    $35 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    $35$hi = i64toi32_i32$0;
    $19 = $11 + $13 | 0;
    $20 = $16 + 4294967295 | 0;
    i64toi32_i32$0 = i64toi32_i32$1;
    i64toi32_i32$0 = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $64 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $64 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
    }
    i64toi32_i32$2 = i64toi32_i32$2;
    $21 = $64;
    $22 = HEAPU32[$1 >> 2] | 0;
    $23 = ($22 | 0) == (1 | 0);
    $24 = (HEAPU8[($1 + 72 | 0) >> 0] | 0) & 255 | 0;
    label$3 : {
     label$4 : {
      label$5 : do {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               if (($23 | 0) == (0 | 0)) break label$13;
               $1 = $3 + $20 | 0;
               if (($4 | 0) == (4294967295 | 0)) break label$12;
               if ($1 >>> 0 >= $13 >>> 0) break label$10;
               i64toi32_i32$2 = $35$hi;
               $114 = $35;
               $114$hi = i64toi32_i32$2;
               i64toi32_i32$2 = 0;
               i64toi32_i32$2 = i64toi32_i32$2;
               i64toi32_i32$0 = $21;
               i64toi32_i32$1 = 0;
               i64toi32_i32$3 = 255;
               i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
               i64toi32_i32$1 = i64toi32_i32$1;
               i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
               i64toi32_i32$0 = 0;
               i64toi32_i32$3 = 32;
               i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
               if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
                $65 = 0;
               } else {
                i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
                $65 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
               }
               $118$hi = i64toi32_i32$0;
               i64toi32_i32$0 = $114$hi;
               i64toi32_i32$1 = $114;
               i64toi32_i32$2 = $118$hi;
               i64toi32_i32$3 = $65;
               i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
               i64toi32_i32$2 = i64toi32_i32$2;
               $34 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
               $34$hi = i64toi32_i32$2;
               $25 = $3;
               break label$11;
              };
              $1 = 0;
              $25 = $3;
              label$14 : do {
               label$15 : {
                label$16 : {
                 label$17 : {
                  label$18 : {
                   label$19 : {
                    label$20 : {
                     label$21 : {
                      label$22 : {
                       label$23 : {
                        label$24 : {
                         label$25 : {
                          label$26 : {
                           label$27 : {
                            label$28 : {
                             label$29 : {
                              if (($1 | 0) == (1 | 0)) break label$29;
                              wasm2js_i32$0 = $2;
                              wasm2js_i32$1 = $13;
                              HEAP32[(wasm2js_i32$0 + 68 | 0) >> 2] = wasm2js_i32$1;
                              wasm2js_i32$0 = $2;
                              wasm2js_i32$1 = $11;
                              HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
                              wasm2js_i32$0 = $2;
                              wasm2js_i32$1 = $5;
                              HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
                              wasm2js_i32$0 = $2;
                              wasm2js_i32$1 = $13;
                              HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
                              label$30 : {
                               label$31 : {
                                if (($5 | 0) == (0 | 0)) break label$31;
                                if (($13 | 0) == ($5 | 0)) break label$31;
                                if ($13 >>> 0 <= $5 >>> 0) break label$19;
                                $1 = $11 + $5 | 0;
                                if ((HEAP8[$1 >> 0] | 0 | 0) > (4294967231 | 0)) break label$30;
                                break label$19;
                               };
                               $1 = $11 + $5 | 0;
                              };
                              $3 = $21 & 255 | 0;
                              label$32 : {
                               label$33 : {
                                if (($1 | 0) == ($19 | 0)) break label$33;
                                $1 = HEAP8[$1 >> 0] | 0;
                                if (($1 | 0) < (0 | 0)) break label$32;
                                $1 = $1 & 255 | 0;
                                break label$26;
                               };
                               $1 = 1114112;
                               break label$26;
                              };
                              label$34 : {
                               label$35 : {
                                $26 = $11 + $5 | 0;
                                $21 = $26 + 1 | 0;
                                if (($21 | 0) == ($19 | 0)) break label$35;
                                $26 = $26 + 2 | 0;
                                $21 = (HEAPU8[$21 >> 0] | 0) & 63 | 0;
                                break label$34;
                               };
                               $21 = 0;
                               $26 = $19;
                              };
                              $27 = $1 & 31 | 0;
                              label$36 : {
                               label$37 : {
                                label$38 : {
                                 $1 = $1 & 255 | 0;
                                 if ($1 >>> 0 < 224 >>> 0) break label$38;
                                 if (($26 | 0) == ($19 | 0)) break label$37;
                                 $28 = $26 + 1 | 0;
                                 $26 = (HEAPU8[$26 >> 0] | 0) & 63 | 0;
                                 break label$36;
                                };
                                $1 = $21 | ($27 << 6 | 0) | 0;
                                break label$26;
                               };
                               $26 = 0;
                               $28 = $19;
                              };
                              $26 = $26 | ($21 << 6 | 0) | 0;
                              label$39 : {
                               if ($1 >>> 0 < 240 >>> 0) break label$39;
                               if (($28 | 0) == ($19 | 0)) break label$28;
                               $1 = (HEAPU8[$28 >> 0] | 0) & 63 | 0;
                               break label$27;
                              };
                              $1 = $26 | ($27 << 12 | 0) | 0;
                              break label$26;
                             };
                             if (($25 | 0) == ($13 | 0)) break label$10;
                             $28 = $25 + $16 | 0;
                             $3 = $28 + 4294967295 | 0;
                             if ($3 >>> 0 >= $13 >>> 0) break label$25;
                             $27 = $11 + $25 | 0;
                             $29 = $15 + $25 | 0;
                             $30 = $25 + $17 | 0;
                             i64toi32_i32$2 = $35$hi;
                             $229 = $35;
                             $229$hi = i64toi32_i32$2;
                             i64toi32_i32$2 = 0;
                             i64toi32_i32$2 = i64toi32_i32$2;
                             i64toi32_i32$0 = $21;
                             i64toi32_i32$1 = 0;
                             i64toi32_i32$3 = 255;
                             i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
                             i64toi32_i32$1 = i64toi32_i32$1;
                             i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
                             i64toi32_i32$0 = 0;
                             i64toi32_i32$3 = 32;
                             i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
                             if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                              i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
                              $66 = 0;
                             } else {
                              i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
                              $66 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
                             }
                             $233$hi = i64toi32_i32$0;
                             i64toi32_i32$0 = $229$hi;
                             i64toi32_i32$1 = $229;
                             i64toi32_i32$2 = $233$hi;
                             i64toi32_i32$3 = $66;
                             i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
                             i64toi32_i32$2 = i64toi32_i32$2;
                             $34 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
                             $34$hi = i64toi32_i32$2;
                             $31 = $4;
                             $1 = $25;
                             label$40 : do {
                              if (($25 | 0) != ($1 | 0)) break label$23;
                              $32 = 0;
                              label$41 : {
                               label$42 : {
                                label$43 : {
                                 i64toi32_i32$0 = $11 + $3 | 0;
                                 i64toi32_i32$2 = HEAPU8[i64toi32_i32$0 >> 0] | 0;
                                 i64toi32_i32$1 = 0;
                                 i64toi32_i32$1 = i64toi32_i32$1;
                                 i64toi32_i32$0 = i64toi32_i32$2;
                                 i64toi32_i32$2 = 0;
                                 i64toi32_i32$3 = 63;
                                 i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
                                 $244 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
                                 $244$hi = i64toi32_i32$2;
                                 i64toi32_i32$2 = 0;
                                 i64toi32_i32$1 = 1;
                                 i64toi32_i32$0 = $244$hi;
                                 i64toi32_i32$3 = $244;
                                 i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
                                 if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                                  i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
                                  $67 = 0;
                                 } else {
                                  i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
                                  $67 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
                                 }
                                 $245$hi = i64toi32_i32$0;
                                 i64toi32_i32$0 = $34$hi;
                                 i64toi32_i32$0 = $245$hi;
                                 i64toi32_i32$2 = $67;
                                 i64toi32_i32$1 = $34$hi;
                                 i64toi32_i32$3 = $34;
                                 i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
                                 i64toi32_i32$1 = i64toi32_i32$1;
                                 if ((i64toi32_i32$2 & i64toi32_i32$3 | 0 | i64toi32_i32$1 | 0 | 0) == (0 | 0)) break label$43;
                                 $33 = ($4 | 0) == (4294967295 | 0);
                                 $1 = (wasm2js_i32$0 = $9, wasm2js_i32$1 = (wasm2js_i32$3 = $9, wasm2js_i32$4 = $31, wasm2js_i32$5 = $31 >>> 0 < $9 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$2 = $33, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                                 label$44 : do {
                                  if ($1 >>> 0 >= $16 >>> 0) break label$42;
                                  $3 = $25 + $1 | 0;
                                  if ($3 >>> 0 >= $13 >>> 0) break label$18;
                                  $3 = $27 + $1 | 0;
                                  $26 = $8 + $1 | 0;
                                  $1 = $1 + 1 | 0;
                                  if ((HEAPU8[$26 >> 0] | 0 | 0) == (HEAPU8[$3 >> 0] | 0 | 0)) continue label$44;
                                  break label$44;
                                 } while (1);
                                 $1 = $29 + $1 | 0;
                                 break label$41;
                                };
                                $1 = $28;
                                break label$41;
                               };
                               $26 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = $31, wasm2js_i32$2 = $33, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                               $1 = $9;
                               label$45 : do {
                                if ($26 >>> 0 >= $1 >>> 0) break label$20;
                                $1 = $1 + 4294967295 | 0;
                                if ($1 >>> 0 >= $16 >>> 0) break label$17;
                                $3 = $1 + $25 | 0;
                                if ($3 >>> 0 >= $13 >>> 0) break label$16;
                                if ((HEAPU8[($8 + $1 | 0) >> 0] | 0 | 0) == (HEAPU8[($11 + $3 | 0) >> 0] | 0 | 0)) continue label$45;
                                break label$45;
                               } while (1);
                               $32 = $18;
                               $1 = $30;
                              };
                              $31 = (wasm2js_i32$0 = $31, wasm2js_i32$1 = $32, wasm2js_i32$2 = ($4 | 0) == (4294967295 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                              $3 = $20 + $1 | 0;
                              if ($3 >>> 0 < $13 >>> 0) continue label$40;
                              break label$40;
                             } while (1);
                             $1 = $13;
                             $4 = $31;
                             break label$24;
                            };
                            $1 = 0;
                           };
                           $1 = $26 << 6 | 0 | (($27 << 18 | 0) & 1835008 | 0) | 0 | $1 | 0;
                          };
                          $21 = ($3 | 0) == (0 | 0);
                          if ($3) break label$22;
                          if (($1 | 0) == (1114112 | 0)) break label$21;
                          $3 = 1;
                          label$46 : {
                           if ($1 >>> 0 < 128 >>> 0) break label$46;
                           $3 = 2;
                           if ($1 >>> 0 < 2048 >>> 0) break label$46;
                           $3 = (wasm2js_i32$0 = 3, wasm2js_i32$1 = 4, wasm2js_i32$2 = $1 >>> 0 < 65536 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                          };
                          $5 = $3 + $5 | 0;
                          $1 = $22;
                          continue label$14;
                         };
                         $1 = $13;
                        };
                        $25 = $13;
                        break label$15;
                       };
                       label$47 : {
                        label$48 : {
                         if (($1 | 0) == (0 | 0)) break label$48;
                         if (($13 | 0) == ($1 | 0)) break label$48;
                         $25 = $1;
                         label$49 : do {
                          label$50 : {
                           if ($13 >>> 0 <= $25 >>> 0) break label$50;
                           if ((HEAP8[($11 + $25 | 0) >> 0] | 0 | 0) >= (4294967232 | 0)) break label$47;
                          };
                          $3 = $25 + 1 | 0;
                          label$51 : {
                           if (($25 | 0) == (4294967295 | 0)) break label$51;
                           $26 = ($14 | 0) == ($25 | 0);
                           $25 = $3;
                           if (($26 | 0) == (0 | 0)) continue label$49;
                          };
                          break label$49;
                         } while (1);
                         $4 = $31;
                         $25 = $3;
                         break label$15;
                        };
                        $4 = $31;
                        $25 = $1;
                        break label$15;
                       };
                       $4 = $31;
                       break label$15;
                      };
                      $26 = 0;
                      $28 = $5;
                      $3 = $25;
                      $25 = $5;
                      break label$6;
                     };
                     $3 = $25;
                     break label$9;
                    };
                    $26 = 0;
                    $4 = (wasm2js_i32$0 = $31, wasm2js_i32$1 = 0, wasm2js_i32$2 = $33, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                    break label$7;
                   };
                   wasm2js_i32$0 = $2;
                   wasm2js_i32$1 = $2 + 72 | 0;
                   HEAP32[(wasm2js_i32$0 + 84 | 0) >> 2] = wasm2js_i32$1;
                   wasm2js_i32$0 = $2;
                   wasm2js_i32$1 = $2 + 64 | 0;
                   HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
                   wasm2js_i32$0 = $2;
                   wasm2js_i32$1 = $2 + 76 | 0;
                   HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
                   core__str__traits___$LT$impl$u20$core__slice__SliceIndex$LT$str$GT$$u20$for$u20$core__ops__range__RangeFrom$LT$usize$GT$$GT$__index___$u7b$$u7b$closure$u7d$$u7d$__h40498af093b1e50e_1($2 + 80 | 0 | 0);
                   abort();
                  };
                  core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055668 | 0, $3 | 0, $13 | 0);
                  abort();
                 };
                 core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055684 | 0, $1 | 0, $16 | 0);
                 abort();
                };
                core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055700 | 0, $3 | 0, $13 | 0);
                abort();
               };
               $25 = (wasm2js_i32$0 = $25, wasm2js_i32$1 = $1, wasm2js_i32$2 = $1 >>> 0 < $25 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
               $1 = $22;
               continue label$14;
               break label$14;
              } while (1);
             };
             $4 = 4294967295;
             if ($1 >>> 0 >= $13 >>> 0) break label$10;
             i64toi32_i32$1 = $35$hi;
             $417 = $35;
             $417$hi = i64toi32_i32$1;
             i64toi32_i32$1 = 0;
             i64toi32_i32$1 = i64toi32_i32$1;
             i64toi32_i32$0 = $21;
             i64toi32_i32$2 = 0;
             i64toi32_i32$3 = 255;
             i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
             i64toi32_i32$2 = i64toi32_i32$2;
             i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
             i64toi32_i32$0 = 0;
             i64toi32_i32$3 = 32;
             i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
             if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
              i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
              $68 = 0;
             } else {
              i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
              $68 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
             }
             $421$hi = i64toi32_i32$0;
             i64toi32_i32$0 = $417$hi;
             i64toi32_i32$2 = $417;
             i64toi32_i32$1 = $421$hi;
             i64toi32_i32$3 = $68;
             i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
             i64toi32_i32$1 = i64toi32_i32$1;
             $34 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
             $34$hi = i64toi32_i32$1;
             $25 = $3;
             label$52 : {
              label$53 : {
               label$54 : {
                label$55 : {
                 label$56 : do {
                  label$57 : {
                   label$58 : {
                    label$59 : {
                     i64toi32_i32$0 = $11 + $1 | 0;
                     i64toi32_i32$1 = HEAPU8[i64toi32_i32$0 >> 0] | 0;
                     i64toi32_i32$2 = 0;
                     i64toi32_i32$2 = i64toi32_i32$2;
                     i64toi32_i32$0 = i64toi32_i32$1;
                     i64toi32_i32$1 = 0;
                     i64toi32_i32$3 = 63;
                     i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
                     $428 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
                     $428$hi = i64toi32_i32$1;
                     i64toi32_i32$1 = 0;
                     i64toi32_i32$2 = 1;
                     i64toi32_i32$0 = $428$hi;
                     i64toi32_i32$3 = $428;
                     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
                     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                      i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
                      $69 = 0;
                     } else {
                      i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
                      $69 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
                     }
                     $429$hi = i64toi32_i32$0;
                     i64toi32_i32$0 = $34$hi;
                     i64toi32_i32$0 = $429$hi;
                     i64toi32_i32$1 = $69;
                     i64toi32_i32$2 = $34$hi;
                     i64toi32_i32$3 = $34;
                     i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
                     i64toi32_i32$2 = i64toi32_i32$2;
                     if ((i64toi32_i32$1 & i64toi32_i32$3 | 0 | i64toi32_i32$2 | 0 | 0) == (0 | 0)) break label$59;
                     $27 = $12 + $25 | 0;
                     $28 = $9 + $25 | 0;
                     $1 = 0;
                     label$60 : do {
                      if (($9 + $1 | 0) >>> 0 >= $16 >>> 0) break label$58;
                      $3 = $28 + $1 | 0;
                      if ($3 >>> 0 >= $13 >>> 0) break label$54;
                      $3 = $27 + $1 | 0;
                      $26 = $10 + $1 | 0;
                      $1 = $1 + 1 | 0;
                      if ((HEAPU8[$26 >> 0] | 0 | 0) == (HEAPU8[$3 >> 0] | 0 | 0)) continue label$60;
                      break label$60;
                     } while (1);
                     $25 = $25 + $1 | 0;
                     break label$57;
                    };
                    $25 = $25 + $16 | 0;
                    break label$57;
                   };
                   $1 = $9;
                   label$61 : do {
                    if (($1 | 0) == (0 | 0)) break label$55;
                    $1 = $1 + 4294967295 | 0;
                    if ($1 >>> 0 >= $16 >>> 0) break label$53;
                    $3 = $1 + $25 | 0;
                    if ($3 >>> 0 >= $13 >>> 0) break label$52;
                    if ((HEAPU8[($8 + $1 | 0) >> 0] | 0 | 0) == (HEAPU8[($11 + $3 | 0) >> 0] | 0 | 0)) continue label$61;
                    break label$61;
                   } while (1);
                   $25 = $25 + $17 | 0;
                  };
                  $1 = $25 + $20 | 0;
                  if ($1 >>> 0 < $13 >>> 0) continue label$56;
                  break label$10;
                  break label$56;
                 } while (1);
                };
                $28 = $25 + $16 | 0;
                $26 = 0;
                $4 = 4294967295;
                break label$7;
               };
               core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055668 | 0, $3 | 0, $13 | 0);
               abort();
              };
              core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055684 | 0, $1 | 0, $16 | 0);
              abort();
             };
             core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055700 | 0, $3 | 0, $13 | 0);
             abort();
            };
            label$62 : do {
             label$63 : {
              label$64 : {
               label$65 : {
                label$66 : {
                 label$67 : {
                  i64toi32_i32$0 = $11 + $1 | 0;
                  i64toi32_i32$2 = HEAPU8[i64toi32_i32$0 >> 0] | 0;
                  i64toi32_i32$1 = 0;
                  i64toi32_i32$1 = i64toi32_i32$1;
                  i64toi32_i32$0 = i64toi32_i32$2;
                  i64toi32_i32$2 = 0;
                  i64toi32_i32$3 = 63;
                  i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
                  $514 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
                  $514$hi = i64toi32_i32$2;
                  i64toi32_i32$2 = 0;
                  i64toi32_i32$1 = 1;
                  i64toi32_i32$0 = $514$hi;
                  i64toi32_i32$3 = $514;
                  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
                  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                   i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
                   $70 = 0;
                  } else {
                   i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
                   $70 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
                  }
                  $515$hi = i64toi32_i32$0;
                  i64toi32_i32$0 = $34$hi;
                  i64toi32_i32$0 = $515$hi;
                  i64toi32_i32$2 = $70;
                  i64toi32_i32$1 = $34$hi;
                  i64toi32_i32$3 = $34;
                  i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
                  i64toi32_i32$1 = i64toi32_i32$1;
                  i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
                  i64toi32_i32$2 = 0;
                  i64toi32_i32$3 = 0;
                  if ((i64toi32_i32$0 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$1 | 0) == (i64toi32_i32$2 | 0) | 0) break label$67;
                  $1 = (wasm2js_i32$0 = $9, wasm2js_i32$1 = $4, wasm2js_i32$2 = $4 >>> 0 < $9 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                  $27 = $11 + $25 | 0;
                  label$68 : do {
                   if ($1 >>> 0 >= $16 >>> 0) break label$64;
                   $3 = $25 + $1 | 0;
                   if ($3 >>> 0 >= $13 >>> 0) break label$65;
                   $3 = $27 + $1 | 0;
                   $26 = $8 + $1 | 0;
                   $1 = $1 + 1 | 0;
                   if ((HEAPU8[$26 >> 0] | 0 | 0) == (HEAPU8[$3 >> 0] | 0 | 0)) continue label$68;
                   break label$68;
                  } while (1);
                  $25 = ($15 + $25 | 0) + $1 | 0;
                  break label$66;
                 };
                 $25 = $25 + $16 | 0;
                };
                $4 = 0;
                break label$63;
               };
               core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055668 | 0, $3 | 0, $13 | 0);
               abort();
              };
              $1 = $9;
              label$69 : do {
               if ($4 >>> 0 >= $1 >>> 0) break label$8;
               $1 = $1 + 4294967295 | 0;
               if ($1 >>> 0 >= $16 >>> 0) break label$4;
               $3 = $1 + $25 | 0;
               if ($3 >>> 0 >= $13 >>> 0) break label$3;
               if ((HEAPU8[($8 + $1 | 0) >> 0] | 0 | 0) == (HEAPU8[($11 + $3 | 0) >> 0] | 0 | 0)) continue label$69;
               break label$69;
              } while (1);
              $25 = $25 + $17 | 0;
              $4 = $18;
             };
             $1 = $25 + $20 | 0;
             if ($1 >>> 0 < $13 >>> 0) continue label$62;
             break label$62;
            } while (1);
           };
           $3 = $13;
          };
          $26 = 1;
          label$70 : {
           if ($24) break label$70;
           $28 = $6;
           $25 = $7;
           if (($25 | 0) != ($28 | 0)) break label$6;
           break label$2;
          };
          $28 = $6;
          $25 = $7;
          break label$6;
         };
         $28 = $25 + $16 | 0;
         $4 = 0;
         $26 = 0;
        };
        $3 = $28;
       };
       core__str___$LT$impl$u20$str$GT$__trim__hc1d729ddcc9832cb($2 + 8 | 0 | 0, $11 + $6 | 0 | 0, $25 - $6 | 0 | 0);
       $1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
       if (($1 | 0) == (0 | 0)) break label$2;
       alloc__slice___$LT$impl$u20$alloc__borrow__ToOwned$u20$for$u20$$u5b$T$u5d$$GT$__to_owned__hbcd55da94b695ae8($2 + 48 | 0 | 0, $1 | 0, HEAPU32[($2 + 12 | 0) >> 2] | 0 | 0);
       if ((HEAPU32[($2 + 48 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$1;
       $1 = ($2 + 32 | 0) + 8 | 0;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = HEAPU32[(($2 + 48 | 0) + 8 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$3 = $2;
       i64toi32_i32$0 = HEAPU32[(i64toi32_i32$3 + 48 | 0) >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$3, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
       $637 = i64toi32_i32$0;
       i64toi32_i32$0 = i64toi32_i32$3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = $637;
       HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       wasm2js_i32$0 = (i64toi32_i32$0 + 80 | 0) + 8 | 0;
       wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$3 = i64toi32_i32$0;
       i64toi32_i32$1 = HEAPU32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
       $645 = i64toi32_i32$1;
       i64toi32_i32$1 = i64toi32_i32$3;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = $645;
       HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 84 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 85 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 86 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 87 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__insert__he711eca5d2540e0e(i64toi32_i32$1 + 16 | 0 | 0, i64toi32_i32$1 + 80 | 0 | 0) | 0;
       $6 = $28;
       if (($26 | 0) == (0 | 0)) continue label$5;
       break label$2;
       break label$5;
      } while (1);
     };
     core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055684 | 0, $1 | 0, $16 | 0);
     abort();
    };
    core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1055700 | 0, $3 | 0, $13 | 0);
    abort();
   };
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  };
  core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($2 + 48 | 0 | 0);
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[(($2 + 16 | 0) + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$3 = $2;
  i64toi32_i32$0 = HEAPU32[(i64toi32_i32$3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$3, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
  $669 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $669;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = i64toi32_i32$3 + 96 | 0;
 }
 
 function core__str__traits___$LT$impl$u20$core__slice__SliceIndex$LT$str$GT$$u20$for$u20$core__ops__range__RangeFrom$LT$usize$GT$$GT$__index___$u7b$$u7b$closure$u7d$$u7d$__h40498af093b1e50e_1($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = HEAPU32[$0 >> 2] | 0;
  core__str__slice_error_fail__hf97d66f6274169ea(HEAPU32[$1 >> 2] | 0 | 0, HEAPU32[($1 + 4 | 0) >> 2] | 0 | 0, HEAPU32[(HEAPU32[($0 + 4 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAPU32[(HEAPU32[($0 + 8 | 0) >> 2] | 0) >> 2] | 0 | 0);
  abort();
 }
 
 function _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h85b9c76b39e3dc46($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $18 = 0, $4 = 0, $19 = 0, $17 = 0, $20 = 0, $8 = 0, $3 = 0, $6 = 0, $12 = 0, $5 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $22 = 0, $13 = 0, $15 = 0, $16 = 0, $92 = 0, $106 = 0, $121 = 0, $132 = 0, $149 = 0, $207 = 0, $211 = 0, $225 = 0, $228 = 0, $240 = 0, $243 = 0, $255 = 0, $258 = 0, $264 = 0, $267 = 0, $276 = 0, $279 = 0, $288 = 0, $291 = 0, $297 = 0, $300 = 0, $307 = 0, $310 = 0, $313 = 0, $317 = 0, $380 = 0, $390 = 0, $404 = 0, $419 = 0, $430 = 0, $448 = 0, $468 = 0, $474 = 0, $492 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 512 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050784;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  memcpy($2 + 16 | 0 | 0, $1 | 0, 180 | 0) | 0;
  $3 = $2 + 312 | 0 | 4 | 0;
  $4 = ($2 + 312 | 0) + 8 | 0;
  $5 = ($2 + 392 | 0) + 8 | 0;
  $6 = ($2 + 416 | 0) + 8 | 0;
  $7 = $2 + 120 | 0;
  $8 = $2 + 44 | 0;
  $9 = $2 + 80 | 0;
  $10 = $2 + 116 | 0;
  $11 = ($2 + 16 | 0) + 24 | 0;
  $12 = ($2 + 232 | 0) + 72 | 0;
  $13 = $2 + 192 | 0;
  $14 = ($2 + 16 | 0) + 20 | 0;
  $15 = ($2 + 16 | 0) + 12 | 0;
  $16 = ($2 + 16 | 0) + 16 | 0;
  label$1 : do {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          $1 = HEAPU8[$10 >> 0] | 0;
          if (($1 | 0) == (3 | 0)) break label$8;
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               label$14 : {
                $1 = $1 & 3 | 0;
                if (($1 | 0) == (1 | 0)) break label$14;
                if (($1 | 0) != (2 | 0)) break label$13;
                _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $9 | 0);
                if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$12;
                wasm2js_i32$0 = ($2 + 488 | 0) + 8 | 0;
                wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
                HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                i64toi32_i32$2 = $2;
                i64toi32_i32$0 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
                i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
                $92 = i64toi32_i32$0;
                i64toi32_i32$0 = $2;
                i64toi32_i32$1 = i64toi32_i32$1;
                wasm2js_i32$0 = $2;
                wasm2js_i32$1 = $92;
                HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
                wasm2js_i32$0 = $2;
                wasm2js_i32$1 = i64toi32_i32$1;
                (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 492 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 493 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 494 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 495 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
                break label$9;
               };
               _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $8 | 0);
               if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$12;
               wasm2js_i32$0 = ($2 + 488 | 0) + 8 | 0;
               wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               i64toi32_i32$2 = $2;
               i64toi32_i32$1 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
               i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
               $106 = i64toi32_i32$1;
               i64toi32_i32$1 = $2;
               i64toi32_i32$0 = i64toi32_i32$0;
               wasm2js_i32$0 = $2;
               wasm2js_i32$1 = $106;
               HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $2;
               wasm2js_i32$1 = i64toi32_i32$0;
               (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 492 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 493 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 494 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 495 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
               break label$9;
              };
              _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $8 | 0);
              if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$11;
              $1 = ($2 + 232 | 0) + 8 | 0;
              wasm2js_i32$0 = $1;
              wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              i64toi32_i32$2 = $2;
              i64toi32_i32$0 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
              i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
              $121 = i64toi32_i32$0;
              i64toi32_i32$0 = $2;
              i64toi32_i32$1 = i64toi32_i32$1;
              wasm2js_i32$0 = $2;
              wasm2js_i32$1 = $121;
              HEAP32[(wasm2js_i32$0 + 232 | 0) >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $2;
              wasm2js_i32$1 = i64toi32_i32$1;
              (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 236 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 237 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 238 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 239 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
              if ((HEAPU32[($2 + 232 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$10;
              wasm2js_i32$0 = ($2 + 488 | 0) + 8 | 0;
              wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              i64toi32_i32$2 = $2;
              i64toi32_i32$1 = HEAPU32[($2 + 232 | 0) >> 2] | 0;
              i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 236 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 237 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 238 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 239 | 0) >> 0] | 0 | 0) << 24);
              $132 = i64toi32_i32$1;
              i64toi32_i32$1 = $2;
              i64toi32_i32$0 = i64toi32_i32$0;
              wasm2js_i32$0 = $2;
              wasm2js_i32$1 = $132;
              HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $2;
              wasm2js_i32$1 = i64toi32_i32$0;
              (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 492 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 493 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 494 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 495 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
              break label$9;
             };
             wasm2js_i32$0 = $2;
             wasm2js_i32$1 = 0;
             HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
             break label$9;
            };
            wasm2js_i32$0 = $2;
            wasm2js_i32$1 = 0;
            HEAP32[(wasm2js_i32$0 + 232 | 0) >> 2] = wasm2js_i32$1;
           };
           wasm2js_i32$0 = $10;
           wasm2js_i32$1 = 2;
           HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
           _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $9 | 0);
           label$15 : {
            label$16 : {
             if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$16;
             wasm2js_i32$0 = ($2 + 488 | 0) + 8 | 0;
             wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
             HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
             i64toi32_i32$2 = $2;
             i64toi32_i32$0 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
             i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
             $149 = i64toi32_i32$0;
             i64toi32_i32$0 = $2;
             i64toi32_i32$1 = i64toi32_i32$1;
             wasm2js_i32$0 = $2;
             wasm2js_i32$1 = $149;
             HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
             wasm2js_i32$0 = $2;
             wasm2js_i32$1 = i64toi32_i32$1;
             (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 492 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 493 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 494 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 495 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
             break label$15;
            };
            wasm2js_i32$0 = $2;
            wasm2js_i32$1 = 0;
            HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
           };
           core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($2 + 232 | 0 | 0);
          };
          if (HEAPU32[($2 + 488 | 0) >> 2] | 0) break label$7;
          core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($2 + 488 | 0 | 0);
         };
         label$17 : {
          label$18 : {
           $17 = HEAPU32[$11 >> 2] | 0;
           if (($17 | 0) == (0 | 0)) break label$18;
           $18 = HEAPU32[$14 >> 2] | 0;
           $1 = $18 + 1 | 0;
           $19 = (HEAPU32[$15 >> 2] | 0) + ($18 << 2 | 0) | 0;
           $18 = ((HEAPU32[$16 >> 2] | 0) + Math_imul($18, 24) | 0) + 4294967272 | 0;
           label$19 : do {
            wasm2js_i32$0 = $14;
            wasm2js_i32$1 = $1;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            $1 = $1 + 1 | 0;
            $18 = $18 + 24 | 0;
            $20 = HEAPU32[$19 >> 2] | 0;
            $19 = $19 + 4 | 0;
            if (($20 | 0) == (0 | 0)) continue label$19;
            break label$19;
           } while (1);
           wasm2js_i32$0 = $11;
           wasm2js_i32$1 = $17 + 4294967295 | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = (HEAPU32[($2 + 20 | 0) >> 2] | 0) + 4294967295 | 0;
           HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
           $19 = HEAPU32[$18 >> 2] | 0;
           $1 = ($2 + 312 | 0) + 16 | 0;
           wasm2js_i32$0 = $1;
           wasm2js_i32$1 = HEAPU32[($18 + 20 | 0) >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           i64toi32_i32$2 = $18 + 12 | 0;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $207 = i64toi32_i32$1;
           i64toi32_i32$1 = $4;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $207;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $18 + 4 | 0;
           i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $211 = i64toi32_i32$0;
           i64toi32_i32$0 = $2;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $211;
           HEAP32[(wasm2js_i32$0 + 312 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 316 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 317 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 318 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 319 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           if (($19 | 0) == (0 | 0)) break label$18;
           $18 = ($2 + 440 | 0) + 16 | 0;
           wasm2js_i32$0 = $18;
           wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           $20 = ($2 + 440 | 0) + 8 | 0;
           i64toi32_i32$2 = $4;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $225 = i64toi32_i32$1;
           i64toi32_i32$1 = $20;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $225;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $2;
           i64toi32_i32$0 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
           $228 = i64toi32_i32$0;
           i64toi32_i32$0 = $2;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $228;
           HEAP32[(wasm2js_i32$0 + 440 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 444 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 445 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 446 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 447 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           $17 = ($2 + 464 | 0) + 16 | 0;
           wasm2js_i32$0 = $17;
           wasm2js_i32$1 = HEAPU32[$18 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           $21 = ($2 + 464 | 0) + 8 | 0;
           i64toi32_i32$2 = $20;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $240 = i64toi32_i32$1;
           i64toi32_i32$1 = $21;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $240;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $2;
           i64toi32_i32$0 = HEAPU32[($2 + 440 | 0) >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 444 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 445 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 446 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 447 | 0) >> 0] | 0 | 0) << 24);
           $243 = i64toi32_i32$0;
           i64toi32_i32$0 = $2;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $243;
           HEAP32[(wasm2js_i32$0 + 464 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 468 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 469 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 470 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 471 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           $22 = ($2 + 488 | 0) + 16 | 0;
           wasm2js_i32$0 = $22;
           wasm2js_i32$1 = HEAPU32[$18 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           $18 = ($2 + 488 | 0) + 8 | 0;
           i64toi32_i32$2 = $20;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $255 = i64toi32_i32$1;
           i64toi32_i32$1 = $18;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $255;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $2;
           i64toi32_i32$0 = HEAPU32[($2 + 440 | 0) >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 444 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 445 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 446 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 447 | 0) >> 0] | 0 | 0) << 24);
           $258 = i64toi32_i32$0;
           i64toi32_i32$0 = $2;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $258;
           HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 492 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 493 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 494 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 495 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           wasm2js_i32$0 = $1;
           wasm2js_i32$1 = HEAPU32[$17 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           i64toi32_i32$2 = $21;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $264 = i64toi32_i32$1;
           i64toi32_i32$1 = $4;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $264;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = i64toi32_i32$1;
           i64toi32_i32$0 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $267 = i64toi32_i32$0;
           i64toi32_i32$0 = $6;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = i64toi32_i32$0;
           wasm2js_i32$1 = $267;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$0;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           $20 = i64toi32_i32$2 + 8 | 0;
           wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
           wasm2js_i32$1 = HEAPU32[$20 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           i64toi32_i32$2 = $2;
           i64toi32_i32$1 = HEAPU32[($2 + 464 | 0) >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 468 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 469 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 470 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 471 | 0) >> 0] | 0 | 0) << 24);
           $276 = i64toi32_i32$1;
           i64toi32_i32$1 = $2;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $276;
           HEAP32[(wasm2js_i32$0 + 312 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 316 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 317 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 318 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 319 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $2;
           i64toi32_i32$0 = HEAPU32[($2 + 488 | 0) >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 492 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 493 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 494 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 495 | 0) >> 0] | 0 | 0) << 24);
           $279 = i64toi32_i32$0;
           i64toi32_i32$0 = $2;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $279;
           HEAP32[(wasm2js_i32$0 + 416 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 420 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 421 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 422 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 423 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           $17 = ($2 + 416 | 0) + 16 | 0;
           wasm2js_i32$0 = $22;
           wasm2js_i32$1 = HEAPU32[$17 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           i64toi32_i32$2 = $6;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $288 = i64toi32_i32$1;
           i64toi32_i32$1 = $18;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $288;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $2;
           i64toi32_i32$0 = HEAPU32[($2 + 416 | 0) >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 420 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 421 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 422 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 423 | 0) >> 0] | 0 | 0) << 24);
           $291 = i64toi32_i32$0;
           i64toi32_i32$0 = $2;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $291;
           HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 492 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 493 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 494 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 495 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           wasm2js_i32$0 = $1;
           wasm2js_i32$1 = HEAPU32[$17 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           i64toi32_i32$2 = $6;
           i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $297 = i64toi32_i32$1;
           i64toi32_i32$1 = $4;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $297;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = i64toi32_i32$1;
           i64toi32_i32$0 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $300 = i64toi32_i32$0;
           i64toi32_i32$0 = $5;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = i64toi32_i32$0;
           wasm2js_i32$1 = $300;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$0;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
           wasm2js_i32$1 = HEAPU32[$20 >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           i64toi32_i32$2 = $2;
           i64toi32_i32$1 = HEAPU32[($2 + 416 | 0) >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 420 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 421 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 422 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 423 | 0) >> 0] | 0 | 0) << 24);
           $307 = i64toi32_i32$1;
           i64toi32_i32$1 = $2;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $307;
           HEAP32[(wasm2js_i32$0 + 312 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 316 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 317 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 318 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 319 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $2;
           i64toi32_i32$0 = HEAPU32[($2 + 488 | 0) >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 492 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 493 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 494 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 495 | 0) >> 0] | 0 | 0) << 24);
           $310 = i64toi32_i32$0;
           i64toi32_i32$0 = $2;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $310;
           HEAP32[(wasm2js_i32$0 + 392 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 396 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 397 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 398 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 399 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $2;
           i64toi32_i32$1 = HEAPU32[($2 + 392 | 0) >> 2] | 0;
           i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 396 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 397 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 398 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 399 | 0) >> 0] | 0 | 0) << 24);
           $313 = i64toi32_i32$1;
           i64toi32_i32$1 = $3;
           i64toi32_i32$0 = i64toi32_i32$0;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = $313;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$1;
           wasm2js_i32$1 = i64toi32_i32$0;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           i64toi32_i32$2 = $5;
           i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $317 = i64toi32_i32$0;
           i64toi32_i32$0 = $3 + 8 | 0;
           i64toi32_i32$1 = i64toi32_i32$1;
           wasm2js_i32$0 = i64toi32_i32$0;
           wasm2js_i32$1 = $317;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = i64toi32_i32$0;
           wasm2js_i32$1 = i64toi32_i32$1;
           (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
           wasm2js_i32$0 = $3 + 16 | 0;
           wasm2js_i32$1 = HEAPU32[(($2 + 392 | 0) + 16 | 0) >> 2] | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $19;
           HEAP32[(wasm2js_i32$0 + 312 | 0) >> 2] = wasm2js_i32$1;
           core__ops__function__impls___$LT$impl$u20$core__ops__function__FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$__call_once__h5809665f158d4e36($2 + 232 | 0 | 0, $2 + 16 | 0 | 0, $2 + 312 | 0 | 0);
           if ((HEAPU8[$12 >> 0] | 0 | 0) == (3 | 0)) break label$17;
           memcpy($2 + 312 | 0 | 0, $2 + 232 | 0 | 0, 76 | 0) | 0;
           core__ptr__drop_in_place__h8f6439a11c20a009($8 | 0);
           memcpy($8 | 0, $2 + 312 | 0 | 0, 76 | 0) | 0;
           if ((HEAPU8[$12 >> 0] | 0 | 0) != (3 | 0)) continue label$1;
           core__ptr__drop_in_place__h8f6439a11c20a009($2 + 232 | 0 | 0);
           continue label$1;
          };
          wasm2js_i32$0 = $12;
          wasm2js_i32$1 = 3;
          HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
         };
         $1 = HEAPU8[$13 >> 0] | 0;
         if (($1 | 0) == (3 | 0)) break label$4;
         $1 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = $7, wasm2js_i32$2 = ($1 | 0) == (3 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
         $19 = HEAPU8[($1 + 72 | 0) >> 0] | 0;
         if (($19 & 3 | 0 | 0) == (1 | 0)) break label$6;
         if (($19 | 0) != (2 | 0)) break label$5;
         _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $1 + 36 | 0 | 0);
         if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$4;
         wasm2js_i32$0 = ($2 + 216 | 0) + 8 | 0;
         wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         i64toi32_i32$2 = $2;
         i64toi32_i32$1 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
         i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
         $380 = i64toi32_i32$1;
         i64toi32_i32$1 = $2;
         i64toi32_i32$0 = i64toi32_i32$0;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = $380;
         HEAP32[(wasm2js_i32$0 + 216 | 0) >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = i64toi32_i32$0;
         (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 220 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 221 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 222 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 223 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
         break label$3;
        };
        wasm2js_i32$0 = ($2 + 216 | 0) + 8 | 0;
        wasm2js_i32$1 = HEAPU32[(($2 + 488 | 0) + 8 | 0) >> 2] | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        i64toi32_i32$2 = $2;
        i64toi32_i32$0 = HEAPU32[($2 + 488 | 0) >> 2] | 0;
        i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 492 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 493 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 494 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 495 | 0) >> 0] | 0 | 0) << 24);
        $390 = i64toi32_i32$0;
        i64toi32_i32$0 = $2;
        i64toi32_i32$1 = i64toi32_i32$1;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = $390;
        HEAP32[(wasm2js_i32$0 + 216 | 0) >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = i64toi32_i32$1;
        (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 220 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 221 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 222 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 223 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
        break label$2;
       };
       _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $1 | 0);
       if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$4;
       wasm2js_i32$0 = ($2 + 216 | 0) + 8 | 0;
       wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = $2;
       i64toi32_i32$1 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
       $404 = i64toi32_i32$1;
       i64toi32_i32$1 = $2;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = $404;
       HEAP32[(wasm2js_i32$0 + 216 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 220 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 221 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 222 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 223 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       break label$3;
      };
      _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $1 | 0);
      label$20 : {
       label$21 : {
        if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$21;
        $19 = ($2 + 488 | 0) + 8 | 0;
        wasm2js_i32$0 = $19;
        wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        i64toi32_i32$2 = $2;
        i64toi32_i32$0 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
        i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
        $419 = i64toi32_i32$0;
        i64toi32_i32$0 = $2;
        i64toi32_i32$1 = i64toi32_i32$1;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = $419;
        HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = i64toi32_i32$1;
        (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 492 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 493 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 494 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 495 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
        if ((HEAPU32[($2 + 488 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$20;
        wasm2js_i32$0 = ($2 + 216 | 0) + 8 | 0;
        wasm2js_i32$1 = HEAPU32[$19 >> 2] | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        i64toi32_i32$2 = $2;
        i64toi32_i32$1 = HEAPU32[($2 + 488 | 0) >> 2] | 0;
        i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 492 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 493 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 494 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 495 | 0) >> 0] | 0 | 0) << 24);
        $430 = i64toi32_i32$1;
        i64toi32_i32$1 = $2;
        i64toi32_i32$0 = i64toi32_i32$0;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = $430;
        HEAP32[(wasm2js_i32$0 + 216 | 0) >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = i64toi32_i32$0;
        (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 220 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 221 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 222 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 223 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
        break label$3;
       };
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = 0;
       HEAP32[(wasm2js_i32$0 + 488 | 0) >> 2] = wasm2js_i32$1;
      };
      wasm2js_i32$0 = $1 + 72 | 0;
      wasm2js_i32$1 = 2;
      HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
      _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h6a1833019a40f98b($2 + 312 | 0 | 0, $1 + 36 | 0 | 0);
      label$22 : {
       label$23 : {
        if ((HEAPU32[($2 + 312 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$23;
        wasm2js_i32$0 = ($2 + 216 | 0) + 8 | 0;
        wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        i64toi32_i32$2 = $2;
        i64toi32_i32$0 = HEAPU32[($2 + 312 | 0) >> 2] | 0;
        i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 316 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 317 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 318 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 319 | 0) >> 0] | 0 | 0) << 24);
        $448 = i64toi32_i32$0;
        i64toi32_i32$0 = $2;
        i64toi32_i32$1 = i64toi32_i32$1;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = $448;
        HEAP32[(wasm2js_i32$0 + 216 | 0) >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = $2;
        wasm2js_i32$1 = i64toi32_i32$1;
        (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 220 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 221 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 222 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 223 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
        break label$22;
       };
       wasm2js_i32$0 = $2;
       wasm2js_i32$1 = 0;
       HEAP32[(wasm2js_i32$0 + 216 | 0) >> 2] = wasm2js_i32$1;
      };
      core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($2 + 488 | 0 | 0);
      break label$3;
     };
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = 0;
     HEAP32[(wasm2js_i32$0 + 216 | 0) >> 2] = wasm2js_i32$1;
    };
    core__ptr__drop_in_place__h8f6439a11c20a009($2 + 232 | 0 | 0);
   };
   label$24 : {
    if ((HEAPU32[($2 + 216 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$24;
    $1 = ($2 + 200 | 0) + 8 | 0;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = HEAPU32[(($2 + 216 | 0) + 8 | 0) >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = HEAPU32[($2 + 216 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 220 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 221 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 222 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 223 | 0) >> 0] | 0 | 0) << 24);
    $468 = i64toi32_i32$1;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $468;
    HEAP32[(wasm2js_i32$0 + 200 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 204 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 205 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 206 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 207 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAPU32[($2 + 200 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 204 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 205 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 206 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 207 | 0) >> 0] | 0 | 0) << 24);
    $474 = i64toi32_i32$0;
    i64toi32_i32$0 = $2;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $474;
    HEAP32[(wasm2js_i32$0 + 312 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 316 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 317 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 318 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 319 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__insert__he711eca5d2540e0e($2 | 0, $2 + 312 | 0 | 0) | 0;
    continue label$1;
   };
   break label$1;
  } while (1);
  core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($2 + 216 | 0 | 0);
  _$LT$std__collections__hash__table__RawTable$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__hccaa43b317c76f2b($2 + 16 | 0 | 0);
  core__ptr__drop_in_place__h8f6439a11c20a009($8 | 0);
  core__ptr__drop_in_place__h8f6439a11c20a009($7 | 0);
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = HEAPU32[$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $492 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $492;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 512 | 0;
 }
 
 function core__ptr__drop_in_place__h8f6439a11c20a009($0) {
  $0 = $0 | 0;
  label$1 : {
   if ((HEAPU8[($0 + 72 | 0) >> 0] | 0 | 0) == (3 | 0)) break label$1;
   _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($0 | 0);
   _$LT$alloc__collections__btree__map__IntoIter$LT$K$C$$u20$V$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h931f3c5f94bf9e0a($0 + 36 | 0 | 0);
  };
 }
 
 function _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h8df78ab925a4e1b2($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, $31 = 0, $37 = 0, $59 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 144 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050784;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 16 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 17 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 18 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 19 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  memcpy($2 + 24 | 0 | 0, $1 | 0, 88 | 0) | 0;
  _$LT$core__iter__Cloned$LT$I$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__hd01a44f189605f63($2 + 128 | 0 | 0, $2 + 24 | 0 | 0);
  label$1 : {
   if ((HEAPU32[($2 + 128 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$1;
   label$2 : do {
    $1 = ($2 + 112 | 0) + 8 | 0;
    $3 = ($2 + 128 | 0) + 8 | 0;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = HEAPU32[$3 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$0 = HEAPU32[($2 + 128 | 0) >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 132 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 133 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 134 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 135 | 0) >> 0] | 0 | 0) << 24);
    $31 = i64toi32_i32$0;
    i64toi32_i32$0 = $2;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $31;
    HEAP32[(wasm2js_i32$0 + 112 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 116 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 117 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 118 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 119 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    i64toi32_i32$1 = HEAPU32[($2 + 112 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 116 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 117 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 118 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 119 | 0) >> 0] | 0 | 0) << 24);
    $37 = i64toi32_i32$1;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $37;
    HEAP32[(wasm2js_i32$0 + 128 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 132 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 133 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 134 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 135 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__insert__he711eca5d2540e0e($2 + 8 | 0 | 0, $2 + 128 | 0 | 0) | 0;
    _$LT$core__iter__Cloned$LT$I$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__hd01a44f189605f63($2 + 128 | 0 | 0, $2 + 24 | 0 | 0);
    if (HEAPU32[($2 + 128 | 0) >> 2] | 0) continue label$2;
    break label$2;
   } while (1);
  };
  core__ptr__drop_in_place__h5f323eac697b9663_20_28_llvm_6460138853990130005_29($2 + 128 | 0 | 0);
  wasm2js_i32$0 = $0 + 8 | 0;
  wasm2js_i32$1 = HEAPU32[(($2 + 8 | 0) + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $59 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $59;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 144 | 0;
 }
 
 function _$LT$alloc__collections__btree__set__Union$LT$$u27$a$C$$u20$T$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__h62f35f713a3a70e2($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $2 = 0, $1 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1 = global$0 - 48 | 0;
  global$0 = $1;
  label$1 : {
   label$2 : {
    if ((HEAPU32[($0 + 36 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$2;
    $2 = $0 + 40 | 0;
    $3 = HEAPU32[$2 >> 2] | 0;
    break label$1;
   };
   $3 = 0;
   label$3 : {
    $4 = HEAPU32[($0 + 32 | 0) >> 2] | 0;
    if (($4 | 0) == (0 | 0)) break label$3;
    wasm2js_i32$0 = $0 + 32 | 0;
    wasm2js_i32$1 = $4 + 4294967295 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 40 | 0 | 0, $0 | 0);
    $4 = HEAPU32[($1 + 40 | 0) >> 2] | 0;
    if (($4 | 0) == (0 | 0)) break label$3;
    $3 = $4;
   };
   $2 = $0 + 40 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 36 | 0;
   wasm2js_i32$1 = 1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  $4 = 0;
  $3 = (wasm2js_i32$0 = $2, wasm2js_i32$1 = 0, wasm2js_i32$2 = $3, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  $5 = $0 + 44 | 0;
  label$4 : {
   label$5 : {
    if ((HEAPU32[($0 + 80 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$5;
    $2 = $0 + 84 | 0;
    $4 = HEAPU32[$2 >> 2] | 0;
    break label$4;
   };
   label$6 : {
    $2 = $0 + 76 | 0;
    $6 = HEAPU32[$2 >> 2] | 0;
    if (($6 | 0) == (0 | 0)) break label$6;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $6 + 4294967295 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 32 | 0 | 0, $5 | 0);
    $2 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
    if (($2 | 0) == (0 | 0)) break label$6;
    $4 = $2;
   };
   $2 = $0 + 84 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 80 | 0;
   wasm2js_i32$1 = 1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  label$7 : {
   label$8 : {
    label$9 : {
     label$10 : {
      label$11 : {
       label$12 : {
        $4 = alloc__collections__btree__set__cmp_opt__h0ce37bd9b08937ab($3 | 0, (wasm2js_i32$0 = $2, wasm2js_i32$1 = 0, wasm2js_i32$2 = $4, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0, 1 | 0, 255 | 0) | 0;
        if (($4 & 255 | 0 | 0) == (0 | 0)) break label$12;
        if ((($4 << 24 | 0) >> 24 | 0 | 0) != (1 | 0)) break label$11;
        $3 = $0 + 80 | 0;
        $2 = HEAPU32[$3 >> 2] | 0;
        $4 = 0;
        wasm2js_i32$0 = $3;
        wasm2js_i32$1 = 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        if (($2 | 0) == (0 | 0)) break label$10;
        $4 = HEAPU32[($0 + 84 | 0) >> 2] | 0;
        break label$7;
       };
       $4 = $0 + 80 | 0;
       $3 = HEAPU32[$4 >> 2] | 0;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       label$13 : {
        if ($3) break label$13;
        $4 = $0 + 76 | 0;
        $3 = HEAPU32[$4 >> 2] | 0;
        if (($3 | 0) == (0 | 0)) break label$13;
        wasm2js_i32$0 = $4;
        wasm2js_i32$1 = $3 + 4294967295 | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 16 | 0 | 0, $5 | 0);
        HEAPU32[($1 + 16 | 0) >> 2] | 0;
       };
       $3 = $0 + 36 | 0;
       $2 = HEAPU32[$3 >> 2] | 0;
       $4 = 0;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       if (($2 | 0) == (0 | 0)) break label$9;
       $4 = HEAPU32[($0 + 40 | 0) >> 2] | 0;
       break label$7;
      };
      $3 = $0 + 36 | 0;
      $2 = HEAPU32[$3 >> 2] | 0;
      $4 = 0;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      if (($2 | 0) == (0 | 0)) break label$8;
      $4 = HEAPU32[($0 + 40 | 0) >> 2] | 0;
      break label$7;
     };
     $0 = $0 + 76 | 0;
     $3 = HEAPU32[$0 >> 2] | 0;
     if (($3 | 0) == (0 | 0)) break label$7;
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = $3 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 24 | 0 | 0, $5 | 0);
     $0 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
     if (($0 | 0) == (0 | 0)) break label$7;
     $4 = $0;
     break label$7;
    };
    $3 = HEAPU32[($0 + 32 | 0) >> 2] | 0;
    if (($3 | 0) == (0 | 0)) break label$7;
    wasm2js_i32$0 = $0 + 32 | 0;
    wasm2js_i32$1 = $3 + 4294967295 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 8 | 0 | 0, $0 | 0);
    $0 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
    if (($0 | 0) == (0 | 0)) break label$7;
    $4 = $0;
    break label$7;
   };
   $3 = HEAPU32[($0 + 32 | 0) >> 2] | 0;
   if (($3 | 0) == (0 | 0)) break label$7;
   wasm2js_i32$0 = $0 + 32 | 0;
   wasm2js_i32$1 = $3 + 4294967295 | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 | 0, $0 | 0);
   $0 = HEAPU32[$1 >> 2] | 0;
   if (($0 | 0) == (0 | 0)) break label$7;
   $4 = $0;
  };
  global$0 = $1 + 48 | 0;
  return $4 | 0;
 }
 
 function alloc__collections__btree__set__cmp_opt__h0ce37bd9b08937ab($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $4 = global$0 - 16 | 0;
  global$0 = $4;
  label$1 : {
   if (($0 | 0) == (0 | 0)) break label$1;
   $2 = $3;
   if (($1 | 0) == (0 | 0)) break label$1;
   $1 = HEAPU32[$1 >> 2] | 0;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($4 + 8 | 0 | 0, HEAPU32[$0 >> 2] | 0 | 0);
   $3 = HEAPU32[($4 + 8 | 0) >> 2] | 0;
   $2 = HEAPU32[($4 + 12 | 0) >> 2] | 0;
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($4 | 0, $1 | 0);
   label$2 : {
    $0 = HEAPU32[($4 + 4 | 0) >> 2] | 0;
    $1 = memcmp($3 | 0, HEAPU32[$4 >> 2] | 0 | 0, (wasm2js_i32$0 = $0, wasm2js_i32$1 = $2, wasm2js_i32$2 = $2 >>> 0 > $0 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0) | 0;
    if (($1 | 0) == (0 | 0)) break label$2;
    $2 = (wasm2js_i32$0 = 4294967295, wasm2js_i32$1 = 1, wasm2js_i32$2 = ($1 | 0) < (0 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    break label$1;
   };
   $2 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = (wasm2js_i32$3 = 4294967295, wasm2js_i32$4 = 1, wasm2js_i32$5 = $2 >>> 0 < $0 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$2 = ($2 | 0) == ($0 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
  };
  global$0 = $4 + 16 | 0;
  return $2 | 0;
 }
 
 function _$LT$alloc__collections__btree__set__Difference$LT$$u27$a$C$$u20$T$GT$$u20$as$u20$core__iter__iterator__Iterator$GT$__next__hfd0fed06519fd9d2($0) {
  $0 = $0 | 0;
  var $9 = 0, $1 = 0, $6 = 0, $5 = 0, $10 = 0, $8 = 0, $11 = 0, $7 = 0, $2 = 0, $3 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $1 = global$0 - 48 | 0;
  global$0 = $1;
  $2 = $0 + 84 | 0;
  $3 = $0 + 44 | 0;
  $4 = $0 + 40 | 0;
  $5 = $0 + 36 | 0;
  $6 = $0 + 80 | 0;
  $7 = $0 + 32 | 0;
  $8 = $0 + 76 | 0;
  label$1 : do {
   label$2 : {
    label$3 : {
     if ((HEAPU32[$5 >> 2] | 0 | 0) != (1 | 0)) break label$3;
     $9 = HEAPU32[$4 >> 2] | 0;
     break label$2;
    };
    $9 = 0;
    label$4 : {
     $10 = HEAPU32[$7 >> 2] | 0;
     if (($10 | 0) == (0 | 0)) break label$4;
     wasm2js_i32$0 = $7;
     wasm2js_i32$1 = $10 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 40 | 0 | 0, $0 | 0);
     $10 = HEAPU32[($1 + 40 | 0) >> 2] | 0;
     if (($10 | 0) == (0 | 0)) break label$4;
     $9 = $10;
    };
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $9;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = 1;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   };
   $10 = (wasm2js_i32$0 = $4, wasm2js_i32$1 = 0, wasm2js_i32$2 = $9, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
   label$5 : {
    label$6 : {
     if ((HEAPU32[$6 >> 2] | 0 | 0) != (1 | 0)) break label$6;
     $9 = HEAPU32[$2 >> 2] | 0;
     break label$5;
    };
    $9 = 0;
    label$7 : {
     $11 = HEAPU32[$8 >> 2] | 0;
     if (($11 | 0) == (0 | 0)) break label$7;
     wasm2js_i32$0 = $8;
     wasm2js_i32$1 = $11 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 32 | 0 | 0, $3 | 0);
     $11 = HEAPU32[($1 + 32 | 0) >> 2] | 0;
     if (($11 | 0) == (0 | 0)) break label$7;
     $9 = $11;
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $9;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = 1;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   };
   $9 = alloc__collections__btree__set__cmp_opt__h0ce37bd9b08937ab($10 | 0, (wasm2js_i32$0 = $2, wasm2js_i32$1 = 0, wasm2js_i32$2 = $9, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0, 255 | 0, 255 | 0) | 0;
   $10 = ($9 << 24 | 0) >> 24 | 0;
   label$8 : {
    if ($9 & 255 | 0) break label$8;
    $9 = HEAPU32[$5 >> 2] | 0;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    label$9 : {
     if ($9) break label$9;
     $9 = HEAPU32[$7 >> 2] | 0;
     if (($9 | 0) == (0 | 0)) break label$9;
     wasm2js_i32$0 = $7;
     wasm2js_i32$1 = $9 + 4294967295 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 16 | 0 | 0, $0 | 0);
     HEAPU32[($1 + 16 | 0) >> 2] | 0;
    };
    $9 = HEAPU32[$6 >> 2] | 0;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    if ($9) continue label$1;
    $9 = HEAPU32[$8 >> 2] | 0;
    if (($9 | 0) == (0 | 0)) continue label$1;
    wasm2js_i32$0 = $8;
    wasm2js_i32$1 = $9 + 4294967295 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 8 | 0 | 0, $3 | 0);
    continue label$1;
   };
   label$10 : {
    if (($10 | 0) != (1 | 0)) break label$10;
    $9 = HEAPU32[$6 >> 2] | 0;
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    if ($9) continue label$1;
    $9 = HEAPU32[$8 >> 2] | 0;
    if (($9 | 0) == (0 | 0)) continue label$1;
    wasm2js_i32$0 = $8;
    wasm2js_i32$1 = $9 + 4294967295 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 + 24 | 0 | 0, $3 | 0);
    continue label$1;
   };
   break label$1;
  } while (1);
  $9 = $0 + 36 | 0;
  $5 = HEAPU32[$9 >> 2] | 0;
  $6 = 0;
  wasm2js_i32$0 = $9;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  label$11 : {
   label$12 : {
    if (($5 | 0) == (0 | 0)) break label$12;
    $6 = HEAPU32[($0 + 40 | 0) >> 2] | 0;
    break label$11;
   };
   $9 = $0 + 32 | 0;
   $5 = HEAPU32[$9 >> 2] | 0;
   if (($5 | 0) == (0 | 0)) break label$11;
   wasm2js_i32$0 = $9;
   wasm2js_i32$1 = $5 + 4294967295 | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($1 | 0, $0 | 0);
   $0 = HEAPU32[$1 >> 2] | 0;
   if (($0 | 0) == (0 | 0)) break label$11;
   $6 = $0;
  };
  global$0 = $1 + 48 | 0;
  return $6 | 0;
 }
 
 function _$LT$$RF$$u27$a$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__ops__arith__Sub$LT$$RF$$u27$b$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$$GT$__sub__h185e88ba4071a156($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = global$0 - 176 | 0;
  global$0 = $3;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 48 | 0 | 0, $1 | 0);
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 8 | 0 | 0, $2 | 0);
  memcpy($3 + 92 | 0 | 0, $3 + 8 | 0 | 0, 36 | 0) | 0;
  memcpy($3 + 8 | 0 | 0, $3 + 88 | 0 | 0, 40 | 0) | 0;
  memcpy($3 + 88 | 0 | 0, $3 + 48 | 0 | 0, 36 | 0) | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 124 | 0) >> 2] = wasm2js_i32$1;
  memcpy(($3 + 88 | 0) + 40 | 0 | 0, $3 + 8 | 0 | 0, 40 | 0) | 0;
  wasm2js_i32$0 = $3 + 168 | 0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h48a59c6eef87d3e6($0 | 0, $3 + 88 | 0 | 0);
  global$0 = $3 + 176 | 0;
 }
 
 function _$LT$$RF$$u27$a$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__ops__bit__BitOr$LT$$RF$$u27$b$u20$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$$GT$__bitor__h08dbd728a983bcf3($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = global$0 - 176 | 0;
  global$0 = $3;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 48 | 0 | 0, $1 | 0);
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($3 + 8 | 0 | 0, $2 | 0);
  memcpy($3 + 92 | 0 | 0, $3 + 8 | 0 | 0, 36 | 0) | 0;
  memcpy($3 + 8 | 0 | 0, $3 + 88 | 0 | 0, 40 | 0) | 0;
  memcpy($3 + 88 | 0 | 0, $3 + 48 | 0 | 0, 36 | 0) | 0;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 124 | 0) >> 2] = wasm2js_i32$1;
  memcpy(($3 + 88 | 0) + 40 | 0 | 0, $3 + 8 | 0 | 0, 40 | 0) | 0;
  wasm2js_i32$0 = $3 + 168 | 0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$u20$as$u20$core__iter__traits__FromIterator$LT$T$GT$$GT$__from_iter__h8df78ab925a4e1b2($0 | 0, $3 + 88 | 0 | 0);
  global$0 = $3 + 176 | 0;
 }
 
 function _$LT$alloc__collections__btree__set__BTreeSet$LT$T$GT$$GT$__is_subset__h1aec3f2ea4b81ba0($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, $5 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2 = global$0 - 128 | 0;
  global$0 = $2;
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($2 + 48 | 0 | 0, $0 | 0);
  _$LT$alloc__collections__btree__map__BTreeMap$LT$K$C$$u20$V$GT$$GT$__iter__h4dd1beeaa033d287($2 + 88 | 0 | 0, $1 | 0);
  $0 = 0;
  $1 = 0;
  label$1 : {
   $3 = HEAPU32[($2 + 80 | 0) >> 2] | 0;
   if (($3 | 0) == (0 | 0)) break label$1;
   wasm2js_i32$0 = $2 + 80 | 0;
   wasm2js_i32$1 = $3 + 4294967295 | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 + 40 | 0 | 0, $2 + 48 | 0 | 0);
   $1 = 0;
   $3 = HEAPU32[($2 + 40 | 0) >> 2] | 0;
   if (($3 | 0) == (0 | 0)) break label$1;
   $1 = $3;
  };
  label$2 : {
   $3 = HEAPU32[($2 + 120 | 0) >> 2] | 0;
   if (($3 | 0) == (0 | 0)) break label$2;
   wasm2js_i32$0 = $2 + 120 | 0;
   wasm2js_i32$1 = $3 + 4294967295 | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 + 32 | 0 | 0, $2 + 88 | 0 | 0);
   $3 = HEAPU32[($2 + 32 | 0) >> 2] | 0;
   if (($3 | 0) == (0 | 0)) break label$2;
   $0 = $3;
  };
  label$3 : {
   label$4 : {
    label$5 : {
     if (($1 | 0) == (0 | 0)) break label$5;
     $4 = ($2 + 48 | 0) + 32 | 0;
     label$6 : do {
      if (($0 | 0) == (0 | 0)) break label$4;
      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($2 + 24 | 0 | 0, $0 | 0);
      $5 = HEAPU32[($2 + 24 | 0) >> 2] | 0;
      $0 = HEAPU32[($2 + 28 | 0) >> 2] | 0;
      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($2 + 16 | 0 | 0, $1 | 0);
      label$7 : {
       label$8 : {
        label$9 : {
         label$10 : {
          $3 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
          $5 = memcmp($5 | 0, HEAPU32[($2 + 16 | 0) >> 2] | 0 | 0, (wasm2js_i32$0 = $3, wasm2js_i32$1 = $0, wasm2js_i32$2 = $0 >>> 0 > $3 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0) | 0;
          if (($5 | 0) == (0 | 0)) break label$10;
          $0 = (wasm2js_i32$0 = 4294967295, wasm2js_i32$1 = 1, wasm2js_i32$2 = ($5 | 0) < (0 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
          if (($0 | 0) == (0 | 0)) break label$9;
          break label$8;
         };
         $0 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = (wasm2js_i32$3 = 4294967295, wasm2js_i32$4 = 1, wasm2js_i32$5 = $0 >>> 0 < $3 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$2 = ($0 | 0) == ($3 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
         if ($0) break label$8;
        };
        $1 = 0;
        $0 = HEAPU32[$4 >> 2] | 0;
        if (($0 | 0) == (0 | 0)) break label$7;
        wasm2js_i32$0 = $4;
        wasm2js_i32$1 = $0 + 4294967295 | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 + 8 | 0 | 0, $2 + 48 | 0 | 0);
        $0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
        if (($0 | 0) == (0 | 0)) break label$7;
        $1 = $0;
        break label$7;
       };
       if (($0 | 0) == (1 | 0)) break label$4;
      };
      $0 = 0;
      label$11 : {
       $3 = ($2 + 88 | 0) + 32 | 0;
       $5 = HEAPU32[$3 >> 2] | 0;
       if (($5 | 0) == (0 | 0)) break label$11;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $5 + 4294967295 | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       _$LT$alloc__collections__btree__map__Range$LT$$u27$a$C$$u20$K$C$$u20$V$GT$$GT$__next_unchecked__h61b6375577641b7b($2 | 0, $2 + 88 | 0 | 0);
       $3 = HEAPU32[$2 >> 2] | 0;
       if (($3 | 0) == (0 | 0)) break label$11;
       $0 = $3;
      };
      if ($1) continue label$6;
      break label$6;
     } while (1);
    };
    $1 = 1;
    break label$3;
   };
   $1 = 0;
  };
  global$0 = $2 + 128 | 0;
  return $1 | 0;
 }
 
 function alloc__collections__btree__search__search_linear__h1db43c11fd93e48d($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $7 = 0, $8 = 0, $9 = 0, $4 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  $5 = $4 + 8 | 0;
  $6 = Math_imul(HEAPU16[($4 + 6 | 0) >> 1] | 0, 12);
  $7 = 4294967295;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : do {
      if (($6 | 0) == (0 | 0)) break label$3;
      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($3 + 8 | 0 | 0, $2 | 0);
      $8 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
      $1 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
      _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($3 | 0, $5 | 0);
      label$5 : {
       label$6 : {
        $9 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
        $8 = memcmp($8 | 0, HEAPU32[$3 >> 2] | 0 | 0, (wasm2js_i32$0 = $9, wasm2js_i32$1 = $1, wasm2js_i32$2 = $1 >>> 0 > $9 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0) | 0;
        if (($8 | 0) == (0 | 0)) break label$6;
        $1 = (wasm2js_i32$0 = 4294967295, wasm2js_i32$1 = 1, wasm2js_i32$2 = ($8 | 0) < (0 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
        break label$5;
       };
       $1 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = (wasm2js_i32$3 = 4294967295, wasm2js_i32$4 = 1, wasm2js_i32$5 = $1 >>> 0 < $9 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$2 = ($1 | 0) == ($9 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
      };
      $7 = $7 + 1 | 0;
      label$7 : {
       if (($1 | 0) == (0 | 0)) break label$7;
       $5 = $5 + 12 | 0;
       $6 = $6 + 4294967284 | 0;
       if (($1 | 0) == (1 | 0)) continue label$4;
       break label$2;
      };
      break label$4;
     } while (1);
     $1 = 1;
     break label$1;
    };
    $7 = HEAPU16[($4 + 6 | 0) >> 1] | 0;
   };
   $1 = 0;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP8[(wasm2js_i32$0 + 4 | 0) >> 0] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $7;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $3 + 16 | 0;
 }
 
 function alloc__collections__btree__search__search_tree__hba997feb6bda6482($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $3 = 0, $9 = 0, $5 = 0, $8 = 0, $15 = 0, $10 = 0, $4 = 0, $6 = 0, $7 = 0, $12 = 0, $13 = 0, $14 = 0, $29 = 0, $48 = 0, $11 = 0, $65 = 0, $68 = 0, $96 = 0, $111 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $3 = global$0 - 64 | 0;
  global$0 = $3;
  $4 = ($3 + 48 | 0) + 8 | 0;
  $5 = $1 + 8 | 0;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $29 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $29;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  alloc__collections__btree__search__search_linear__h1db43c11fd93e48d(i64toi32_i32$0 + 16 | 0 | 0, i64toi32_i32$0 + 48 | 0 | 0, $2 | 0);
  $6 = i64toi32_i32$0 + 36 | 0;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  $7 = i64toi32_i32$0 + 40 | 0;
  $8 = HEAPU32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
  wasm2js_i32$0 = $7;
  wasm2js_i32$1 = $8;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $48 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $48;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 32 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 33 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 34 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 35 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $9 = (HEAPU8[(i64toi32_i32$1 + 20 | 0) >> 0] | 0) & 1 | 0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $9 ^ 1 | 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  $10 = i64toi32_i32$1 + 24 | 0 | 4 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      if ($9) break label$4;
      $11 = $1 + 4 | 0;
      label$5 : do {
       $12 = $10 + 8 | 0;
       i64toi32_i32$2 = $12;
       i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $65 = i64toi32_i32$0;
       i64toi32_i32$0 = $4;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = $65;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       i64toi32_i32$2 = $10;
       i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $68 = i64toi32_i32$1;
       i64toi32_i32$1 = $3;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = $68;
       HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       $9 = HEAPU32[$6 >> 2] | 0;
       $13 = HEAPU32[((i64toi32_i32$1 + 24 | 0) + 8 | 0) >> 2] | 0;
       $14 = HEAPU32[(i64toi32_i32$1 + 28 | 0) >> 2] | 0;
       if (($14 | 0) == (0 | 0)) break label$2;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $14 + 4294967295 | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $5;
       wasm2js_i32$1 = $9;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $11;
       wasm2js_i32$1 = HEAPU32[(($13 + ($8 << 2 | 0) | 0) + 140 | 0) >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = $1;
       i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $96 = i64toi32_i32$0;
       i64toi32_i32$0 = $3;
       i64toi32_i32$1 = i64toi32_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = $96;
       HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$0;
       wasm2js_i32$1 = i64toi32_i32$1;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 52 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 53 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 54 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 55 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       alloc__collections__btree__search__search_linear__h1db43c11fd93e48d(i64toi32_i32$0 + 8 | 0 | 0, i64toi32_i32$0 + 48 | 0 | 0, $2 | 0);
       $9 = HEAPU8[(i64toi32_i32$0 + 12 | 0) >> 0] | 0;
       $8 = HEAPU32[(i64toi32_i32$0 + 8 | 0) >> 2] | 0;
       wasm2js_i32$0 = $12;
       wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       i64toi32_i32$2 = i64toi32_i32$2;
       i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
       i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $111 = i64toi32_i32$1;
       i64toi32_i32$1 = $10;
       i64toi32_i32$0 = i64toi32_i32$0;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = $111;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = i64toi32_i32$1;
       wasm2js_i32$1 = i64toi32_i32$0;
       (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
       wasm2js_i32$0 = $7;
       wasm2js_i32$1 = $8;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       $9 = $9 & 1 | 0;
       wasm2js_i32$0 = $3;
       wasm2js_i32$1 = $9 ^ 1 | 0;
       HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
       if (($9 | 0) == (0 | 0)) continue label$5;
       break label$5;
      } while (1);
      $1 = $3 + 48 | 0;
      break label$3;
     };
     $1 = $3 + 48 | 0;
    };
    i64toi32_i32$2 = $10;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$1 = i64toi32_i32$1;
    $15 = i64toi32_i32$0;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$0 = $1;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $15;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    i64toi32_i32$0 = $0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $15;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;
    i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    i64toi32_i32$0 = i64toi32_i32$0;
    $15 = i64toi32_i32$1;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = $1 + 8 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $15;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    i64toi32_i32$1 = $0 + 12 | 0;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = $15;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$1;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $1 = 0;
    break label$1;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 8 | 0;
   wasm2js_i32$1 = $13;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 12 | 0;
   wasm2js_i32$1 = $9;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 16 | 0;
   wasm2js_i32$1 = $8;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $1 = 1;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $3 + 64 | 0;
 }
 
 function __rust_alloc($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return __rdl_alloc($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function __rust_dealloc($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  __rdl_dealloc($0 | 0, $1 | 0, $2 | 0);
 }
 
 function __rust_realloc($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  return __rdl_realloc($0 | 0, $1 | 0, $2 | 0, $3 | 0) | 0 | 0;
 }
 
 function __rust_alloc_zeroed($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return __rdl_alloc_zeroed($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function core__fmt__Write__write_fmt__h7b649ce0cd3c12b8($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2 = 0, i64toi32_i32$2 = 0, $13 = 0, $19 = 0, $22 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $13 = i64toi32_i32$0;
  i64toi32_i32$0 = ($2 + 8 | 0) + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $13;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $19 = i64toi32_i32$1;
  i64toi32_i32$1 = ($2 + 8 | 0) + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $19;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $22 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $22;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $1 = core__fmt__write__h3465a327d1942227($2 + 4 | 0 | 0, 1055716 | 0, $2 + 8 | 0 | 0) | 0;
  global$0 = $2 + 32 | 0;
  return $1 | 0;
 }
 
 function core__ptr__drop_in_place__ha736cccfe20f82a6($0) {
  $0 = $0 | 0;
 }
 
 function core__result__unwrap_failed__hb93a220068b847b0($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 64 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 40 | 0) + 12 | 0;
  wasm2js_i32$1 = 20;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 16 | 0) + 12 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 36 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 21;
  HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1055740;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 2;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050188;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 56 | 0;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 40 | 0;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  core__panicking__panic_fmt__he3157e9749b52890($2 + 16 | 0 | 0, 1055756 | 0);
  abort();
 }
 
 function _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__hab1f9561c4bb4bb3($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $4 = global$0 - 96 | 0;
  global$0 = $4;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $4 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $4 + 12 | 0;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  label$1 : {
   if (($1 | 0) != ($3 | 0)) break label$1;
   memcpy($0 | 0, $2 | 0, $1 | 0) | 0;
   global$0 = $4 + 96 | 0;
   return;
  };
  wasm2js_i32$0 = ($4 + 72 | 0) + 20 | 0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($4 + 48 | 0) + 12 | 0;
  wasm2js_i32$1 = 12;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($4 + 48 | 0) + 20 | 0;
  wasm2js_i32$1 = 22;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($4 + 24 | 0) + 12 | 0;
  wasm2js_i32$1 = 3;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($4 + 24 | 0) + 20 | 0;
  wasm2js_i32$1 = 3;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 1055796;
  HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 80 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 81 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 82 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 83 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 1050392;
  HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 12;
  HEAP32[(wasm2js_i32$0 + 52 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 1055772;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 3;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = 1050392;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $4 + 16 | 0;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $4 + 20 | 0;
  HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $4 + 72 | 0;
  HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $4 + 48 | 0;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  core__panicking__panic_fmt__he3157e9749b52890($4 + 24 | 0 | 0, 1055804 | 0);
  abort();
 }
 
 function _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__h5441145533fb08a4() {
  
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__shrink_to_fit__he81d4d3bdd0b2256($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   label$2 : {
    $2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
    if ($2 >>> 0 < $1 >>> 0) break label$2;
    label$3 : {
     label$4 : {
      label$5 : {
       if (($1 | 0) == (0 | 0)) break label$5;
       if (($2 | 0) == ($1 | 0)) break label$3;
       $2 = __rust_realloc(HEAPU32[$0 >> 2] | 0 | 0, $2 | 0, 1 | 0, $1 | 0) | 0;
       if (($2 | 0) == (0 | 0)) break label$1;
       wasm2js_i32$0 = $0;
       wasm2js_i32$1 = $2;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       break label$4;
      };
      _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__dealloc_buffer__h51734ea1a58cfb58($0 | 0);
      wasm2js_i32$0 = $0;
      wasm2js_i32$1 = 1;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      $1 = 0;
     };
     wasm2js_i32$0 = $0 + 4 | 0;
     wasm2js_i32$1 = $1;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    };
    return;
   };
   core__panicking__panic__h629a30fc6a0298aa(1055820 | 0);
   abort();
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($1 | 0, 1 | 0);
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve_internal__h916d186d00004f48($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $6 = 0, $5 = 0, $7 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $5 = global$0 - 16 | 0;
  global$0 = $5;
  $6 = 2;
  label$1 : {
   label$2 : {
    $7 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
    if (($7 - $1 | 0) >>> 0 >= $2 >>> 0) break label$2;
    $2 = $1 + $2 | 0;
    $1 = $2 >>> 0 < $1 >>> 0;
    label$3 : {
     label$4 : {
      if (($4 | 0) == (0 | 0)) break label$4;
      $6 = 0;
      if ($1) break label$2;
      $1 = $7 << 1 | 0;
      $2 = (wasm2js_i32$1 = $1, wasm2js_i32$2 = $2, wasm2js_i32$3 = $2 >>> 0 < $1 >>> 0, wasm2js_i32$3 ? wasm2js_i32$1 : wasm2js_i32$2);
      break label$3;
     };
     $6 = 0;
     if ($1) break label$2;
    };
    $6 = 0;
    if (($2 | 0) < (0 | 0)) break label$2;
    _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__current_layout__ha87af468403e292a($5 + 8 | 0 | 0, $0 | 0);
    label$5 : {
     label$6 : {
      label$7 : {
       $1 = HEAPU32[($5 + 12 | 0) >> 2] | 0;
       if (($1 | 0) == (0 | 0)) break label$7;
       $1 = __rust_realloc(HEAPU32[$0 >> 2] | 0 | 0, HEAPU32[($5 + 8 | 0) >> 2] | 0 | 0, $1 | 0, $2 | 0) | 0;
       if (($1 | 0) == (0 | 0)) break label$6;
       break label$5;
      };
      $1 = __rust_alloc($2 | 0, 1 | 0) | 0;
      if ($1) break label$5;
     };
     if ($3) break label$1;
    };
    label$8 : {
     if (($1 | 0) == (0 | 0)) break label$8;
     wasm2js_i32$1 = $0;
     wasm2js_i32$2 = $1;
     HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
     wasm2js_i32$1 = $0 + 4 | 0;
     wasm2js_i32$2 = $2;
     HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
     $6 = 2;
     break label$2;
    };
    $6 = 1;
   };
   global$0 = $5 + 16 | 0;
   return $6 | 0;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($2 | 0, 1 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h38c1da4718c5a769($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   $0 = (_$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve_internal__h916d186d00004f48($0 | 0, $1 | 0, $2 | 0, 1 | 0, 1 | 0) | 0) & 255 | 0;
   if (($0 | 0) != (2 | 0)) break label$1;
   return;
  };
  label$2 : {
   if ($0 & 1 | 0) break label$2;
   alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
   abort();
  };
  core__panicking__panic__h629a30fc6a0298aa(1055844 | 0);
  abort();
 }
 
 function _$LT$$RF$T$u20$as$u20$core__fmt__Debug$GT$__fmt__hbcde3c8fdb65fb50($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $0 = HEAPU32[$0 >> 2] | 0;
  label$1 : {
   if ((core__fmt__Formatter__debug_lower_hex__he7dcfa57ef19a030($1 | 0) | 0 | 0) == (0 | 0)) break label$1;
   return core__fmt__num___$LT$impl$u20$core__fmt__LowerHex$u20$for$u20$usize$GT$__fmt__h7696351358bee3f4($0 | 0, $1 | 0) | 0 | 0;
  };
  label$2 : {
   if ((core__fmt__Formatter__debug_upper_hex__hacec1d6fda388360($1 | 0) | 0 | 0) == (0 | 0)) break label$2;
   return core__fmt__num___$LT$impl$u20$core__fmt__UpperHex$u20$for$u20$usize$GT$__fmt__h2c1be22b84d9610e($0 | 0, $1 | 0) | 0 | 0;
  };
  return core__fmt__num___$LT$impl$u20$core__fmt__Display$u20$for$u20$usize$GT$__fmt__h355d58492f9a5998($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__hffe86f286348b6f2($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return _$LT$str$u20$as$u20$core__fmt__Display$GT$__fmt__hbbfce271ab05a0ce(HEAPU32[$0 >> 2] | 0 | 0, HEAPU32[($0 + 4 | 0) >> 2] | 0 | 0, $1 | 0) | 0 | 0;
 }
 
 function core__fmt__ArgumentV1__new__hbdc9fd637428a42d($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_char__hd03664a76d739ae6($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  $0 = HEAPU32[$0 >> 2] | 0;
  label$1 : {
   label$2 : {
    if ($1 >>> 0 >= 128 >>> 0) break label$2;
    label$3 : {
     $3 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
     if (($3 | 0) != (HEAPU32[($0 + 4 | 0) >> 2] | 0 | 0)) break label$3;
     _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h38c1da4718c5a769($0 | 0, $3 | 0, 1 | 0);
    };
    _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__DerefMut$GT$__deref_mut__h407d02891bf3fb9d($2 | 0, $0 | 0);
    $0 = $0 + 8 | 0;
    wasm2js_i32$0 = (HEAPU32[$2 >> 2] | 0) + (HEAPU32[$0 >> 2] | 0) | 0;
    wasm2js_i32$1 = $1;
    HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) + 1 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    break label$1;
   };
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   label$4 : {
    label$5 : {
     if ($1 >>> 0 >= 2048 >>> 0) break label$5;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1 & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($1 >>> 6 | 0) & 31 | 0 | 192 | 0;
     HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
     $1 = 2;
     break label$4;
    };
    label$6 : {
     if ($1 >>> 0 > 65535 >>> 0) break label$6;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1 & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($1 >>> 6 | 0) & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($1 >>> 12 | 0) & 15 | 0 | 224 | 0;
     HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
     $1 = 3;
     break label$4;
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1 >>> 18 | 0 | 240 | 0;
    HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1 & 63 | 0 | 128 | 0;
    HEAP8[(wasm2js_i32$0 + 15 | 0) >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = ($1 >>> 12 | 0) & 63 | 0 | 128 | 0;
    HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = ($1 >>> 6 | 0) & 63 | 0 | 128 | 0;
    HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
    $1 = 4;
   };
   _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$$RF$$u27$a$u20$T$C$$u20$core__slice__Iter$LT$$u27$a$C$$u20$T$GT$$GT$$GT$__spec_extend__h3f0ce64311afea1d($0 | 0, $2 + 12 | 0 | 0, ($2 + 12 | 0) + $1 | 0 | 0);
  };
  global$0 = $2 + 16 | 0;
  return 0 | 0;
 }
 
 function _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_fmt__h110b0b685eafbf41($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2 = 0, i64toi32_i32$2 = 0, $14 = 0, $20 = 0, $23 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $14 = i64toi32_i32$0;
  i64toi32_i32$0 = ($2 + 8 | 0) + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $14;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $20 = i64toi32_i32$1;
  i64toi32_i32$1 = ($2 + 8 | 0) + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $20;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $23 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $23;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $1 = core__fmt__write__h3465a327d1942227($2 + 4 | 0 | 0, 1055716 | 0, $2 + 8 | 0 | 0) | 0;
  global$0 = $2 + 32 | 0;
  return $1 | 0;
 }
 
 function _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$$RF$$u27$a$u20$T$C$$u20$core__slice__Iter$LT$$u27$a$C$$u20$T$GT$$GT$$GT$__spec_extend__h3f0ce64311afea1d(HEAPU32[$0 >> 2] | 0 | 0, $1 | 0, $1 + $2 | 0 | 0);
  return 0 | 0;
 }
 
 function _$LT$T$u20$as$u20$core__convert__Into$LT$U$GT$$GT$__into__h9158ce5d832278be($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function wasm_bindgen__convert__slices___$LT$impl$u20$wasm_bindgen__convert__traits__IntoWasmAbi$u20$for$u20$alloc__vec__Vec$LT$T$GT$$GT$__into_abi__hf9675d4f9a77ef51($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $16 = 0, $23 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $4 = global$0 - 32 | 0;
  global$0 = $4;
  wasm2js_i32$0 = ($4 + 16 | 0) + 8 | 0;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $16 = i64toi32_i32$0;
  i64toi32_i32$0 = $4;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $16;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  _$LT$alloc__vec__Vec$LT$T$GT$$GT$__into_boxed_slice__h586d90db6bedec96($4 + 8 | 0 | 0, $4 + 16 | 0 | 0);
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAPU32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $4, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $23 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $23;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $4 + 32 | 0;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$GT$__into_boxed_slice__h586d90db6bedec96($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  label$1 : {
   $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
   $4 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   if (($3 | 0) == ($4 | 0)) break label$1;
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__shrink_to_fit__he81d4d3bdd0b2256($1 | 0, $4 | 0);
   $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  };
  $1 = HEAPU32[$1 >> 2] | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  $1 = _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__ptr__hd3665d19e7531c89($2 + 8 | 0 | 0) | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $2 + 16 | 0;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$$RF$$u27$a$u20$T$C$$u20$core__slice__Iter$LT$$u27$a$C$$u20$T$GT$$GT$$GT$__spec_extend__h3f0ce64311afea1d($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $2 = $2 - $1 | 0;
  _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__reserve__h38c1da4718c5a769($0 | 0, HEAPU32[($0 + 8 | 0) >> 2] | 0 | 0, $2 | 0);
  $4 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4 + $2 | 0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__DerefMut$GT$__deref_mut__h407d02891bf3fb9d($3 + 8 | 0 | 0, $0 | 0);
  core__slice___$LT$impl$u20$$u5b$T$u5d$$GT$__copy_from_slice__h4339e8adaefc42af($4 + (HEAPU32[($3 + 8 | 0) >> 2] | 0) | 0 | 0, (HEAPU32[($3 + 12 | 0) >> 2] | 0) - $4 | 0 | 0, $1 | 0, $2 | 0);
  global$0 = $3 + 16 | 0;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$GT$__shrink_to_fit__h463924bb7a9a8a44($0) {
  $0 = $0 | 0;
  var $1 = 0;
  label$1 : {
   $1 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   if ((HEAPU32[($0 + 4 | 0) >> 2] | 0 | 0) == ($1 | 0)) break label$1;
   _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__shrink_to_fit__he81d4d3bdd0b2256($0 | 0, $1 | 0);
  };
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$GT$__extend_from_slice__habeb97e2e06a328b($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$alloc__vec__SpecExtend$LT$$RF$$u27$a$u20$T$C$$u20$core__slice__Iter$LT$$u27$a$C$$u20$T$GT$$GT$$GT$__spec_extend__h3f0ce64311afea1d($0 | 0, $1 | 0, $1 + $2 | 0 | 0);
 }
 
 function _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h6e9897e619391774($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return _$LT$str$u20$as$u20$core__fmt__Display$GT$__fmt__hbbfce271ab05a0ce(HEAPU32[$0 >> 2] | 0 | 0, HEAPU32[($0 + 4 | 0) >> 2] | 0 | 0, $1 | 0) | 0 | 0;
 }
 
 function _$LT$T$u20$as$u20$core__convert__From$LT$T$GT$$GT$__from__h29b3f8158ddc4d16() {
  
 }
 
 function core__slice___$LT$impl$u20$core__cmp__PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$__eq__hf1b1596e21e6043b($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0;
  $4 = 0;
  label$1 : {
   label$2 : {
    if (($1 | 0) != ($3 | 0)) break label$2;
    if (($0 | 0) == ($2 | 0)) break label$1;
    $4 = (memcmp($0 | 0, $2 | 0, $1 | 0) | 0 | 0) == (0 | 0);
   };
   return $4 | 0;
  };
  return 1 | 0;
 }
 
 function core__result__unwrap_failed__hac3cdff9c6a413ab($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 64 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 40 | 0) + 12 | 0;
  wasm2js_i32$1 = 23;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 16 | 0) + 12 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 36 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 24;
  HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1055868;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 2;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050620;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 56 | 0;
  HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 40 | 0;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  core__panicking__panic_fmt__he3157e9749b52890($2 + 16 | 0 | 0, 1055884 | 0);
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__current_layout__ha87af468403e292a($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $1 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = ($1 | 0) != (0 | 0);
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__dealloc_buffer__h51734ea1a58cfb58($0) {
  $0 = $0 | 0;
  var $1 = 0;
  label$1 : {
   $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   if (($1 | 0) == (0 | 0)) break label$1;
   __rust_dealloc(HEAPU32[$0 >> 2] | 0 | 0, $1 | 0, 1 | 0);
  };
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__ptr__hd3665d19e7531c89($0) {
  $0 = $0 | 0;
  return HEAPU32[$0 >> 2] | 0 | 0;
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__h7121223030d0edd7($0) {
  $0 = $0 | 0;
  var $1 = 0;
  label$1 : {
   $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   if (($1 | 0) == (0 | 0)) break label$1;
   __rust_dealloc(HEAPU32[$0 >> 2] | 0 | 0, $1 | 0, 1 | 0);
  };
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$GT$__from_raw_parts__he677919afa58bbdf($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__drop__Drop$GT$__drop__ha5ea7b8e716ddb77($0) {
  $0 = $0 | 0;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__Deref$GT$__deref__hc9d7b9d69a4ecef3($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$u20$as$u20$core__ops__deref__DerefMut$GT$__deref_mut__h407d02891bf3fb9d($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = HEAPU32[$1 >> 2] | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function wasm_bindgen__convert__slices___$LT$impl$u20$wasm_bindgen__convert__traits__OptionIntoWasmAbi$u20$for$u20$alloc__string__String$GT$__none__h0f48855ca2510179($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  i64toi32_i32$1 = $0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = 0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
 }
 
 function __wbindgen_global_argument_ptr() {
  return 1058032 | 0;
 }
 
 function __wbindgen_malloc($0) {
  $0 = $0 | 0;
  var $2 = 0, $1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  label$1 : {
   $1 = $0 >>> 0 > 4294967292 >>> 0;
   if ($1) break label$1;
   $2 = 4;
   label$2 : {
    if (($0 | 0) == (0 | 0)) break label$2;
    $2 = __rust_alloc($0 | 0, (wasm2js_i32$1 = 0, wasm2js_i32$2 = 4, wasm2js_i32$3 = $1, wasm2js_i32$3 ? wasm2js_i32$1 : wasm2js_i32$2) | 0) | 0;
    if (($2 | 0) == (0 | 0)) break label$1;
   };
   return $2 | 0;
  };
  std__process__abort__heae80e1b76a2b660();
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function __wbindgen_free($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   if (($1 | 0) == (0 | 0)) break label$1;
   __rust_dealloc($0 | 0, $1 | 0, 4 | 0);
  };
 }
 
 function _$LT$alloc__vec__Vec$LT$T$GT$$GT$__reserve__hcbd52a8f1aa1b52c($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  label$1 : {
   $2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   $3 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   if (($2 - $3 | 0) >>> 0 >= $1 >>> 0) break label$1;
   label$2 : {
    label$3 : {
     $1 = $3 + $1 | 0;
     if ($1 >>> 0 < $3 >>> 0) break label$3;
     $3 = $2 << 1 | 0;
     $1 = (wasm2js_i32$0 = $3, wasm2js_i32$1 = $1, wasm2js_i32$2 = $1 >>> 0 < $3 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
     if (($1 | 0) < (0 | 0)) break label$3;
     label$4 : {
      label$5 : {
       if (($2 | 0) == (0 | 0)) break label$5;
       $2 = __rust_realloc(HEAPU32[$0 >> 2] | 0 | 0, $2 | 0, 1 | 0, $1 | 0) | 0;
       if (($2 | 0) == (0 | 0)) break label$4;
       break label$2;
      };
      $2 = __rust_alloc($1 | 0, 1 | 0) | 0;
      if ($2) break label$2;
     };
     alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($1 | 0, 1 | 0);
     abort();
    };
    alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
    abort();
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0 + 4 | 0;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
 }
 
 function _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__h54c4adee2b5a148a($0) {
  $0 = $0 | 0;
  i64toi32_i32$HIGH_BITS = 2608161065;
  return 2969088188 | 0;
 }
 
 function _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__h902fd08508e87e03($0) {
  $0 = $0 | 0;
  i64toi32_i32$HIGH_BITS = 3162015353;
  return 1666472043 | 0;
 }
 
 function _$LT$core__option__Option$LT$T$GT$$GT$__unwrap__h62cbe44667e1e759($0) {
  $0 = $0 | 0;
  var wasm2js_i32$0 = 0;
  label$1 : {
   if (($0 | 0) == (0 | 0)) break label$1;
   return $0 | 0;
  };
  core__panicking__panic__h629a30fc6a0298aa(1055900 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$core__option__Option$LT$T$GT$$GT$__unwrap__hced4f326c258bfa9($0) {
  $0 = $0 | 0;
  var wasm2js_i32$0 = 0;
  label$1 : {
   if (($0 | 0) == (0 | 0)) break label$1;
   return $0 | 0;
  };
  core__panicking__panic__h629a30fc6a0298aa(1055900 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function core__ptr__drop_in_place__h099e4fd5ca944d37($0) {
  $0 = $0 | 0;
 }
 
 function core__ptr__drop_in_place__h12f11a937b27e43c($0) {
  $0 = $0 | 0;
  var $1 = 0;
  label$1 : {
   $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   if (($1 | 0) == (0 | 0)) break label$1;
   __rust_dealloc(HEAPU32[$0 >> 2] | 0 | 0, $1 | 0, 1 | 0);
  };
 }
 
 function core__ptr__drop_in_place__h373c58c599ae4ce6($0) {
  $0 = $0 | 0;
  var $1 = 0;
  label$1 : {
   $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
   if (($1 | 0) == (0 | 0)) break label$1;
   $0 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   if (($0 | 0) == (0 | 0)) break label$1;
   __rust_dealloc($1 | 0, $0 | 0, 1 | 0);
  };
 }
 
 function _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_char__h2cf5866e116e8135($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  $0 = HEAPU32[$0 >> 2] | 0;
  label$1 : {
   label$2 : {
    if ($1 >>> 0 >= 128 >>> 0) break label$2;
    label$3 : {
     $3 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
     if (($3 | 0) != (HEAPU32[($0 + 4 | 0) >> 2] | 0 | 0)) break label$3;
     _$LT$alloc__vec__Vec$LT$T$GT$$GT$__reserve__hcbd52a8f1aa1b52c($0 | 0, 1 | 0);
     $3 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
    };
    wasm2js_i32$0 = (HEAPU32[$0 >> 2] | 0) + $3 | 0;
    wasm2js_i32$1 = $1;
    HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
    $0 = $0 + 8 | 0;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) + 1 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    break label$1;
   };
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   label$4 : {
    label$5 : {
     if ($1 >>> 0 >= 2048 >>> 0) break label$5;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1 & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($1 >>> 6 | 0) & 31 | 0 | 192 | 0;
     HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
     $1 = 2;
     break label$4;
    };
    label$6 : {
     if ($1 >>> 0 > 65535 >>> 0) break label$6;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1 & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($1 >>> 6 | 0) & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($1 >>> 12 | 0) & 15 | 0 | 224 | 0;
     HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
     $1 = 3;
     break label$4;
    };
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1 >>> 18 | 0 | 240 | 0;
    HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $1 & 63 | 0 | 128 | 0;
    HEAP8[(wasm2js_i32$0 + 15 | 0) >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = ($1 >>> 12 | 0) & 63 | 0 | 128 | 0;
    HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = ($1 >>> 6 | 0) & 63 | 0 | 128 | 0;
    HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
    $1 = 4;
   };
   _$LT$alloc__vec__Vec$LT$T$GT$$GT$__reserve__hcbd52a8f1aa1b52c($0 | 0, $1 | 0);
   $3 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $3 + $1 | 0;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   memcpy($3 + (HEAPU32[$0 >> 2] | 0) | 0 | 0, $2 + 12 | 0 | 0, $1 | 0) | 0;
  };
  global$0 = $2 + 16 | 0;
  return 0 | 0;
 }
 
 function _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_fmt__hb19c728ee20ec5c2($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2 = 0, i64toi32_i32$2 = 0, $14 = 0, $20 = 0, $23 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = HEAPU32[$0 >> 2] | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $1 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $14 = i64toi32_i32$0;
  i64toi32_i32$0 = ($2 + 8 | 0) + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $14;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $20 = i64toi32_i32$1;
  i64toi32_i32$1 = ($2 + 8 | 0) + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $20;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $23 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $23;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $1 = core__fmt__write__h3465a327d1942227($2 + 4 | 0 | 0, 1055924 | 0, $2 + 8 | 0 | 0) | 0;
  global$0 = $2 + 32 | 0;
  return $1 | 0;
 }
 
 function _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h6c2e567cc2a6f614($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $0 = HEAPU32[$0 >> 2] | 0;
  _$LT$alloc__vec__Vec$LT$T$GT$$GT$__reserve__hcbd52a8f1aa1b52c($0 | 0, $2 | 0);
  $3 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $3 + $2 | 0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  memcpy($3 + (HEAPU32[$0 >> 2] | 0) | 0 | 0, $1 | 0, $2 | 0) | 0;
  return 0 | 0;
 }
 
 function _$LT$std__thread__local__AccessError$u20$as$u20$core__fmt__Debug$GT$__fmt__h26e62422f259761f($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  core__fmt__Formatter__debug_struct__h99bead24adeef970($2 + 8 | 0 | 0, $1 | 0, 1050772 | 0, 11 | 0);
  $1 = core__fmt__builders__DebugStruct__finish__h4920cf4e0e2fee43($2 + 8 | 0 | 0) | 0;
  global$0 = $2 + 16 | 0;
  return $1 | 0;
 }
 
 function std__panicking__begin_panic_fmt__h431a7a5c1376ac58($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $20 = 0, $27 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  core__panic__Location__internal_constructor__he79d11ef9249e7b4($2 + 32 | 0 | 0, HEAPU32[$1 >> 2] | 0 | 0, HEAPU32[($1 + 4 | 0) >> 2] | 0 | 0, HEAPU32[($1 + 8 | 0) >> 2] | 0 | 0, HEAPU32[($1 + 12 | 0) >> 2] | 0 | 0);
  i64toi32_i32$2 = $2 + 40 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $20 = i64toi32_i32$0;
  i64toi32_i32$0 = $2 + 20 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $20;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1055948;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050712;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = HEAPU32[($2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 39 | 0) >> 0] | 0 | 0) << 24);
  $27 = i64toi32_i32$1;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $27;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 16 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 17 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 18 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 19 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  std__panicking__continue_panic_fmt__hb7c25615e3c5a85b($2 | 0);
  abort();
 }
 
 function std__process__abort__heae80e1b76a2b660() {
  abort();
 }
 
 function std__alloc__default_alloc_error_hook__hed7c9e5f3e0de885($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
 }
 
 function rust_oom($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2 = HEAPU32[(0 + 1058096 | 0) >> 2] | 0;
  wasm2js_i32$1 = $0;
  wasm2js_i32$2 = $1;
  wasm2js_i32$0 = (wasm2js_i32$3 = $2, wasm2js_i32$4 = 25, wasm2js_i32$5 = $2, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4);
  FUNCTION_TABLE_vii[wasm2js_i32$0 & 63](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
  abort();
 }
 
 function __rdl_alloc($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   if ((dlmalloc__dlmalloc__Dlmalloc__malloc_alignment__h2a1920477381324b(1058144 | 0) | 0) >>> 0 >= $1 >>> 0) break label$1;
   return dlmalloc__dlmalloc__Dlmalloc__memalign__hfa1a5979a71318f2(1058144 | 0, $1 | 0, $0 | 0) | 0 | 0;
  };
  return dlmalloc__dlmalloc__Dlmalloc__malloc__hf9d67685332ad6ea(1058144 | 0, $0 | 0) | 0 | 0;
 }
 
 function __rdl_dealloc($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  dlmalloc__dlmalloc__Dlmalloc__free__h95d9e0deceb71257(1058144 | 0, $0 | 0);
 }
 
 function __rdl_realloc($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      if ((dlmalloc__dlmalloc__Dlmalloc__malloc_alignment__h2a1920477381324b(1058144 | 0) | 0) >>> 0 >= $2 >>> 0) break label$4;
      if ((dlmalloc__dlmalloc__Dlmalloc__malloc_alignment__h2a1920477381324b(1058144 | 0) | 0) >>> 0 >= $2 >>> 0) break label$3;
      $2 = dlmalloc__dlmalloc__Dlmalloc__memalign__hfa1a5979a71318f2(1058144 | 0, $2 | 0, $3 | 0) | 0;
      if (($2 | 0) == (0 | 0)) break label$2;
      break label$1;
     };
     return dlmalloc__dlmalloc__Dlmalloc__realloc__h8da402073da6bc06(1058144 | 0, $0 | 0, $3 | 0) | 0 | 0;
    };
    $2 = dlmalloc__dlmalloc__Dlmalloc__malloc__hf9d67685332ad6ea(1058144 | 0, $3 | 0) | 0;
    if ($2) break label$1;
   };
   return 0 | 0;
  };
  $2 = memcpy($2 | 0, $0 | 0, (wasm2js_i32$0 = $3, wasm2js_i32$1 = $1, wasm2js_i32$2 = $1 >>> 0 > $3 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0) | 0;
  dlmalloc__dlmalloc__Dlmalloc__free__h95d9e0deceb71257(1058144 | 0, $0 | 0);
  return $2 | 0;
 }
 
 function __rdl_alloc_zeroed($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     if ((dlmalloc__dlmalloc__Dlmalloc__malloc_alignment__h2a1920477381324b(1058144 | 0) | 0) >>> 0 >= $1 >>> 0) break label$3;
     $1 = dlmalloc__dlmalloc__Dlmalloc__memalign__hfa1a5979a71318f2(1058144 | 0, $1 | 0, $0 | 0) | 0;
     if ($1) break label$2;
     break label$1;
    };
    $1 = dlmalloc__dlmalloc__Dlmalloc__malloc__hf9d67685332ad6ea(1058144 | 0, $0 | 0) | 0;
    if (($1 | 0) == (0 | 0)) break label$1;
   };
   if ((dlmalloc__dlmalloc__Dlmalloc__calloc_must_clear__hcaabc64eb1c80ae0(1058144 | 0, $1 | 0) | 0 | 0) == (0 | 0)) break label$1;
   memset($1 | 0, 0 | 0, $0 | 0) | 0;
  };
  return $1 | 0;
 }
 
 function rust_begin_unwind($0) {
  $0 = $0 | 0;
  std__panicking__continue_panic_fmt__hb7c25615e3c5a85b($0 | 0);
  abort();
 }
 
 function std__panicking__continue_panic_fmt__hb7c25615e3c5a85b($0) {
  $0 = $0 | 0;
  var $1 = 0, i64toi32_i32$1 = 0, $2 = 0, i64toi32_i32$0 = 0, $3 = 0, $4 = 0, $25 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 48 | 0;
  global$0 = $1;
  $2 = _$LT$core__option__Option$LT$T$GT$$GT$__unwrap__h62cbe44667e1e759(core__panic__PanicInfo__location__h25db22b6d7930a49($0 | 0) | 0 | 0) | 0;
  $3 = _$LT$core__option__Option$LT$T$GT$$GT$__unwrap__hced4f326c258bfa9(core__panic__PanicInfo__message__h62e60153ff810ddd($0 | 0) | 0 | 0) | 0;
  core__panic__Location__file__h1644370c8c36f000($1 + 8 | 0 | 0, $2 | 0);
  i64toi32_i32$0 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $1, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  $4 = core__panic__Location__line__h0de6bf199e5baf47($2 | 0) | 0;
  $2 = core__panic__Location__column__hedd38315197305fe($2 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  $25 = i64toi32_i32$0;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $25;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  std__panicking__rust_panic_with_hook__hef258360d235bb02($1 + 32 | 0 | 0, 1055964 | 0, core__panic__PanicInfo__message__h62e60153ff810ddd($0 | 0) | 0 | 0, $1 + 16 | 0 | 0);
  abort();
 }
 
 function std__panicking__rust_panic_with_hook__hef258360d235bb02($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$2 = 0, $6 = 0, $7 = 0, $8 = 0, $37 = 0, $44 = 0, $62 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $4 = global$0 - 64 | 0;
  global$0 = $4;
  $5 = 1;
  $6 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
  $7 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
  $8 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
  $3 = HEAPU32[$3 >> 2] | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      if ((HEAPU32[(0 + 1058136 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$4;
      $5 = (HEAPU32[(0 + 1058140 | 0) >> 2] | 0) + 1 | 0;
      wasm2js_i32$0 = 0;
      wasm2js_i32$1 = $5;
      HEAP32[(wasm2js_i32$0 + 1058140 | 0) >> 2] = wasm2js_i32$1;
      if ($5 >>> 0 < 3 >>> 0) break label$3;
      break label$2;
     };
     i64toi32_i32$1 = 0;
     i64toi32_i32$0 = 1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = 1;
     HEAP32[(wasm2js_i32$0 + 1058136 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = i64toi32_i32$1;
     wasm2js_i32$1 = i64toi32_i32$0;
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 1058140 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 1058141 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 1058142 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 1058143 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    };
    core__panic__Location__internal_constructor__he79d11ef9249e7b4($4 + 48 | 0 | 0, $3 | 0, $8 | 0, $7 | 0, $6 | 0);
    i64toi32_i32$2 = $4 + 56 | 0;
    i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
    $37 = i64toi32_i32$0;
    i64toi32_i32$0 = $4 + 36 | 0;
    i64toi32_i32$1 = i64toi32_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = $37;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = i64toi32_i32$0;
    wasm2js_i32$1 = i64toi32_i32$1;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = 1055948;
    HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = 1050712;
    HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $2;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    i64toi32_i32$2 = $4;
    i64toi32_i32$1 = HEAPU32[($4 + 48 | 0) >> 2] | 0;
    i64toi32_i32$0 = (wasm2js_i32$0 = $4, HEAPU8[(wasm2js_i32$0 + 52 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 53 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 54 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 55 | 0) >> 0] | 0 | 0) << 24);
    $44 = i64toi32_i32$1;
    i64toi32_i32$1 = $4;
    i64toi32_i32$0 = i64toi32_i32$0;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $44;
    HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = i64toi32_i32$0;
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 32 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 33 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 34 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 35 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
    $3 = HEAPU32[(0 + 1058100 | 0) >> 2] | 0;
    if (($3 | 0) <= (4294967295 | 0)) break label$2;
    $3 = $3 + 1 | 0;
    wasm2js_i32$0 = 0;
    wasm2js_i32$1 = $3;
    HEAP32[(wasm2js_i32$0 + 1058100 | 0) >> 2] = wasm2js_i32$1;
    label$5 : {
     $2 = HEAPU32[(0 + 1058108 | 0) >> 2] | 0;
     if (($2 | 0) == (0 | 0)) break label$5;
     $3 = HEAPU32[(0 + 1058104 | 0) >> 2] | 0;
     wasm2js_i32$1 = $4 + 8 | 0;
     wasm2js_i32$2 = $0;
     wasm2js_i32$0 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
     FUNCTION_TABLE_vii[wasm2js_i32$0 & 63](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0);
     i64toi32_i32$2 = $4;
     i64toi32_i32$0 = HEAPU32[($4 + 8 | 0) >> 2] | 0;
     i64toi32_i32$1 = (wasm2js_i32$0 = $4, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
     $62 = i64toi32_i32$0;
     i64toi32_i32$0 = $4;
     i64toi32_i32$1 = i64toi32_i32$1;
     wasm2js_i32$0 = $4;
     wasm2js_i32$2 = $62;
     HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$2;
     wasm2js_i32$0 = $4;
     wasm2js_i32$2 = i64toi32_i32$1;
     (wasm2js_i32$1 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$1 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$1 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$1 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$1 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
     wasm2js_i32$2 = $3;
     wasm2js_i32$1 = $4 + 16 | 0;
     wasm2js_i32$0 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
     FUNCTION_TABLE_vii[wasm2js_i32$0 & 63](wasm2js_i32$2 | 0, wasm2js_i32$1 | 0);
     $3 = HEAPU32[(0 + 1058100 | 0) >> 2] | 0;
    };
    wasm2js_i32$0 = 0;
    wasm2js_i32$1 = $3 + 4294967295 | 0;
    HEAP32[(wasm2js_i32$0 + 1058100 | 0) >> 2] = wasm2js_i32$1;
    if ($5 >>> 0 < 2 >>> 0) break label$1;
   };
   abort();
  };
  rust_panic($0 | 0, $1 | 0);
  abort();
 }
 
 function _$LT$std__panicking__continue_panic_fmt__PanicPayload$LT$$u27$a$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h246cd90675910d9f($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, $2 = 0, i64toi32_i32$1 = 0, $3 = 0, i64toi32_i32$2 = 0, $4 = 0, $5 = 0, $6 = 0, $25 = 0, $32 = 0, $35 = 0, $46 = 0, $62 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  label$1 : {
   $3 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
   if ($3) break label$1;
   $3 = HEAPU32[$1 >> 2] | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 1;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $2 + 8 | 0;
   HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $3 + 16 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $25 = i64toi32_i32$0;
   i64toi32_i32$0 = ($2 + 24 | 0) + 16 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $25;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $4 = ($2 + 24 | 0) + 8 | 0;
   i64toi32_i32$2 = $3 + 8 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $32 = i64toi32_i32$1;
   i64toi32_i32$1 = $4;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $32;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $3;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $35 = i64toi32_i32$0;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $35;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   core__fmt__write__h3465a327d1942227($2 + 20 | 0 | 0, 1055924 | 0, $2 + 24 | 0 | 0) | 0;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $46 = i64toi32_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $46;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   label$2 : {
    $3 = $1 + 4 | 0;
    $5 = HEAPU32[$3 >> 2] | 0;
    if (($5 | 0) == (0 | 0)) break label$2;
    $6 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
    if (($6 | 0) == (0 | 0)) break label$2;
    __rust_dealloc($5 | 0, $6 | 0, 1 | 0);
   };
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[($2 + 24 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
   $62 = i64toi32_i32$0;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $62;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[$4 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $3 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
  };
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  $4 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
  $1 = $1 + 8 | 0;
  $5 = HEAPU32[$1 >> 2] | 0;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = 0;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  label$3 : {
   $1 = __rust_alloc(12 | 0, 4 | 0) | 0;
   if (($1 | 0) == (0 | 0)) break label$3;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $4;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $5;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = 1055984;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   global$0 = $2 + 48 | 0;
   return;
  };
  alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618(12 | 0, 4 | 0);
  abort();
 }
 
 function _$LT$std__panicking__continue_panic_fmt__PanicPayload$LT$$u27$a$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__get__h6f2dc01b942731bd($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $4 = 0, $3 = 0, $5 = 0, $25 = 0, $32 = 0, $35 = 0, $46 = 0, $60 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  $3 = $1 + 4 | 0;
  label$1 : {
   if (HEAPU32[($1 + 4 | 0) >> 2] | 0) break label$1;
   $4 = HEAPU32[$1 >> 2] | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 0;
   HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = 1;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $2 + 8 | 0;
   HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $4 + 16 | 0;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $25 = i64toi32_i32$0;
   i64toi32_i32$0 = ($2 + 24 | 0) + 16 | 0;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $25;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   $5 = ($2 + 24 | 0) + 8 | 0;
   i64toi32_i32$2 = $4 + 8 | 0;
   i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $32 = i64toi32_i32$1;
   i64toi32_i32$1 = $5;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = $32;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$1;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$2 = $4;
   i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
   $35 = i64toi32_i32$0;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $35;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   core__fmt__write__h3465a327d1942227($2 + 20 | 0 | 0, 1055924 | 0, $2 + 24 | 0 | 0) | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
   i64toi32_i32$0 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
   $46 = i64toi32_i32$1;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = i64toi32_i32$0;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = $46;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $2;
   wasm2js_i32$1 = i64toi32_i32$0;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   label$2 : {
    $4 = HEAPU32[$3 >> 2] | 0;
    if (($4 | 0) == (0 | 0)) break label$2;
    $1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
    if (($1 | 0) == (0 | 0)) break label$2;
    __rust_dealloc($4 | 0, $1 | 0, 1 | 0);
   };
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = HEAPU32[($2 + 24 | 0) >> 2] | 0;
   i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 28 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 29 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 30 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 31 | 0) >> 0] | 0 | 0) << 24);
   $60 = i64toi32_i32$0;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = i64toi32_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = $60;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = i64toi32_i32$0;
   wasm2js_i32$1 = i64toi32_i32$1;
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
   wasm2js_i32$0 = i64toi32_i32$0 + 8 | 0;
   wasm2js_i32$1 = HEAPU32[$5 >> 2] | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 1055984;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $3;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  global$0 = $2 + 48 | 0;
 }
 
 function rust_panic($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  __rust_start_panic($2 + 8 | 0 | 0) | 0;
  abort();
 }
 
 function std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7() {
  return 1058112 | 0;
 }
 
 function std__sys__wasm__hashmap_random_keys__haca36b8afa59d926($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  i64toi32_i32$1 = $0;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = 2;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$0 = 0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
 }
 
 function __rust_start_panic($0) {
  $0 = $0 | 0;
  return abort() | 0;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__malloc_alignment__h2a1920477381324b($0) {
  $0 = $0 | 0;
  return 8 | 0;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__calloc_must_clear__hcaabc64eb1c80ae0($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return ((HEAPU8[($1 + 4294967292 | 0) >> 0] | 0) & 3 | 0 | 0) != (0 | 0) | 0;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__malloc__hf9d67685332ad6ea($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $3 = 0, $6 = 0, $9 = 0, $2 = 0, $8 = 0, $10 = 0, $7 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $155 = 0, $609 = 0, $620 = 0, $662 = 0, $11 = 0, $11$hi = 0, $830 = 0, $967 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               label$14 : {
                label$15 : {
                 label$16 : {
                  label$17 : {
                   label$18 : {
                    label$19 : {
                     label$20 : {
                      label$21 : {
                       label$22 : {
                        label$23 : {
                         label$24 : {
                          label$25 : {
                           label$26 : {
                            label$27 : {
                             label$28 : {
                              label$29 : {
                               label$30 : {
                                label$31 : {
                                 label$32 : {
                                  label$33 : {
                                   label$34 : {
                                    label$35 : {
                                     label$36 : {
                                      label$37 : {
                                       if ($1 >>> 0 > 244 >>> 0) break label$37;
                                       $2 = HEAPU32[$0 >> 2] | 0;
                                       $3 = (wasm2js_i32$0 = 16, wasm2js_i32$1 = ($1 + 11 | 0) & 4294967288 | 0, wasm2js_i32$2 = $1 >>> 0 < 11 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                                       $4 = $3 >>> 3 | 0;
                                       $5 = $4 & 31 | 0;
                                       $1 = $2 >>> $5 | 0;
                                       if (($1 & 3 | 0 | 0) == (0 | 0)) break label$36;
                                       $3 = (($1 ^ 4294967295 | 0) & 1 | 0) + $4 | 0;
                                       $5 = $0 + ($3 << 3 | 0) | 0;
                                       $1 = HEAPU32[($5 + 16 | 0) >> 2] | 0;
                                       $6 = $1 + 8 | 0;
                                       $4 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
                                       $5 = $5 + 8 | 0;
                                       if (($4 | 0) == ($5 | 0)) break label$35;
                                       wasm2js_i32$0 = $4;
                                       wasm2js_i32$1 = $5;
                                       HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
                                       wasm2js_i32$0 = $5 + 8 | 0;
                                       wasm2js_i32$1 = $4;
                                       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                                       break label$34;
                                      };
                                      $2 = 0;
                                      if ($1 >>> 0 >= 4294967232 >>> 0) break label$8;
                                      $1 = $1 + 11 | 0;
                                      $3 = $1 & 4294967288 | 0;
                                      $7 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
                                      if (($7 | 0) == (0 | 0)) break label$27;
                                      $8 = 0;
                                      label$38 : {
                                       $1 = $1 >>> 8 | 0;
                                       if (($1 | 0) == (0 | 0)) break label$38;
                                       $8 = 31;
                                       if ($3 >>> 0 > 16777215 >>> 0) break label$38;
                                       $1 = Math_clz32($1);
                                       $8 = ($3 >>> ((38 - $1 | 0) & 31 | 0) | 0) & 1 | 0 | ((31 - $1 | 0) << 1 | 0) | 0;
                                      };
                                      $4 = 0 - $3 | 0;
                                      $1 = HEAPU32[(($0 + ($8 << 2 | 0) | 0) + 272 | 0) >> 2] | 0;
                                      if (($1 | 0) == (0 | 0)) break label$30;
                                      $5 = 0;
                                      $2 = $3 << (wasm2js_i32$0 = 0, wasm2js_i32$1 = (25 - ($8 >>> 1 | 0) | 0) & 31 | 0, wasm2js_i32$2 = ($8 | 0) == (31 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0;
                                      $6 = 0;
                                      label$39 : do {
                                       label$40 : {
                                        $9 = (HEAPU32[($1 + 4 | 0) >> 2] | 0) & 4294967288 | 0;
                                        if ($9 >>> 0 < $3 >>> 0) break label$40;
                                        $9 = $9 - $3 | 0;
                                        if ($9 >>> 0 >= $4 >>> 0) break label$40;
                                        $4 = $9;
                                        $6 = $1;
                                        if (($4 | 0) == (0 | 0)) break label$32;
                                       };
                                       $9 = HEAPU32[($1 + 20 | 0) >> 2] | 0;
                                       $1 = HEAPU32[(($1 + (($2 >>> 29 | 0) & 4 | 0) | 0) + 16 | 0) >> 2] | 0;
                                       $5 = (wasm2js_i32$0 = (wasm2js_i32$3 = $9, wasm2js_i32$4 = $5, wasm2js_i32$5 = ($9 | 0) != ($1 | 0), wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = $5, wasm2js_i32$2 = $9, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                                       $2 = $2 << 1 | 0;
                                       if ($1) continue label$39;
                                       break label$39;
                                      } while (1);
                                      if (($5 | 0) == (0 | 0)) break label$31;
                                      $1 = $5;
                                      break label$29;
                                     };
                                     if ($3 >>> 0 <= (HEAPU32[($0 + 400 | 0) >> 2] | 0) >>> 0) break label$27;
                                     if (($1 | 0) == (0 | 0)) break label$33;
                                     $155 = $1 << $5 | 0;
                                     $1 = 2 << $5 | 0;
                                     $1 = $155 & ($1 | (0 - $1 | 0) | 0) | 0;
                                     $4 = __wasm_ctz_i32($1 & (0 - $1 | 0) | 0 | 0) | 0;
                                     $6 = $0 + ($4 << 3 | 0) | 0;
                                     $1 = HEAPU32[($6 + 16 | 0) >> 2] | 0;
                                     $5 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
                                     $6 = $6 + 8 | 0;
                                     if (($5 | 0) == ($6 | 0)) break label$25;
                                     wasm2js_i32$0 = $5;
                                     wasm2js_i32$1 = $6;
                                     HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
                                     wasm2js_i32$0 = $6 + 8 | 0;
                                     wasm2js_i32$1 = $5;
                                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                                     break label$24;
                                    };
                                    wasm2js_i32$0 = $0;
                                    wasm2js_i32$1 = $2 & (__wasm_rotl_i32(4294967294 | 0, $3 | 0) | 0) | 0;
                                    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                                   };
                                   $3 = $3 << 3 | 0;
                                   wasm2js_i32$0 = $1;
                                   wasm2js_i32$1 = $3 | 3 | 0;
                                   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                                   $1 = $1 + $3 | 0;
                                   wasm2js_i32$0 = $1;
                                   wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0 | 1 | 0;
                                   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                                   return $6 | 0;
                                  };
                                  $1 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
                                  if (($1 | 0) == (0 | 0)) break label$27;
                                  $2 = HEAPU32[(($0 + ((__wasm_ctz_i32($1 & (0 - $1 | 0) | 0 | 0) | 0) << 2 | 0) | 0) + 272 | 0) >> 2] | 0;
                                  $4 = ((HEAPU32[($2 + 4 | 0) >> 2] | 0) & 4294967288 | 0) - $3 | 0;
                                  $5 = $2;
                                  $1 = HEAPU32[($5 + 16 | 0) >> 2] | 0;
                                  if (($1 | 0) == (0 | 0)) break label$12;
                                  $10 = 0;
                                  break label$11;
                                 };
                                 $4 = 0;
                                 $6 = $1;
                                 break label$29;
                                };
                                if ($6) break label$28;
                               };
                               $6 = 0;
                               $1 = 2 << ($8 & 31 | 0) | 0;
                               $1 = ($1 | (0 - $1 | 0) | 0) & $7 | 0;
                               if (($1 | 0) == (0 | 0)) break label$27;
                               $1 = HEAPU32[(($0 + ((__wasm_ctz_i32($1 & (0 - $1 | 0) | 0 | 0) | 0) << 2 | 0) | 0) + 272 | 0) >> 2] | 0;
                               if (($1 | 0) == (0 | 0)) break label$27;
                              };
                              label$41 : do {
                               $5 = (HEAPU32[($1 + 4 | 0) >> 2] | 0) & 4294967288 | 0;
                               $9 = $5 - $3 | 0;
                               $2 = $5 >>> 0 >= $3 >>> 0 & $9 >>> 0 < $4 >>> 0 | 0;
                               label$42 : {
                                $5 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
                                if ($5) break label$42;
                                $5 = HEAPU32[($1 + 20 | 0) >> 2] | 0;
                               };
                               $6 = (wasm2js_i32$0 = $1, wasm2js_i32$1 = $6, wasm2js_i32$2 = $2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                               $4 = (wasm2js_i32$0 = $9, wasm2js_i32$1 = $4, wasm2js_i32$2 = $2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                               $1 = $5;
                               if ($1) continue label$41;
                               break label$41;
                              } while (1);
                              if (($6 | 0) == (0 | 0)) break label$27;
                             };
                             $1 = HEAPU32[($0 + 400 | 0) >> 2] | 0;
                             if ($1 >>> 0 < $3 >>> 0) break label$26;
                             if ($4 >>> 0 < ($1 - $3 | 0) >>> 0) break label$26;
                            };
                            label$43 : {
                             label$44 : {
                              label$45 : {
                               label$46 : {
                                $4 = HEAPU32[($0 + 400 | 0) >> 2] | 0;
                                if ($4 >>> 0 >= $3 >>> 0) break label$46;
                                $1 = HEAPU32[($0 + 404 | 0) >> 2] | 0;
                                if ($1 >>> 0 <= $3 >>> 0) break label$45;
                                $4 = $1 - $3 | 0;
                                wasm2js_i32$0 = $0 + 404 | 0;
                                wasm2js_i32$1 = $4;
                                HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                                $1 = HEAPU32[($0 + 412 | 0) >> 2] | 0;
                                $5 = $1 + $3 | 0;
                                wasm2js_i32$0 = $0;
                                wasm2js_i32$1 = $5;
                                HEAP32[(wasm2js_i32$0 + 412 | 0) >> 2] = wasm2js_i32$1;
                                wasm2js_i32$0 = $5;
                                wasm2js_i32$1 = $4 | 1 | 0;
                                HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                                wasm2js_i32$0 = $1;
                                wasm2js_i32$1 = $3 | 3 | 0;
                                HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                                return $1 + 8 | 0 | 0;
                               };
                               $1 = HEAPU32[($0 + 408 | 0) >> 2] | 0;
                               $5 = $4 - $3 | 0;
                               if ($5 >>> 0 >= 16 >>> 0) break label$44;
                               wasm2js_i32$0 = $0 + 408 | 0;
                               wasm2js_i32$1 = 0;
                               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                               wasm2js_i32$0 = $0 + 400 | 0;
                               wasm2js_i32$1 = 0;
                               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                               wasm2js_i32$0 = $1;
                               wasm2js_i32$1 = $4 | 3 | 0;
                               HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                               $4 = $1 + $4 | 0;
                               $3 = $4 + 4 | 0;
                               $4 = HEAPU32[($4 + 4 | 0) >> 2] | 0 | 1 | 0;
                               break label$43;
                              };
                              $2 = 0;
                              $4 = $3 + 65583 | 0;
                              $1 = __wasm_grow_memory($4 >>> 16 | 0 | 0);
                              if (($1 | 0) == (4294967295 | 0)) break label$8;
                              $6 = $1 << 16 | 0;
                              if (($6 | 0) == (0 | 0)) break label$8;
                              $8 = $4 & 4294901760 | 0;
                              $1 = (HEAPU32[($0 + 416 | 0) >> 2] | 0) + $8 | 0;
                              wasm2js_i32$0 = $0;
                              wasm2js_i32$1 = $1;
                              HEAP32[(wasm2js_i32$0 + 416 | 0) >> 2] = wasm2js_i32$1;
                              $4 = HEAPU32[($0 + 420 | 0) >> 2] | 0;
                              wasm2js_i32$0 = $0;
                              wasm2js_i32$1 = (wasm2js_i32$2 = $4, wasm2js_i32$3 = $1, wasm2js_i32$4 = $1 >>> 0 < $4 >>> 0, wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3);
                              HEAP32[(wasm2js_i32$0 + 420 | 0) >> 2] = wasm2js_i32$1;
                              $4 = HEAPU32[($0 + 412 | 0) >> 2] | 0;
                              if (($4 | 0) == (0 | 0)) break label$19;
                              $7 = $0 + 424 | 0;
                              $1 = $7;
                              label$47 : do {
                               $5 = HEAPU32[$1 >> 2] | 0;
                               $9 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
                               if (($5 + $9 | 0 | 0) == ($6 | 0)) break label$18;
                               $1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
                               if ($1) continue label$47;
                               break label$10;
                               break label$47;
                              } while (1);
                             };
                             wasm2js_i32$0 = $0 + 400 | 0;
                             wasm2js_i32$1 = $5;
                             HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                             $2 = $1 + $3 | 0;
                             wasm2js_i32$0 = $0 + 408 | 0;
                             wasm2js_i32$1 = $2;
                             HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                             wasm2js_i32$0 = $2;
                             wasm2js_i32$1 = $5 | 1 | 0;
                             HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                             wasm2js_i32$0 = $1 + $4 | 0;
                             wasm2js_i32$1 = $5;
                             HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                             $4 = $3 | 3 | 0;
                             $3 = $1 + 4 | 0;
                            };
                            wasm2js_i32$0 = $3;
                            wasm2js_i32$1 = $4;
                            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                            return $1 + 8 | 0 | 0;
                           };
                           dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $6 | 0);
                           if ($4 >>> 0 > 15 >>> 0) break label$23;
                           $1 = $4 + $3 | 0;
                           wasm2js_i32$0 = $6;
                           wasm2js_i32$1 = $1 | 3 | 0;
                           HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                           $1 = $6 + $1 | 0;
                           wasm2js_i32$0 = $1;
                           wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0 | 1 | 0;
                           HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                           break label$13;
                          };
                          wasm2js_i32$0 = $0;
                          wasm2js_i32$1 = $2 & (__wasm_rotl_i32(4294967294 | 0, $4 | 0) | 0) | 0;
                          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                         };
                         $5 = $1 + 8 | 0;
                         wasm2js_i32$0 = $1;
                         wasm2js_i32$1 = $3 | 3 | 0;
                         HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                         $2 = $1 + $3 | 0;
                         $4 = $4 << 3 | 0;
                         $3 = $4 - $3 | 0;
                         wasm2js_i32$0 = $2;
                         wasm2js_i32$1 = $3 | 1 | 0;
                         HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                         wasm2js_i32$0 = $1 + $4 | 0;
                         wasm2js_i32$1 = $3;
                         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                         $6 = $0 + 400 | 0;
                         $1 = HEAPU32[$6 >> 2] | 0;
                         if (($1 | 0) == (0 | 0)) break label$20;
                         $9 = $1 >>> 3 | 0;
                         $4 = ($0 + ($9 << 3 | 0) | 0) + 8 | 0;
                         $1 = HEAPU32[($0 + 408 | 0) >> 2] | 0;
                         $8 = HEAPU32[$0 >> 2] | 0;
                         $9 = 1 << ($9 & 31 | 0) | 0;
                         if (($8 & $9 | 0 | 0) == (0 | 0)) break label$22;
                         $9 = HEAPU32[($4 + 8 | 0) >> 2] | 0;
                         break label$21;
                        };
                        wasm2js_i32$0 = $6;
                        wasm2js_i32$1 = $3 | 3 | 0;
                        HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                        $1 = $6 + $3 | 0;
                        wasm2js_i32$0 = $1;
                        wasm2js_i32$1 = $4 | 1 | 0;
                        HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                        wasm2js_i32$0 = $1 + $4 | 0;
                        wasm2js_i32$1 = $4;
                        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                        if ($4 >>> 0 > 255 >>> 0) break label$17;
                        $4 = $4 >>> 3 | 0;
                        $3 = ($0 + ($4 << 3 | 0) | 0) + 8 | 0;
                        $5 = HEAPU32[$0 >> 2] | 0;
                        $4 = 1 << ($4 & 31 | 0) | 0;
                        if (($5 & $4 | 0 | 0) == (0 | 0)) break label$15;
                        $5 = $3 + 8 | 0;
                        $4 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
                        break label$14;
                       };
                       wasm2js_i32$0 = $0;
                       wasm2js_i32$1 = $8 | $9 | 0;
                       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                       $9 = $4;
                      };
                      wasm2js_i32$0 = $4 + 8 | 0;
                      wasm2js_i32$1 = $1;
                      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                      wasm2js_i32$0 = $9;
                      wasm2js_i32$1 = $1;
                      HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
                      wasm2js_i32$0 = $1;
                      wasm2js_i32$1 = $4;
                      HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
                      wasm2js_i32$0 = $1;
                      wasm2js_i32$1 = $9;
                      HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
                     };
                     wasm2js_i32$0 = $0 + 408 | 0;
                     wasm2js_i32$1 = $2;
                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                     wasm2js_i32$0 = $6;
                     wasm2js_i32$1 = $3;
                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                     return $5 | 0;
                    };
                    label$48 : {
                     label$49 : {
                      $1 = HEAPU32[($0 + 444 | 0) >> 2] | 0;
                      if (($1 | 0) == (0 | 0)) break label$49;
                      if ($1 >>> 0 <= $6 >>> 0) break label$48;
                     };
                     wasm2js_i32$0 = $0 + 444 | 0;
                     wasm2js_i32$1 = $6;
                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                    };
                    wasm2js_i32$0 = $0;
                    wasm2js_i32$1 = $6;
                    HEAP32[(wasm2js_i32$0 + 424 | 0) >> 2] = wasm2js_i32$1;
                    wasm2js_i32$0 = $0;
                    wasm2js_i32$1 = 4095;
                    HEAP32[(wasm2js_i32$0 + 448 | 0) >> 2] = wasm2js_i32$1;
                    wasm2js_i32$0 = $0 + 428 | 0;
                    wasm2js_i32$1 = $8;
                    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                    $1 = 0;
                    wasm2js_i32$0 = $0 + 436 | 0;
                    wasm2js_i32$1 = 0;
                    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                    label$50 : do {
                     $4 = $0 + $1 | 0;
                     $5 = $4 + 8 | 0;
                     wasm2js_i32$0 = $4 + 16 | 0;
                     wasm2js_i32$1 = $5;
                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                     wasm2js_i32$0 = $4 + 20 | 0;
                     wasm2js_i32$1 = $5;
                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                     $1 = $1 + 8 | 0;
                     if (($1 | 0) != (256 | 0)) continue label$50;
                     break label$50;
                    } while (1);
                    $1 = $8 + 4294967256 | 0;
                    wasm2js_i32$0 = $0 + 404 | 0;
                    wasm2js_i32$1 = $1;
                    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                    wasm2js_i32$0 = $0 + 412 | 0;
                    wasm2js_i32$1 = $6;
                    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                    wasm2js_i32$0 = $6;
                    wasm2js_i32$1 = $1 | 1 | 0;
                    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                    wasm2js_i32$0 = $6 + $1 | 0;
                    wasm2js_i32$1 = 40;
                    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                    wasm2js_i32$0 = $0;
                    wasm2js_i32$1 = 2097152;
                    HEAP32[(wasm2js_i32$0 + 440 | 0) >> 2] = wasm2js_i32$1;
                    break label$9;
                   };
                   if ((HEAPU32[($1 + 12 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$16;
                   break label$10;
                  };
                  dlmalloc__dlmalloc__Dlmalloc__insert_large_chunk__he6f64d159c5de8fd($0 | 0, $1 | 0, $4 | 0);
                  break label$13;
                 };
                 if ($6 >>> 0 <= $4 >>> 0) break label$10;
                 if ($5 >>> 0 > $4 >>> 0) break label$10;
                 wasm2js_i32$0 = $1 + 4 | 0;
                 wasm2js_i32$1 = $9 + $8 | 0;
                 HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                 $1 = $0 + 412 | 0;
                 $609 = $1;
                 $1 = HEAPU32[$1 >> 2] | 0;
                 $4 = ($1 + 15 | 0) & 4294967288 | 0;
                 $5 = $4 + 4294967288 | 0;
                 wasm2js_i32$0 = $609;
                 wasm2js_i32$1 = $5;
                 HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                 $6 = $0 + 404 | 0;
                 $620 = $6;
                 $6 = (HEAPU32[$6 >> 2] | 0) + $8 | 0;
                 $4 = $6 + (($1 + 8 | 0) - $4 | 0) | 0;
                 wasm2js_i32$0 = $620;
                 wasm2js_i32$1 = $4;
                 HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                 wasm2js_i32$0 = $5;
                 wasm2js_i32$1 = $4 | 1 | 0;
                 HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                 wasm2js_i32$0 = $1 + $6 | 0;
                 wasm2js_i32$1 = 40;
                 HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                 wasm2js_i32$0 = $0;
                 wasm2js_i32$1 = 2097152;
                 HEAP32[(wasm2js_i32$0 + 440 | 0) >> 2] = wasm2js_i32$1;
                 break label$9;
                };
                wasm2js_i32$0 = $0;
                wasm2js_i32$1 = $5 | $4 | 0;
                HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                $5 = $3 + 8 | 0;
                $4 = $3;
               };
               wasm2js_i32$0 = $5;
               wasm2js_i32$1 = $1;
               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $4;
               wasm2js_i32$1 = $1;
               HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $1;
               wasm2js_i32$1 = $3;
               HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $1;
               wasm2js_i32$1 = $4;
               HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
              };
              $2 = $6 + 8 | 0;
              break label$8;
             };
             $10 = 1;
            };
            label$51 : do {
             label$52 : {
              label$53 : {
               label$54 : {
                label$55 : {
                 label$56 : {
                  label$57 : {
                   label$58 : {
                    label$59 : {
                     label$60 : {
                      label$61 : {
                       label$62 : {
                        label$63 : {
                         label$64 : {
                          label$65 : {
                           label$66 : {
                            label$67 : {
                             label$68 : {
                              label$69 : {
                               switch ($10 | 0) {
                               case 0:
                                break label$69;
                               case 1:
                                break label$68;
                               case 2:
                                break label$67;
                               case 3:
                                break label$65;
                               case 4:
                                break label$64;
                               case 5:
                                break label$63;
                               case 6:
                                break label$61;
                               case 7:
                                break label$60;
                               case 8:
                                break label$59;
                               case 9:
                                break label$62;
                               case 10:
                                break label$66;
                               default:
                                break label$66;
                               };
                              };
                              $2 = ((HEAPU32[($1 + 4 | 0) >> 2] | 0) & 4294967288 | 0) - $3 | 0;
                              $662 = $2;
                              $2 = $2 >>> 0 < $4 >>> 0;
                              $4 = (wasm2js_i32$0 = $662, wasm2js_i32$1 = $4, wasm2js_i32$2 = $2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                              $5 = (wasm2js_i32$0 = $1, wasm2js_i32$1 = $5, wasm2js_i32$2 = $2, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                              $2 = $1;
                              $1 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
                              if ($1) break label$58;
                              $10 = 1;
                              continue label$51;
                             };
                             $1 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
                             if ($1) break label$57;
                             $10 = 2;
                             continue label$51;
                            };
                            dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $5 | 0);
                            if ($4 >>> 0 >= 16 >>> 0) break label$56;
                            $10 = 10;
                            continue label$51;
                           };
                           $1 = $4 + $3 | 0;
                           wasm2js_i32$0 = $5;
                           wasm2js_i32$1 = $1 | 3 | 0;
                           HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                           $1 = $5 + $1 | 0;
                           wasm2js_i32$0 = $1;
                           wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0 | 1 | 0;
                           HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                           break label$52;
                          };
                          wasm2js_i32$0 = $5;
                          wasm2js_i32$1 = $3 | 3 | 0;
                          HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                          $3 = $5 + $3 | 0;
                          wasm2js_i32$0 = $3;
                          wasm2js_i32$1 = $4 | 1 | 0;
                          HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
                          wasm2js_i32$0 = $3 + $4 | 0;
                          wasm2js_i32$1 = $4;
                          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                          $6 = $0 + 400 | 0;
                          $1 = HEAPU32[$6 >> 2] | 0;
                          if (($1 | 0) == (0 | 0)) break label$55;
                          $10 = 4;
                          continue label$51;
                         };
                         $9 = $1 >>> 3 | 0;
                         $2 = ($0 + ($9 << 3 | 0) | 0) + 8 | 0;
                         $1 = HEAPU32[($0 + 408 | 0) >> 2] | 0;
                         $8 = HEAPU32[$0 >> 2] | 0;
                         $9 = 1 << ($9 & 31 | 0) | 0;
                         if (($8 & $9 | 0 | 0) == (0 | 0)) break label$54;
                         $10 = 5;
                         continue label$51;
                        };
                        $9 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
                        break label$53;
                       };
                       wasm2js_i32$0 = $0;
                       wasm2js_i32$1 = $8 | $9 | 0;
                       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                       $9 = $2;
                       $10 = 6;
                       continue label$51;
                      };
                      wasm2js_i32$0 = $2 + 8 | 0;
                      wasm2js_i32$1 = $1;
                      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                      wasm2js_i32$0 = $9;
                      wasm2js_i32$1 = $1;
                      HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
                      wasm2js_i32$0 = $1;
                      wasm2js_i32$1 = $2;
                      HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
                      wasm2js_i32$0 = $1;
                      wasm2js_i32$1 = $9;
                      HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
                      $10 = 7;
                      continue label$51;
                     };
                     wasm2js_i32$0 = $0 + 408 | 0;
                     wasm2js_i32$1 = $3;
                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                     wasm2js_i32$0 = $6;
                     wasm2js_i32$1 = $4;
                     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
                     $10 = 8;
                     continue label$51;
                    };
                    return $5 + 8 | 0 | 0;
                   };
                   $10 = 0;
                   continue label$51;
                  };
                  $10 = 0;
                  continue label$51;
                 };
                 $10 = 3;
                 continue label$51;
                };
                $10 = 7;
                continue label$51;
               };
               $10 = 9;
               continue label$51;
              };
              $10 = 6;
              continue label$51;
             };
             $10 = 8;
             continue label$51;
             break label$51;
            } while (1);
           };
           $1 = HEAPU32[($0 + 444 | 0) >> 2] | 0;
           wasm2js_i32$0 = $0;
           wasm2js_i32$1 = (wasm2js_i32$2 = $1, wasm2js_i32$3 = $6, wasm2js_i32$4 = $1 >>> 0 < $6 >>> 0, wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3);
           HEAP32[(wasm2js_i32$0 + 444 | 0) >> 2] = wasm2js_i32$1;
           $5 = $6 + $8 | 0;
           $1 = $7;
           label$70 : {
            label$71 : {
             label$72 : {
              label$73 : {
               label$74 : {
                label$75 : do {
                 if ((HEAPU32[$1 >> 2] | 0 | 0) == ($5 | 0)) break label$74;
                 $1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
                 if ($1) continue label$75;
                 break label$73;
                 break label$75;
                } while (1);
               };
               if ((HEAPU32[($1 + 12 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$72;
              };
              $1 = $7;
              label$76 : {
               label$77 : do {
                label$78 : {
                 $5 = HEAPU32[$1 >> 2] | 0;
                 if ($5 >>> 0 > $4 >>> 0) break label$78;
                 $5 = $5 + (HEAPU32[($1 + 4 | 0) >> 2] | 0) | 0;
                 if ($5 >>> 0 > $4 >>> 0) break label$76;
                };
                $1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
                continue label$77;
                break label$77;
               } while (1);
              };
              $1 = $8 + 4294967256 | 0;
              wasm2js_i32$0 = $0 + 404 | 0;
              wasm2js_i32$1 = $1;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $0 + 412 | 0;
              wasm2js_i32$1 = $6;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $6;
              wasm2js_i32$1 = $1 | 1 | 0;
              HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $6 + $1 | 0;
              wasm2js_i32$1 = 40;
              HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $0;
              wasm2js_i32$1 = 2097152;
              HEAP32[(wasm2js_i32$0 + 440 | 0) >> 2] = wasm2js_i32$1;
              $1 = (($5 + 4294967264 | 0) & 4294967288 | 0) + 4294967288 | 0;
              $9 = (wasm2js_i32$0 = $4, wasm2js_i32$1 = $1, wasm2js_i32$2 = $1 >>> 0 < ($4 + 16 | 0) >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
              wasm2js_i32$0 = $9;
              wasm2js_i32$1 = 27;
              HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
              i64toi32_i32$2 = $7;
              i64toi32_i32$0 = HEAPU32[$7 >> 2] | 0;
              i64toi32_i32$1 = (wasm2js_i32$0 = $7, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
              i64toi32_i32$1 = i64toi32_i32$1;
              $11 = i64toi32_i32$0;
              $11$hi = i64toi32_i32$1;
              i64toi32_i32$2 = $7 + 8 | 0;
              i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
              i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
              $830 = i64toi32_i32$1;
              i64toi32_i32$1 = $9 + 16 | 0;
              i64toi32_i32$0 = i64toi32_i32$0;
              wasm2js_i32$0 = i64toi32_i32$1;
              wasm2js_i32$1 = $830;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = i64toi32_i32$1;
              wasm2js_i32$1 = i64toi32_i32$0;
              (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
              i64toi32_i32$0 = $11$hi;
              i64toi32_i32$1 = $9;
              i64toi32_i32$0 = i64toi32_i32$0;
              wasm2js_i32$0 = $9;
              wasm2js_i32$1 = $11;
              HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $9;
              wasm2js_i32$1 = i64toi32_i32$0;
              (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
              wasm2js_i32$0 = $0 + 428 | 0;
              wasm2js_i32$1 = $8;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $0 + 424 | 0;
              wasm2js_i32$1 = $6;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $0 + 436 | 0;
              wasm2js_i32$1 = 0;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $0 + 432 | 0;
              wasm2js_i32$1 = $9 + 8 | 0;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              $1 = $9 + 28 | 0;
              label$79 : do {
               wasm2js_i32$0 = $1;
               wasm2js_i32$1 = 7;
               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               $1 = $1 + 4 | 0;
               if ($5 >>> 0 > $1 >>> 0) continue label$79;
               break label$79;
              } while (1);
              if (($9 | 0) == ($4 | 0)) break label$9;
              wasm2js_i32$0 = $9;
              wasm2js_i32$1 = (HEAPU32[($9 + 4 | 0) >> 2] | 0) & 4294967294 | 0;
              HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
              $1 = $9 - $4 | 0;
              wasm2js_i32$0 = $4;
              wasm2js_i32$1 = $1 | 1 | 0;
              HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
              wasm2js_i32$0 = $9;
              wasm2js_i32$1 = $1;
              HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
              label$80 : {
               if ($1 >>> 0 > 255 >>> 0) break label$80;
               $5 = $1 >>> 3 | 0;
               $1 = ($0 + ($5 << 3 | 0) | 0) + 8 | 0;
               $6 = HEAPU32[$0 >> 2] | 0;
               $5 = 1 << ($5 & 31 | 0) | 0;
               if (($6 & $5 | 0 | 0) == (0 | 0)) break label$71;
               $5 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
               break label$70;
              };
              dlmalloc__dlmalloc__Dlmalloc__insert_large_chunk__he6f64d159c5de8fd($0 | 0, $4 | 0, $1 | 0);
              break label$9;
             };
             wasm2js_i32$0 = $1;
             wasm2js_i32$1 = $6;
             HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
             wasm2js_i32$0 = $1;
             wasm2js_i32$1 = (HEAPU32[($1 + 4 | 0) >> 2] | 0) + $8 | 0;
             HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
             wasm2js_i32$0 = $6;
             wasm2js_i32$1 = $3 | 3 | 0;
             HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
             $1 = $6 + $3 | 0;
             $3 = ($5 - $6 | 0) - $3 | 0;
             $4 = $0 + 412 | 0;
             if ((HEAPU32[$4 >> 2] | 0 | 0) == ($5 | 0)) break label$7;
             if ((HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0) == ($5 | 0)) break label$6;
             $4 = HEAPU32[($5 + 4 | 0) >> 2] | 0;
             if (($4 & 3 | 0 | 0) != (1 | 0)) break label$2;
             $2 = $4 & 4294967288 | 0;
             if ($2 >>> 0 > 255 >>> 0) break label$5;
             $9 = HEAPU32[($5 + 12 | 0) >> 2] | 0;
             $8 = HEAPU32[($5 + 8 | 0) >> 2] | 0;
             if (($9 | 0) == ($8 | 0)) break label$4;
             wasm2js_i32$0 = $8;
             wasm2js_i32$1 = $9;
             HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
             wasm2js_i32$0 = $9;
             wasm2js_i32$1 = $8;
             HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
             break label$3;
            };
            wasm2js_i32$0 = $0;
            wasm2js_i32$1 = $6 | $5 | 0;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            $5 = $1;
           };
           wasm2js_i32$0 = $1 + 8 | 0;
           wasm2js_i32$1 = $4;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $5;
           wasm2js_i32$1 = $4;
           HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $4;
           wasm2js_i32$1 = $1;
           HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $4;
           wasm2js_i32$1 = $5;
           HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
          };
          $1 = $0 + 404 | 0;
          $4 = HEAPU32[$1 >> 2] | 0;
          if ($4 >>> 0 <= $3 >>> 0) break label$8;
          $4 = $4 - $3 | 0;
          wasm2js_i32$0 = $1;
          wasm2js_i32$1 = $4;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          $1 = $0 + 412 | 0;
          $967 = $1;
          $1 = HEAPU32[$1 >> 2] | 0;
          $5 = $1 + $3 | 0;
          wasm2js_i32$0 = $967;
          wasm2js_i32$1 = $5;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          wasm2js_i32$0 = $5;
          wasm2js_i32$1 = $4 | 1 | 0;
          HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
          wasm2js_i32$0 = $1;
          wasm2js_i32$1 = $3 | 3 | 0;
          HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
          return $1 + 8 | 0 | 0;
         };
         return $2 | 0;
        };
        wasm2js_i32$0 = $4;
        wasm2js_i32$1 = $1;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        $4 = $0 + 404 | 0;
        $3 = (HEAPU32[$4 >> 2] | 0) + $3 | 0;
        wasm2js_i32$0 = $4;
        wasm2js_i32$1 = $3;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = $1;
        wasm2js_i32$1 = $3 | 1 | 0;
        HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
        break label$1;
       };
       wasm2js_i32$0 = $0 + 408 | 0;
       wasm2js_i32$1 = $1;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       $4 = $0 + 400 | 0;
       $3 = (HEAPU32[$4 >> 2] | 0) + $3 | 0;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = $3;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $3 | 1 | 0;
       HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1 + $3 | 0;
       wasm2js_i32$1 = $3;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       break label$1;
      };
      dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $5 | 0);
      break label$3;
     };
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & (__wasm_rotl_i32(4294967294 | 0, $4 >>> 3 | 0 | 0) | 0) | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    };
    $3 = $2 + $3 | 0;
    $5 = $5 + $2 | 0;
   };
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = (HEAPU32[($5 + 4 | 0) >> 2] | 0) & 4294967294 | 0;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $3 | 1 | 0;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1 + $3 | 0;
   wasm2js_i32$1 = $3;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   label$81 : {
    label$82 : {
     label$83 : {
      if ($3 >>> 0 > 255 >>> 0) break label$83;
      $4 = $3 >>> 3 | 0;
      $3 = ($0 + ($4 << 3 | 0) | 0) + 8 | 0;
      $5 = HEAPU32[$0 >> 2] | 0;
      $4 = 1 << ($4 & 31 | 0) | 0;
      if (($5 & $4 | 0 | 0) == (0 | 0)) break label$82;
      $5 = $3 + 8 | 0;
      $4 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
      break label$81;
     };
     dlmalloc__dlmalloc__Dlmalloc__insert_large_chunk__he6f64d159c5de8fd($0 | 0, $1 | 0, $3 | 0);
     break label$1;
    };
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $5 | $4 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $5 = $3 + 8 | 0;
    $4 = $3;
   };
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = $1;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $4;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  };
  return $6 + 8 | 0 | 0;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $3 = 0, $5 = 0, $2 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $2 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      $3 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
      if (($3 | 0) == ($1 | 0)) break label$4;
      $4 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
      wasm2js_i32$0 = $4;
      wasm2js_i32$1 = $3;
      HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $4;
      HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
      if ($2) break label$3;
      break label$2;
     };
     label$5 : {
      $3 = $1 + 20 | 0;
      $5 = HEAPU32[$3 >> 2] | 0;
      $4 = HEAPU32[($1 + (wasm2js_i32$0 = 20, wasm2js_i32$1 = 16, wasm2js_i32$2 = $5, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0) >> 2] | 0;
      if (($4 | 0) == (0 | 0)) break label$5;
      $5 = (wasm2js_i32$0 = $3, wasm2js_i32$1 = $1 + 16 | 0, wasm2js_i32$2 = $5, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
      label$6 : {
       label$7 : do {
        $6 = $5;
        label$8 : {
         $3 = $4;
         $5 = $3 + 20 | 0;
         $4 = HEAPU32[$5 >> 2] | 0;
         if (($4 | 0) == (0 | 0)) break label$8;
         if ($4) continue label$7;
         break label$6;
        };
        $5 = $3 + 16 | 0;
        $4 = HEAPU32[($3 + 16 | 0) >> 2] | 0;
        if ($4) continue label$7;
        break label$7;
       } while (1);
      };
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      if ($2) break label$3;
      break label$2;
     };
     $3 = 0;
     if (($2 | 0) == (0 | 0)) break label$2;
    };
    label$9 : {
     label$10 : {
      $4 = ($0 + ((HEAPU32[($1 + 28 | 0) >> 2] | 0) << 2 | 0) | 0) + 272 | 0;
      if ((HEAPU32[$4 >> 2] | 0 | 0) == ($1 | 0)) break label$10;
      wasm2js_i32$0 = $2 + (wasm2js_i32$2 = 16, wasm2js_i32$3 = 20, wasm2js_i32$4 = (HEAPU32[($2 + 16 | 0) >> 2] | 0 | 0) == ($1 | 0), wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3) | 0;
      wasm2js_i32$1 = $3;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      if ($3) break label$9;
      break label$2;
     };
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = $3;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     if (($3 | 0) == (0 | 0)) break label$1;
    };
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $2;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    label$11 : {
     $4 = HEAPU32[($1 + 16 | 0) >> 2] | 0;
     if (($4 | 0) == (0 | 0)) break label$11;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4;
     HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = $3;
     HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    };
    $4 = HEAPU32[($1 + 20 | 0) >> 2] | 0;
    if (($4 | 0) == (0 | 0)) break label$2;
    wasm2js_i32$0 = $3 + 20 | 0;
    wasm2js_i32$1 = $4;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $3;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
   };
   return;
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = (HEAPU32[($0 + 4 | 0) >> 2] | 0) & (__wasm_rotl_i32(4294967294 | 0, HEAPU32[($1 + 28 | 0) >> 2] | 0 | 0) | 0) | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__insert_large_chunk__he6f64d159c5de8fd($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $3 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  label$1 : {
   label$2 : {
    $3 = $2 >>> 8 | 0;
    if (($3 | 0) == (0 | 0)) break label$2;
    $4 = 31;
    if ($2 >>> 0 > 16777215 >>> 0) break label$1;
    $4 = Math_clz32($3);
    $4 = ($2 >>> ((38 - $4 | 0) & 31 | 0) | 0) & 1 | 0 | ((31 - $4 | 0) << 1 | 0) | 0;
    break label$1;
   };
   $4 = 0;
  };
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = 0;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = 0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 20 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 21 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 22 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 23 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $3 = ($0 + ($4 << 2 | 0) | 0) + 272 | 0;
  label$3 : {
   label$4 : {
    label$5 : {
     label$6 : {
      label$7 : {
       $5 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
       $6 = 1 << ($4 & 31 | 0) | 0;
       if (($5 & $6 | 0 | 0) == (0 | 0)) break label$7;
       $3 = HEAPU32[$3 >> 2] | 0;
       if (((HEAPU32[($3 + 4 | 0) >> 2] | 0) & 4294967288 | 0 | 0) != ($2 | 0)) break label$6;
       $4 = $3;
       break label$5;
      };
      wasm2js_i32$0 = $0 + 4 | 0;
      wasm2js_i32$1 = $5 | $6 | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $1;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = $3;
      HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
      break label$3;
     };
     $0 = $2 << (wasm2js_i32$0 = 0, wasm2js_i32$1 = (25 - ($4 >>> 1 | 0) | 0) & 31 | 0, wasm2js_i32$2 = ($4 | 0) == (31 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0;
     label$8 : do {
      $5 = ($3 + (($0 >>> 29 | 0) & 4 | 0) | 0) + 16 | 0;
      $4 = HEAPU32[$5 >> 2] | 0;
      if (($4 | 0) == (0 | 0)) break label$4;
      $0 = $0 << 1 | 0;
      $3 = $4;
      if (((HEAPU32[($4 + 4 | 0) >> 2] | 0) & 4294967288 | 0 | 0) != ($2 | 0)) continue label$8;
      break label$8;
     } while (1);
    };
    $0 = HEAPU32[($4 + 8 | 0) >> 2] | 0;
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $1;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $4;
    HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $0;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
    return;
   };
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $3;
   HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  };
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__realloc__h8da402073da6bc06($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $3 = 0, $7 = 0, $9 = 0, $5 = 0, $6 = 0, $8 = 0, $10 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = 0;
  label$1 : {
   if ($2 >>> 0 > 4294967231 >>> 0) break label$1;
   $4 = (wasm2js_i32$0 = 16, wasm2js_i32$1 = ($2 + 11 | 0) & 4294967288 | 0, wasm2js_i32$2 = $2 >>> 0 < 11 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
   $5 = $1 + 4294967292 | 0;
   $6 = HEAPU32[$5 >> 2] | 0;
   $7 = $6 & 4294967288 | 0;
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             if (($6 & 3 | 0 | 0) == (0 | 0)) break label$11;
             $8 = $1 + 4294967288 | 0;
             $9 = $8 + $7 | 0;
             if ($7 >>> 0 >= $4 >>> 0) break label$10;
             if ((HEAPU32[($0 + 412 | 0) >> 2] | 0 | 0) == ($9 | 0)) break label$9;
             if ((HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0) == ($9 | 0)) break label$8;
             $6 = HEAPU32[($9 + 4 | 0) >> 2] | 0;
             if ($6 & 2 | 0) break label$7;
             $10 = $6 & 4294967288 | 0;
             $7 = $10 + $7 | 0;
             if ($7 >>> 0 < $4 >>> 0) break label$7;
             $2 = $7 - $4 | 0;
             if ($10 >>> 0 > 255 >>> 0) break label$5;
             $3 = HEAPU32[($9 + 12 | 0) >> 2] | 0;
             $9 = HEAPU32[($9 + 8 | 0) >> 2] | 0;
             if (($3 | 0) == ($9 | 0)) break label$4;
             wasm2js_i32$0 = $9;
             wasm2js_i32$1 = $3;
             HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
             wasm2js_i32$0 = $3;
             wasm2js_i32$1 = $9;
             HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
             break label$3;
            };
            if ($4 >>> 0 < 256 >>> 0) break label$7;
            if ($7 >>> 0 < ($4 | 4 | 0) >>> 0) break label$7;
            if (($7 - $4 | 0) >>> 0 < 131073 >>> 0) break label$2;
            break label$7;
           };
           $2 = $7 - $4 | 0;
           if ($2 >>> 0 < 16 >>> 0) break label$2;
           wasm2js_i32$0 = $5;
           wasm2js_i32$1 = $4 | ($6 & 1 | 0) | 0 | 2 | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           $3 = $8 + $4 | 0;
           wasm2js_i32$0 = $3;
           wasm2js_i32$1 = $2 | 3 | 0;
           HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $9;
           wasm2js_i32$1 = HEAPU32[($9 + 4 | 0) >> 2] | 0 | 1 | 0;
           HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
           dlmalloc__dlmalloc__Dlmalloc__dispose_chunk__hb38ee5e2d5fb98ed($0 | 0, $3 | 0, $2 | 0);
           break label$2;
          };
          $7 = (HEAPU32[($0 + 404 | 0) >> 2] | 0) + $7 | 0;
          if ($7 >>> 0 <= $4 >>> 0) break label$7;
          wasm2js_i32$0 = $5;
          wasm2js_i32$1 = $4 | ($6 & 1 | 0) | 0 | 2 | 0;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          $2 = $8 + $4 | 0;
          $3 = $7 - $4 | 0;
          wasm2js_i32$0 = $2;
          wasm2js_i32$1 = $3 | 1 | 0;
          HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
          wasm2js_i32$0 = $0 + 404 | 0;
          wasm2js_i32$1 = $3;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          wasm2js_i32$0 = $0 + 412 | 0;
          wasm2js_i32$1 = $2;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          break label$2;
         };
         $7 = (HEAPU32[($0 + 400 | 0) >> 2] | 0) + $7 | 0;
         if ($7 >>> 0 >= $4 >>> 0) break label$6;
        };
        $4 = dlmalloc__dlmalloc__Dlmalloc__malloc__hf9d67685332ad6ea($0 | 0, $2 | 0) | 0;
        if (($4 | 0) == (0 | 0)) break label$1;
        $3 = HEAPU32[$5 >> 2] | 0;
        $3 = ($3 & 4294967288 | 0) - (wasm2js_i32$0 = 4, wasm2js_i32$1 = 8, wasm2js_i32$2 = $3 & 3 | 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0;
        $2 = memcpy($4 | 0, $1 | 0, (wasm2js_i32$0 = $2, wasm2js_i32$1 = $3, wasm2js_i32$2 = $3 >>> 0 > $2 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0) | 0;
        dlmalloc__dlmalloc__Dlmalloc__free__h95d9e0deceb71257($0 | 0, $1 | 0);
        return $2 | 0;
       };
       label$12 : {
        label$13 : {
         $2 = $7 - $4 | 0;
         if ($2 >>> 0 >= 16 >>> 0) break label$13;
         wasm2js_i32$0 = $5;
         wasm2js_i32$1 = $6 & 1 | 0 | $7 | 0 | 2 | 0;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         $2 = $8 + $7 | 0;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = HEAPU32[($2 + 4 | 0) >> 2] | 0 | 1 | 0;
         HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
         $2 = 0;
         $3 = 0;
         break label$12;
        };
        wasm2js_i32$0 = $5;
        wasm2js_i32$1 = $4 | ($6 & 1 | 0) | 0 | 2 | 0;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        $3 = $8 + $4 | 0;
        wasm2js_i32$0 = $3;
        wasm2js_i32$1 = $2 | 1 | 0;
        HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
        $4 = $8 + $7 | 0;
        wasm2js_i32$0 = $4;
        wasm2js_i32$1 = $2;
        HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
        wasm2js_i32$0 = $4;
        wasm2js_i32$1 = (HEAPU32[($4 + 4 | 0) >> 2] | 0) & 4294967294 | 0;
        HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
       };
       wasm2js_i32$0 = $0 + 408 | 0;
       wasm2js_i32$1 = $3;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $0 + 400 | 0;
       wasm2js_i32$1 = $2;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       break label$2;
      };
      dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $9 | 0);
      break label$3;
     };
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & (__wasm_rotl_i32(4294967294 | 0, $6 >>> 3 | 0 | 0) | 0) | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    };
    label$14 : {
     if ($2 >>> 0 > 15 >>> 0) break label$14;
     wasm2js_i32$0 = $5;
     wasm2js_i32$1 = $7 | ((HEAPU32[$5 >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     $2 = $8 + $7 | 0;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = HEAPU32[($2 + 4 | 0) >> 2] | 0 | 1 | 0;
     HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
     break label$2;
    };
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $4 | ((HEAPU32[$5 >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $3 = $8 + $4 | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $2 | 3 | 0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    $4 = $8 + $7 | 0;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = HEAPU32[($4 + 4 | 0) >> 2] | 0 | 1 | 0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    dlmalloc__dlmalloc__Dlmalloc__dispose_chunk__hb38ee5e2d5fb98ed($0 | 0, $3 | 0, $2 | 0);
   };
   $3 = $1;
  };
  return $3 | 0;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__dispose_chunk__hb38ee5e2d5fb98ed($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = $1 + $2 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          $4 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
          if ($4 & 1 | 0) break label$8;
          if (($4 & 3 | 0 | 0) == (0 | 0)) break label$7;
          $4 = HEAPU32[$1 >> 2] | 0;
          $2 = $4 + $2 | 0;
          label$9 : {
           label$10 : {
            label$11 : {
             $1 = $1 - $4 | 0;
             if ((HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0) == ($1 | 0)) break label$11;
             if ($4 >>> 0 > 255 >>> 0) break label$10;
             $5 = HEAPU32[($1 + 12 | 0) >> 2] | 0;
             $6 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
             if (($5 | 0) == ($6 | 0)) break label$9;
             wasm2js_i32$0 = $6;
             wasm2js_i32$1 = $5;
             HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
             wasm2js_i32$0 = $5;
             wasm2js_i32$1 = $6;
             HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
             break label$8;
            };
            if (((HEAPU32[($3 + 4 | 0) >> 2] | 0) & 3 | 0 | 0) != (3 | 0)) break label$8;
            wasm2js_i32$0 = $0;
            wasm2js_i32$1 = $2;
            HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
            $0 = $3 + 4 | 0;
            wasm2js_i32$0 = $0;
            wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & 4294967294 | 0;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $1;
            wasm2js_i32$1 = $2 | 1 | 0;
            HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $3;
            wasm2js_i32$1 = $2;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            return;
           };
           dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $1 | 0);
           break label$8;
          };
          wasm2js_i32$0 = $0;
          wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & (__wasm_rotl_i32(4294967294 | 0, $4 >>> 3 | 0 | 0) | 0) | 0;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         };
         label$12 : {
          label$13 : {
           $4 = HEAPU32[($3 + 4 | 0) >> 2] | 0;
           if ($4 & 2 | 0) break label$13;
           if ((HEAPU32[($0 + 412 | 0) >> 2] | 0 | 0) == ($3 | 0)) break label$12;
           if ((HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0) == ($3 | 0)) break label$6;
           $5 = $4 & 4294967288 | 0;
           $2 = $5 + $2 | 0;
           if ($5 >>> 0 > 255 >>> 0) break label$5;
           $5 = HEAPU32[($3 + 12 | 0) >> 2] | 0;
           $3 = HEAPU32[($3 + 8 | 0) >> 2] | 0;
           if (($5 | 0) == ($3 | 0)) break label$3;
           wasm2js_i32$0 = $3;
           wasm2js_i32$1 = $5;
           HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $5;
           wasm2js_i32$1 = $3;
           HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
           break label$2;
          };
          wasm2js_i32$0 = $3 + 4 | 0;
          wasm2js_i32$1 = $4 & 4294967294 | 0;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          wasm2js_i32$0 = $1;
          wasm2js_i32$1 = $2 | 1 | 0;
          HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
          wasm2js_i32$0 = $1 + $2 | 0;
          wasm2js_i32$1 = $2;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          break label$1;
         };
         wasm2js_i32$0 = $0 + 412 | 0;
         wasm2js_i32$1 = $1;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         $2 = (HEAPU32[($0 + 404 | 0) >> 2] | 0) + $2 | 0;
         wasm2js_i32$0 = $0;
         wasm2js_i32$1 = $2;
         HEAP32[(wasm2js_i32$0 + 404 | 0) >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $1;
         wasm2js_i32$1 = $2 | 1 | 0;
         HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
         if (($1 | 0) == (HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0)) break label$4;
        };
        return;
       };
       wasm2js_i32$0 = $0 + 408 | 0;
       wasm2js_i32$1 = $1;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       $2 = (HEAPU32[($0 + 400 | 0) >> 2] | 0) + $2 | 0;
       wasm2js_i32$0 = $0;
       wasm2js_i32$1 = $2;
       HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1;
       wasm2js_i32$1 = $2 | 1 | 0;
       HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $1 + $2 | 0;
       wasm2js_i32$1 = $2;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       return;
      };
      dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $3 | 0);
      break label$2;
     };
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = 0;
     HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $0 + 408 | 0;
     wasm2js_i32$1 = 0;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     return;
    };
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & (__wasm_rotl_i32(4294967294 | 0, $4 >>> 3 | 0 | 0) | 0) | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   };
   wasm2js_i32$0 = $1;
   wasm2js_i32$1 = $2 | 1 | 0;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $1 + $2 | 0;
   wasm2js_i32$1 = $2;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   if (($1 | 0) != (HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0)) break label$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
   return;
  };
  label$14 : {
   label$15 : {
    label$16 : {
     if ($2 >>> 0 > 255 >>> 0) break label$16;
     $3 = $2 >>> 3 | 0;
     $2 = ($0 + ($3 << 3 | 0) | 0) + 8 | 0;
     $4 = HEAPU32[$0 >> 2] | 0;
     $3 = 1 << ($3 & 31 | 0) | 0;
     if (($4 & $3 | 0 | 0) == (0 | 0)) break label$15;
     $0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
     break label$14;
    };
    dlmalloc__dlmalloc__Dlmalloc__insert_large_chunk__he6f64d159c5de8fd($0 | 0, $1 | 0, $2 | 0);
    return;
   };
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $4 | $3 | 0;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   $0 = $2;
  };
  wasm2js_i32$0 = $2 + 8 | 0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $1;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__free__h95d9e0deceb71257($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $4 = 0, $3 = 0, $5 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $2 = $1 + 4294967288 | 0;
  $3 = HEAPU32[($1 + 4294967292 | 0) >> 2] | 0;
  $1 = $3 & 4294967288 | 0;
  $4 = $2 + $1 | 0;
  label$1 : {
   label$2 : {
    if ($3 & 1 | 0) break label$2;
    if (($3 & 3 | 0 | 0) == (0 | 0)) break label$1;
    $3 = HEAPU32[$2 >> 2] | 0;
    $1 = $3 + $1 | 0;
    label$3 : {
     label$4 : {
      label$5 : {
       $2 = $2 - $3 | 0;
       if ((HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0) == ($2 | 0)) break label$5;
       if ($3 >>> 0 > 255 >>> 0) break label$4;
       $5 = HEAPU32[($2 + 12 | 0) >> 2] | 0;
       $6 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
       if (($5 | 0) == ($6 | 0)) break label$3;
       wasm2js_i32$0 = $6;
       wasm2js_i32$1 = $5;
       HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $5;
       wasm2js_i32$1 = $6;
       HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
       break label$2;
      };
      if (((HEAPU32[($4 + 4 | 0) >> 2] | 0) & 3 | 0 | 0) != (3 | 0)) break label$2;
      wasm2js_i32$0 = $0;
      wasm2js_i32$1 = $1;
      HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
      $0 = $4 + 4 | 0;
      wasm2js_i32$0 = $0;
      wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & 4294967294 | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $1 | 1 | 0;
      HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2 + $1 | 0;
      wasm2js_i32$1 = $1;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      return;
     };
     dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $2 | 0);
     break label$2;
    };
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & (__wasm_rotl_i32(4294967294 | 0, $3 >>> 3 | 0 | 0) | 0) | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   };
   label$6 : {
    label$7 : {
     label$8 : {
      label$9 : {
       label$10 : {
        label$11 : {
         label$12 : {
          label$13 : {
           label$14 : {
            $3 = HEAPU32[($4 + 4 | 0) >> 2] | 0;
            if ($3 & 2 | 0) break label$14;
            if ((HEAPU32[($0 + 412 | 0) >> 2] | 0 | 0) == ($4 | 0)) break label$13;
            if ((HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0) == ($4 | 0)) break label$12;
            $5 = $3 & 4294967288 | 0;
            $1 = $5 + $1 | 0;
            if ($5 >>> 0 > 255 >>> 0) break label$11;
            $5 = HEAPU32[($4 + 12 | 0) >> 2] | 0;
            $4 = HEAPU32[($4 + 8 | 0) >> 2] | 0;
            if (($5 | 0) == ($4 | 0)) break label$10;
            wasm2js_i32$0 = $4;
            wasm2js_i32$1 = $5;
            HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $5;
            wasm2js_i32$1 = $4;
            HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
            break label$9;
           };
           wasm2js_i32$0 = $4 + 4 | 0;
           wasm2js_i32$1 = $3 & 4294967294 | 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2;
           wasm2js_i32$1 = $1 | 1 | 0;
           HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $2 + $1 | 0;
           wasm2js_i32$1 = $1;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
           break label$6;
          };
          wasm2js_i32$0 = $0 + 412 | 0;
          wasm2js_i32$1 = $2;
          HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          $1 = (HEAPU32[($0 + 404 | 0) >> 2] | 0) + $1 | 0;
          wasm2js_i32$0 = $0;
          wasm2js_i32$1 = $1;
          HEAP32[(wasm2js_i32$0 + 404 | 0) >> 2] = wasm2js_i32$1;
          wasm2js_i32$0 = $2;
          wasm2js_i32$1 = $1 | 1 | 0;
          HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
          label$15 : {
           if (($2 | 0) != (HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0)) break label$15;
           wasm2js_i32$0 = $0;
           wasm2js_i32$1 = 0;
           HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
           wasm2js_i32$0 = $0 + 408 | 0;
           wasm2js_i32$1 = 0;
           HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
          };
          $3 = HEAPU32[($0 + 440 | 0) >> 2] | 0;
          if ($3 >>> 0 >= $1 >>> 0) break label$1;
          $1 = HEAPU32[($0 + 412 | 0) >> 2] | 0;
          if (($1 | 0) == (0 | 0)) break label$1;
          label$16 : {
           $5 = HEAPU32[($0 + 404 | 0) >> 2] | 0;
           if ($5 >>> 0 < 41 >>> 0) break label$16;
           $2 = $0 + 424 | 0;
           label$17 : do {
            label$18 : {
             $4 = HEAPU32[$2 >> 2] | 0;
             if ($4 >>> 0 > $1 >>> 0) break label$18;
             if (($4 + (HEAPU32[($2 + 4 | 0) >> 2] | 0) | 0) >>> 0 > $1 >>> 0) break label$16;
            };
            $2 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
            if ($2) continue label$17;
            break label$17;
           } while (1);
          };
          $1 = HEAPU32[($0 + 432 | 0) >> 2] | 0;
          if (($1 | 0) == (0 | 0)) break label$8;
          $2 = 0;
          label$19 : do {
           $2 = $2 + 1 | 0;
           $1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
           if ($1) continue label$19;
           break label$19;
          } while (1);
          $2 = (wasm2js_i32$0 = $2, wasm2js_i32$1 = 4095, wasm2js_i32$2 = $2 >>> 0 > 4095 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
          break label$7;
         };
         wasm2js_i32$0 = $0 + 408 | 0;
         wasm2js_i32$1 = $2;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         $1 = (HEAPU32[($0 + 400 | 0) >> 2] | 0) + $1 | 0;
         wasm2js_i32$0 = $0;
         wasm2js_i32$1 = $1;
         HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $2;
         wasm2js_i32$1 = $1 | 1 | 0;
         HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
         wasm2js_i32$0 = $2 + $1 | 0;
         wasm2js_i32$1 = $1;
         HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
         return;
        };
        dlmalloc__dlmalloc__Dlmalloc__unlink_large_chunk__hc04d1f5773602653($0 | 0, $4 | 0);
        break label$9;
       };
       wasm2js_i32$0 = $0;
       wasm2js_i32$1 = (HEAPU32[$0 >> 2] | 0) & (__wasm_rotl_i32(4294967294 | 0, $3 >>> 3 | 0 | 0) | 0) | 0;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      };
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $1 | 1 | 0;
      HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $2 + $1 | 0;
      wasm2js_i32$1 = $1;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      if (($2 | 0) != (HEAPU32[($0 + 408 | 0) >> 2] | 0 | 0)) break label$6;
      wasm2js_i32$0 = $0;
      wasm2js_i32$1 = $1;
      HEAP32[(wasm2js_i32$0 + 400 | 0) >> 2] = wasm2js_i32$1;
      return;
     };
     $2 = 4095;
    };
    wasm2js_i32$0 = $0;
    wasm2js_i32$1 = $2;
    HEAP32[(wasm2js_i32$0 + 448 | 0) >> 2] = wasm2js_i32$1;
    if ($5 >>> 0 <= $3 >>> 0) break label$1;
    wasm2js_i32$0 = $0 + 440 | 0;
    wasm2js_i32$1 = 4294967295;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    return;
   };
   label$20 : {
    label$21 : {
     label$22 : {
      label$23 : {
       label$24 : {
        if ($1 >>> 0 > 255 >>> 0) break label$24;
        $4 = $1 >>> 3 | 0;
        $1 = ($0 + ($4 << 3 | 0) | 0) + 8 | 0;
        $3 = HEAPU32[$0 >> 2] | 0;
        $4 = 1 << ($4 & 31 | 0) | 0;
        if (($3 & $4 | 0 | 0) == (0 | 0)) break label$23;
        $4 = $1 + 8 | 0;
        $0 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
        break label$22;
       };
       dlmalloc__dlmalloc__Dlmalloc__insert_large_chunk__he6f64d159c5de8fd($0 | 0, $2 | 0, $1 | 0);
       $2 = (HEAPU32[($0 + 448 | 0) >> 2] | 0) + 4294967295 | 0;
       wasm2js_i32$0 = $0;
       wasm2js_i32$1 = $2;
       HEAP32[(wasm2js_i32$0 + 448 | 0) >> 2] = wasm2js_i32$1;
       if ($2) break label$1;
       $1 = HEAPU32[($0 + 432 | 0) >> 2] | 0;
       if (($1 | 0) == (0 | 0)) break label$21;
       $2 = 0;
       label$25 : do {
        $2 = $2 + 1 | 0;
        $1 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
        if ($1) continue label$25;
        break label$25;
       } while (1);
       $2 = (wasm2js_i32$0 = $2, wasm2js_i32$1 = 4095, wasm2js_i32$2 = $2 >>> 0 > 4095 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
       break label$20;
      };
      wasm2js_i32$0 = $0;
      wasm2js_i32$1 = $3 | $4 | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      $4 = $1 + 8 | 0;
      $0 = $1;
     };
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = $2;
     HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $0;
     wasm2js_i32$1 = $2;
     HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $1;
     HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $0;
     HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
     return;
    };
    $2 = 4095;
   };
   wasm2js_i32$0 = $0 + 448 | 0;
   wasm2js_i32$1 = $2;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  };
 }
 
 function dlmalloc__dlmalloc__Dlmalloc__memalign__hfa1a5979a71318f2($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $5 = 0, $4 = 0, $6 = 0, $7 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $3 = 0;
  label$1 : {
   $1 = (wasm2js_i32$0 = $1, wasm2js_i32$1 = 16, wasm2js_i32$2 = $1 >>> 0 > 16 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
   if ((4294967232 - $1 | 0) >>> 0 <= $2 >>> 0) break label$1;
   $4 = (wasm2js_i32$0 = 16, wasm2js_i32$1 = ($2 + 11 | 0) & 4294967288 | 0, wasm2js_i32$2 = $2 >>> 0 < 11 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
   $2 = dlmalloc__dlmalloc__Dlmalloc__malloc__hf9d67685332ad6ea($0 | 0, ($1 + $4 | 0) + 12 | 0 | 0) | 0;
   if (($2 | 0) == (0 | 0)) break label$1;
   $3 = $2 + 4294967288 | 0;
   label$2 : {
    label$3 : {
     label$4 : {
      $5 = $1 + 4294967295 | 0;
      if (($5 & $2 | 0 | 0) == (0 | 0)) break label$4;
      $6 = $2 + 4294967292 | 0;
      $7 = HEAPU32[$6 >> 2] | 0;
      $2 = (($5 + $2 | 0) & (0 - $1 | 0) | 0) + 4294967288 | 0;
      $1 = (wasm2js_i32$0 = $2, wasm2js_i32$1 = $2 + $1 | 0, wasm2js_i32$2 = ($2 - $3 | 0) >>> 0 > 16 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
      $2 = $1 - $3 | 0;
      $5 = ($7 & 4294967288 | 0) - $2 | 0;
      if (($7 & 3 | 0 | 0) == (0 | 0)) break label$3;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = $5 | ((HEAPU32[($1 + 4 | 0) >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
      HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
      $5 = $1 + $5 | 0;
      wasm2js_i32$0 = $5;
      wasm2js_i32$1 = HEAPU32[($5 + 4 | 0) >> 2] | 0 | 1 | 0;
      HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = $2 | ((HEAPU32[$6 >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
      HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
      wasm2js_i32$0 = $1;
      wasm2js_i32$1 = HEAPU32[($1 + 4 | 0) >> 2] | 0 | 1 | 0;
      HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
      dlmalloc__dlmalloc__Dlmalloc__dispose_chunk__hb38ee5e2d5fb98ed($0 | 0, $3 | 0, $2 | 0);
      break label$2;
     };
     $1 = $3;
     break label$2;
    };
    $3 = HEAPU32[$3 >> 2] | 0;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $5;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $1;
    wasm2js_i32$1 = $3 + $2 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   };
   label$5 : {
    $2 = HEAPU32[($1 + 4 | 0) >> 2] | 0;
    if (($2 & 3 | 0 | 0) == (0 | 0)) break label$5;
    $3 = $2 & 4294967288 | 0;
    if ($3 >>> 0 <= ($4 + 16 | 0) >>> 0) break label$5;
    wasm2js_i32$0 = $1 + 4 | 0;
    wasm2js_i32$1 = $4 | ($2 & 1 | 0) | 0 | 2 | 0;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    $2 = $1 + $4 | 0;
    $4 = $3 - $4 | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = $4 | 3 | 0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    $3 = $1 + $3 | 0;
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU32[($3 + 4 | 0) >> 2] | 0 | 1 | 0;
    HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
    dlmalloc__dlmalloc__Dlmalloc__dispose_chunk__hb38ee5e2d5fb98ed($0 | 0, $2 | 0, $4 | 0);
   };
   $3 = $1 + 8 | 0;
  };
  return $3 | 0;
 }
 
 function alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  rust_oom($0 | 0, $1 | 0);
  abort();
 }
 
 function _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__hd9b6dd979ed959c2() {
  alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f();
  abort();
 }
 
 function alloc__raw_vec__capacity_overflow__hb52eac15ddb6d65f() {
  core__panicking__panic__h629a30fc6a0298aa(1056e3 | 0);
  abort();
 }
 
 function _$LT$alloc__string__String$u20$as$u20$core__clone__Clone$GT$__clone__h67225b6b9d7ffedf($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   $2 = HEAPU32[($1 + 8 | 0) >> 2] | 0;
   if (($2 | 0) <= (4294967295 | 0)) break label$1;
   $1 = HEAPU32[$1 >> 2] | 0;
   label$2 : {
    label$3 : {
     if (($2 | 0) == (0 | 0)) break label$3;
     $3 = __rust_alloc($2 | 0, 1 | 0) | 0;
     if ($3) break label$2;
     alloc__alloc__handle_alloc_error__hb4f2dfb8f2830618($2 | 0, 1 | 0);
     abort();
    };
    $3 = 1;
   };
   $1 = memcpy($3 | 0, $1 | 0, $2 | 0) | 0;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $1;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $0;
   wasm2js_i32$1 = $2;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   return;
  };
  _$LT$alloc__raw_vec__RawVec$LT$T$C$$u20$A$GT$$GT$__allocate_in___$u7b$$u7b$closure$u7d$$u7d$__hd9b6dd979ed959c2();
  abort();
 }
 
 function core__ptr__drop_in_place__h00a599f8541d9ef0($0) {
  $0 = $0 | 0;
 }
 
 function core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = global$0 - 48 | 0;
  global$0 = $3;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($3 + 32 | 0) + 12 | 0;
  wasm2js_i32$1 = 36;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($3 + 8 | 0) + 12 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3 + 28 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 36;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1056056;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 2;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = 1050832;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $3 + 4 | 0;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $3;
  wasm2js_i32$1 = $3 + 32 | 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  core__panicking__panic_fmt__he3157e9749b52890($3 + 8 | 0 | 0, $0 | 0);
  abort();
 }
 
 function core__slice__slice_index_len_fail__h9aa177f21a8ff28c($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 32 | 0) + 12 | 0;
  wasm2js_i32$1 = 36;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 8 | 0) + 12 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 28 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 36;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1056120;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 2;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050832;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 4 | 0;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 32 | 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  core__panicking__panic_fmt__he3157e9749b52890($2 + 8 | 0 | 0, 1056136 | 0);
  abort();
 }
 
 function core__panicking__panic__h629a30fc6a0298aa($0) {
  $0 = $0 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $1 = 0, $2 = 0, $2$hi = 0, $3 = 0, $3$hi = 0, $17 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $1 = global$0 - 48 | 0;
  global$0 = $1;
  i64toi32_i32$2 = $0;
  i64toi32_i32$0 = HEAPU32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 20 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 21 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 22 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 23 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  $2 = i64toi32_i32$0;
  $2$hi = i64toi32_i32$1;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = HEAPU32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$0 = i64toi32_i32$0;
  $3 = i64toi32_i32$1;
  $3$hi = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = $1 + 20 | 0;
  wasm2js_i32$1 = 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  $17 = i64toi32_i32$0;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $17;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 28 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 29 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 30 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 31 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$1 = 0;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 8 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 9 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 10 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 11 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = 1050828;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$0 + 24 | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  i64toi32_i32$1 = $3$hi;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 36 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 37 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 38 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 39 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 44 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 45 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 46 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 47 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  core__panicking__panic_fmt__he3157e9749b52890(i64toi32_i32$0 | 0, i64toi32_i32$0 + 32 | 0 | 0);
  abort();
 }
 
 function core__slice__slice_index_order_fail__h7296d4883457da71($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 32 | 0) + 12 | 0;
  wasm2js_i32$1 = 36;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = ($2 + 8 | 0) + 12 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 28 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 36;
  HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1056152;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 2;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050832;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 4 | 0;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 32 | 0;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  core__panicking__panic_fmt__he3157e9749b52890($2 + 8 | 0 | 0, 1056168 | 0);
  abort();
 }
 
 function core__panicking__panic_fmt__he3157e9749b52890($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $3 = 0, $3$hi = 0, $12 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  i64toi32_i32$1 = i64toi32_i32$1;
  $3 = i64toi32_i32$0;
  $3$hi = i64toi32_i32$1;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = HEAPU32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $12 = i64toi32_i32$1;
  i64toi32_i32$1 = $2 + 20 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $12;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1056040;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050828;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$1 = $2;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 16 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 17 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 18 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 19 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  rust_begin_unwind($2 | 0);
  abort();
 }
 
 function core__fmt__Formatter__pad__h3590797d97915edc($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $11 = 0, $10 = 0, $3 = 0, $7 = 0, $8 = 0, $6 = 0, $12 = 0, $15 = 0, $5 = 0, $13 = 0, $9 = 0, $14 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $3 = global$0 - 16 | 0;
  global$0 = $3;
  $4 = HEAPU32[($0 + 16 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           $5 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
           if (($5 | 0) != (1 | 0)) break label$9;
           if ($4) break label$8;
           break label$3;
          };
          if (($4 | 0) == (0 | 0)) break label$7;
         };
         if (($2 | 0) == (0 | 0)) break label$6;
         $6 = $1 + $2 | 0;
         $7 = (HEAPU32[($0 + 20 | 0) >> 2] | 0) ^ 4294967295 | 0;
         $8 = 0;
         $4 = $1;
         $9 = $4;
         label$10 : do {
          $10 = $4 + 1 | 0;
          label$11 : {
           label$12 : {
            label$13 : {
             label$14 : {
              label$15 : {
               $11 = HEAP8[$4 >> 0] | 0;
               if (($11 | 0) < (0 | 0)) break label$15;
               $11 = $11 & 255 | 0;
               break label$14;
              };
              label$16 : {
               label$17 : {
                if (($10 | 0) == ($6 | 0)) break label$17;
                $12 = (HEAPU8[$10 >> 0] | 0) & 63 | 0;
                $4 = $4 + 2 | 0;
                $10 = $4;
                break label$16;
               };
               $12 = 0;
               $4 = $6;
              };
              $13 = $11 & 31 | 0;
              label$18 : {
               label$19 : {
                label$20 : {
                 $11 = $11 & 255 | 0;
                 if ($11 >>> 0 < 224 >>> 0) break label$20;
                 if (($4 | 0) == ($6 | 0)) break label$19;
                 $14 = (HEAPU8[$4 >> 0] | 0) & 63 | 0;
                 $10 = $4 + 1 | 0;
                 $15 = $10;
                 break label$18;
                };
                $11 = $12 | ($13 << 6 | 0) | 0;
                break label$14;
               };
               $14 = 0;
               $15 = $6;
              };
              $12 = $14 | ($12 << 6 | 0) | 0;
              label$21 : {
               if ($11 >>> 0 < 240 >>> 0) break label$21;
               if (($15 | 0) == ($6 | 0)) break label$13;
               $4 = $15 + 1 | 0;
               $11 = (HEAPU8[$15 >> 0] | 0) & 63 | 0;
               break label$12;
              };
              $11 = $12 | ($13 << 12 | 0) | 0;
             };
             $4 = $10;
             $7 = $7 + 1 | 0;
             if ($7) break label$11;
             break label$5;
            };
            $11 = 0;
            $4 = $10;
           };
           $11 = $12 << 6 | 0 | (($13 << 18 | 0) & 1835008 | 0) | 0 | $11 | 0;
           if (($11 | 0) == (1114112 | 0)) break label$4;
           $7 = $7 + 1 | 0;
           if (($7 | 0) == (0 | 0)) break label$5;
          };
          $8 = ($8 - $9 | 0) + $4 | 0;
          $9 = $4;
          if (($6 | 0) != ($4 | 0)) continue label$10;
          break label$4;
          break label$10;
         } while (1);
        };
        wasm2js_i32$2 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
        wasm2js_i32$3 = $1;
        wasm2js_i32$4 = $2;
        wasm2js_i32$1 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
        wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0) | 0;
        $4 = wasm2js_i32$0;
        break label$1;
       };
       $2 = 0;
       if ($5) break label$3;
       break label$2;
      };
      if (($11 | 0) == (1114112 | 0)) break label$4;
      label$22 : {
       label$23 : {
        if (($8 | 0) == (0 | 0)) break label$23;
        if (($8 | 0) == ($2 | 0)) break label$23;
        $4 = 0;
        if ($8 >>> 0 >= $2 >>> 0) break label$22;
        if ((HEAP8[($1 + $8 | 0) >> 0] | 0 | 0) < (4294967232 | 0)) break label$22;
       };
       $4 = $1;
      };
      $2 = (wasm2js_i32$0 = $8, wasm2js_i32$1 = $2, wasm2js_i32$4 = $4, wasm2js_i32$4 ? wasm2js_i32$0 : wasm2js_i32$1);
      $1 = (wasm2js_i32$0 = $4, wasm2js_i32$1 = $1, wasm2js_i32$4 = $4, wasm2js_i32$4 ? wasm2js_i32$0 : wasm2js_i32$1);
     };
     if (($5 | 0) == (0 | 0)) break label$2;
    };
    $10 = 0;
    label$24 : {
     if (($2 | 0) == (0 | 0)) break label$24;
     $11 = $2;
     $4 = $1;
     label$25 : do {
      $10 = $10 + (((HEAPU8[$4 >> 0] | 0) & 192 | 0 | 0) == (128 | 0)) | 0;
      $4 = $4 + 1 | 0;
      $11 = $11 + 4294967295 | 0;
      if ($11) continue label$25;
      break label$25;
     } while (1);
    };
    label$26 : {
     label$27 : {
      label$28 : {
       label$29 : {
        $7 = HEAPU32[($0 + 12 | 0) >> 2] | 0;
        if (($2 - $10 | 0) >>> 0 >= $7 >>> 0) break label$29;
        $10 = 0;
        label$30 : {
         if (($2 | 0) == (0 | 0)) break label$30;
         $10 = 0;
         $11 = $2;
         $4 = $1;
         label$31 : do {
          $10 = $10 + (((HEAPU8[$4 >> 0] | 0) & 192 | 0 | 0) == (128 | 0)) | 0;
          $4 = $4 + 1 | 0;
          $11 = $11 + 4294967295 | 0;
          if ($11) continue label$31;
          break label$31;
         } while (1);
        };
        $11 = ($10 - $2 | 0) + $7 | 0;
        $4 = HEAPU8[($0 + 48 | 0) >> 0] | 0;
        $4 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = $4, wasm2js_i32$4 = ($4 | 0) == (3 | 0), wasm2js_i32$4 ? wasm2js_i32$0 : wasm2js_i32$1) & 3 | 0;
        if (($4 | 0) == (0 | 0)) break label$28;
        if (($4 | 0) == (2 | 0)) break label$27;
        $7 = 0;
        break label$26;
       };
       wasm2js_i32$4 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
       wasm2js_i32$3 = $1;
       wasm2js_i32$2 = $2;
       wasm2js_i32$1 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
       wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$4 | 0, wasm2js_i32$3 | 0, wasm2js_i32$2 | 0) | 0;
       $4 = wasm2js_i32$0;
       break label$1;
      };
      $7 = $11;
      $11 = 0;
      break label$26;
     };
     $7 = ($11 + 1 | 0) >>> 1 | 0;
     $11 = $11 >>> 1 | 0;
    };
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
    label$32 : {
     label$33 : {
      $4 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
      if ($4 >>> 0 > 127 >>> 0) break label$33;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $4;
      HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
      $10 = 1;
      break label$32;
     };
     label$34 : {
      if ($4 >>> 0 > 2047 >>> 0) break label$34;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $4 & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = ($4 >>> 6 | 0) & 31 | 0 | 192 | 0;
      HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
      $10 = 2;
      break label$32;
     };
     label$35 : {
      if ($4 >>> 0 > 65535 >>> 0) break label$35;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = $4 & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = ($4 >>> 6 | 0) & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $3;
      wasm2js_i32$1 = ($4 >>> 12 | 0) & 15 | 0 | 224 | 0;
      HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
      $10 = 3;
      break label$32;
     };
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4 >>> 18 | 0 | 240 | 0;
     HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = $4 & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 15 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = ($4 >>> 12 | 0) & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $3;
     wasm2js_i32$1 = ($4 >>> 6 | 0) & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
     $10 = 4;
    };
    $4 = 4294967295;
    label$36 : {
     label$37 : {
      label$38 : {
       label$39 : do {
        $4 = $4 + 1 | 0;
        if ($4 >>> 0 >= $11 >>> 0) break label$38;
        wasm2js_i32$3 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
        wasm2js_i32$4 = $3 + 12 | 0;
        wasm2js_i32$5 = $10;
        wasm2js_i32$2 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
        wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$2 & 63](wasm2js_i32$3 | 0, wasm2js_i32$4 | 0, wasm2js_i32$5 | 0) | 0;
        wasm2js_i32$0 = (wasm2js_i32$1 | 0) == (0 | 0);
        if (wasm2js_i32$0) continue label$39;
        break label$37;
        break label$39;
       } while (1);
      };
      $11 = $0 + 24 | 0;
      $0 = $0 + 28 | 0;
      wasm2js_i32$2 = HEAPU32[$11 >> 2] | 0;
      wasm2js_i32$5 = $1;
      wasm2js_i32$4 = $2;
      wasm2js_i32$1 = HEAPU32[((HEAPU32[$0 >> 2] | 0) + 12 | 0) >> 2] | 0;
      wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$5 | 0, wasm2js_i32$4 | 0) | 0;
      if (wasm2js_i32$0) break label$37;
      $4 = 4294967295;
      label$40 : do {
       $4 = $4 + 1 | 0;
       if ($4 >>> 0 >= $7 >>> 0) break label$36;
       wasm2js_i32$5 = HEAPU32[$11 >> 2] | 0;
       wasm2js_i32$2 = $3 + 12 | 0;
       wasm2js_i32$3 = $10;
       wasm2js_i32$4 = HEAPU32[((HEAPU32[$0 >> 2] | 0) + 12 | 0) >> 2] | 0;
       wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$4 & 63](wasm2js_i32$5 | 0, wasm2js_i32$2 | 0, wasm2js_i32$3 | 0) | 0;
       wasm2js_i32$0 = (wasm2js_i32$1 | 0) == (0 | 0);
       if (wasm2js_i32$0) continue label$40;
       break label$40;
      } while (1);
     };
     $4 = 1;
     break label$1;
    };
    $4 = 0;
    break label$1;
   };
   wasm2js_i32$4 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
   wasm2js_i32$3 = $1;
   wasm2js_i32$2 = $2;
   wasm2js_i32$1 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
   wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$4 | 0, wasm2js_i32$3 | 0, wasm2js_i32$2 | 0) | 0;
   $4 = wasm2js_i32$0;
  };
  global$0 = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function core__str__slice_error_fail__hf97d66f6274169ea($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, $6 = 0, $8 = 0, $5 = 0, $9 = 0, $7 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $4 = global$0 - 112 | 0;
  global$0 = $4;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  $5 = 1;
  $6 = $1;
  label$1 : {
   if ($1 >>> 0 < 257 >>> 0) break label$1;
   $7 = 0 - $1 | 0;
   $8 = 256;
   label$2 : {
    label$3 : do {
     label$4 : {
      if ($8 >>> 0 >= $1 >>> 0) break label$4;
      if ((HEAP8[($0 + $8 | 0) >> 0] | 0 | 0) > (4294967231 | 0)) break label$2;
     };
     $6 = $8 + 4294967295 | 0;
     $5 = 0;
     if (($8 | 0) == (1 | 0)) break label$1;
     $9 = $7 + $8 | 0;
     $8 = $6;
     if (($9 | 0) != (1 | 0)) continue label$3;
     break label$1;
     break label$3;
    } while (1);
   };
   $5 = 0;
   $6 = $8;
  };
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = (wasm2js_i32$2 = 0, wasm2js_i32$3 = 5, wasm2js_i32$4 = $5, wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3);
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $4;
  wasm2js_i32$1 = (wasm2js_i32$2 = 1050828, wasm2js_i32$3 = 1051304, wasm2js_i32$4 = $5, wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3);
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  label$5 : {
   label$6 : {
    label$7 : {
     label$8 : {
      label$9 : {
       label$10 : {
        $8 = $2 >>> 0 > $1 >>> 0;
        if ($8) break label$10;
        if ($3 >>> 0 > $1 >>> 0) break label$10;
        if ($2 >>> 0 > $3 >>> 0) break label$6;
        label$11 : {
         label$12 : {
          if (($2 | 0) == (0 | 0)) break label$12;
          if (($1 | 0) == ($2 | 0)) break label$12;
          if ($1 >>> 0 <= $2 >>> 0) break label$11;
          if ((HEAP8[($0 + $2 | 0) >> 0] | 0 | 0) < (4294967232 | 0)) break label$11;
         };
         $2 = $3;
        };
        wasm2js_i32$0 = $4;
        wasm2js_i32$1 = $2;
        HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
        if (($2 | 0) == (0 | 0)) break label$9;
        if (($2 | 0) == ($1 | 0)) break label$9;
        $9 = $1 + 1 | 0;
        label$13 : {
         label$14 : do {
          label$15 : {
           if ($2 >>> 0 >= $1 >>> 0) break label$15;
           $6 = $0 + $2 | 0;
           if ((HEAP8[$6 >> 0] | 0 | 0) > (4294967231 | 0)) break label$13;
          };
          $8 = $2 + 4294967295 | 0;
          if (($2 | 0) == (1 | 0)) break label$8;
          $6 = ($9 | 0) == ($2 | 0);
          $2 = $8;
          if (($6 | 0) == (0 | 0)) continue label$14;
          break label$8;
          break label$14;
         } while (1);
        };
        $8 = $2;
        break label$7;
       };
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = (wasm2js_i32$2 = $2, wasm2js_i32$3 = $3, wasm2js_i32$4 = $8, wasm2js_i32$4 ? wasm2js_i32$2 : wasm2js_i32$3);
       HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = ($4 + 72 | 0) + 12 | 0;
       wasm2js_i32$1 = 37;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = ($4 + 72 | 0) + 20 | 0;
       wasm2js_i32$1 = 37;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = ($4 + 48 | 0) + 12 | 0;
       wasm2js_i32$1 = 3;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = ($4 + 48 | 0) + 20 | 0;
       wasm2js_i32$1 = 3;
       HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = 36;
       HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = 1056232;
       HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = 3;
       HEAP32[(wasm2js_i32$0 + 52 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = 1050944;
       HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = $4 + 40 | 0;
       HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = $4 + 16 | 0;
       HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = $4 + 24 | 0;
       HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
       wasm2js_i32$0 = $4;
       wasm2js_i32$1 = $4 + 72 | 0;
       HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
       core__panicking__panic_fmt__he3157e9749b52890($4 + 48 | 0 | 0, 1056256 | 0);
       abort();
      };
      $8 = $2;
     };
     $6 = $0 + $8 | 0;
    };
    $2 = $0 + $1 | 0;
    if (($6 | 0) == ($2 | 0)) break label$5;
    $1 = 1;
    $9 = 0;
    label$16 : {
     label$17 : {
      $6 = HEAP8[$6 >> 0] | 0;
      if (($6 | 0) < (0 | 0)) break label$17;
      wasm2js_i32$0 = $4;
      wasm2js_i32$1 = $6 & 255 | 0;
      HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
      $2 = $4 + 40 | 0;
      break label$16;
     };
     $1 = $2;
     label$18 : {
      $0 = $0 + $8 | 0;
      if (($0 + 1 | 0 | 0) == ($2 | 0)) break label$18;
      $1 = $0 + 2 | 0;
      $9 = (HEAPU8[($0 + 1 | 0) >> 0] | 0) & 63 | 0;
     };
     $0 = $6 & 31 | 0;
     label$19 : {
      label$20 : {
       label$21 : {
        if (($6 & 255 | 0) >>> 0 < 224 >>> 0) break label$21;
        $5 = 0;
        $7 = $2;
        label$22 : {
         if (($1 | 0) == ($2 | 0)) break label$22;
         $7 = $1 + 1 | 0;
         $5 = (HEAPU8[$1 >> 0] | 0) & 63 | 0;
        };
        $1 = $5 | ($9 << 6 | 0) | 0;
        if (($6 & 255 | 0) >>> 0 < 240 >>> 0) break label$20;
        $6 = 0;
        label$23 : {
         if (($7 | 0) == ($2 | 0)) break label$23;
         $6 = (HEAPU8[$7 >> 0] | 0) & 63 | 0;
        };
        $6 = $1 << 6 | 0 | (($0 << 18 | 0) & 1835008 | 0) | 0 | $6 | 0;
        if (($6 | 0) != (1114112 | 0)) break label$19;
        break label$5;
       };
       $6 = $9 | ($0 << 6 | 0) | 0;
       break label$19;
      };
      $6 = $1 | ($0 << 12 | 0) | 0;
     };
     wasm2js_i32$0 = $4;
     wasm2js_i32$1 = $6;
     HEAP32[(wasm2js_i32$0 + 36 | 0) >> 2] = wasm2js_i32$1;
     $1 = 1;
     $2 = $4 + 40 | 0;
     if ($6 >>> 0 < 128 >>> 0) break label$16;
     $1 = 2;
     if ($6 >>> 0 < 2048 >>> 0) break label$16;
     $1 = (wasm2js_i32$0 = 3, wasm2js_i32$1 = 4, wasm2js_i32$2 = $6 >>> 0 < 65536 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    };
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $8;
    HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $1 + $8 | 0;
    HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = ($4 + 72 | 0) + 12 | 0;
    wasm2js_i32$1 = 38;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = ($4 + 72 | 0) + 20 | 0;
    wasm2js_i32$1 = 39;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4 + 100 | 0;
    wasm2js_i32$1 = 37;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4 + 108 | 0;
    wasm2js_i32$1 = 37;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = ($4 + 48 | 0) + 12 | 0;
    wasm2js_i32$1 = 5;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = ($4 + 48 | 0) + 20 | 0;
    wasm2js_i32$1 = 5;
    HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = 36;
    HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $2;
    HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = 1056320;
    HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = 5;
    HEAP32[(wasm2js_i32$0 + 52 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = 1051572;
    HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $4 + 32 | 0;
    HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $4 + 36 | 0;
    HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $4 + 16 | 0;
    HEAP32[(wasm2js_i32$0 + 96 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $4 + 24 | 0;
    HEAP32[(wasm2js_i32$0 + 104 | 0) >> 2] = wasm2js_i32$1;
    wasm2js_i32$0 = $4;
    wasm2js_i32$1 = $4 + 72 | 0;
    HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
    core__panicking__panic_fmt__he3157e9749b52890($4 + 48 | 0 | 0, 1056360 | 0);
    abort();
   };
   wasm2js_i32$0 = ($4 + 72 | 0) + 12 | 0;
   wasm2js_i32$1 = 36;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = ($4 + 72 | 0) + 20 | 0;
   wasm2js_i32$1 = 37;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4 + 100 | 0;
   wasm2js_i32$1 = 37;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = ($4 + 48 | 0) + 12 | 0;
   wasm2js_i32$1 = 4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = ($4 + 48 | 0) + 20 | 0;
   wasm2js_i32$1 = 4;
   HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = 36;
   HEAP32[(wasm2js_i32$0 + 76 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = 1056272;
   HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = 4;
   HEAP32[(wasm2js_i32$0 + 52 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = 1051376;
   HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = $4 + 8 | 0;
   HEAP32[(wasm2js_i32$0 + 72 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = $4 + 12 | 0;
   HEAP32[(wasm2js_i32$0 + 80 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = $4 + 16 | 0;
   HEAP32[(wasm2js_i32$0 + 88 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = $4 + 24 | 0;
   HEAP32[(wasm2js_i32$0 + 96 | 0) >> 2] = wasm2js_i32$1;
   wasm2js_i32$0 = $4;
   wasm2js_i32$1 = $4 + 72 | 0;
   HEAP32[(wasm2js_i32$0 + 64 | 0) >> 2] = wasm2js_i32$1;
   core__panicking__panic_fmt__he3157e9749b52890($4 + 48 | 0 | 0, 1056304 | 0);
   abort();
  };
  core__panicking__panic__h629a30fc6a0298aa(1056072 | 0);
  abort();
 }
 
 function core__fmt__num___$LT$impl$u20$core__fmt__Display$u20$for$u20$u32$GT$__fmt__h8b94494cfc7621e3($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $5 = 0, $2 = 0, $4 = 0, $6 = 0, $7 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  $3 = 39;
  label$1 : {
   label$2 : {
    $0 = HEAPU32[$0 >> 2] | 0;
    if ($0 >>> 0 < 1e4 >>> 0) break label$2;
    $3 = 39;
    label$3 : do {
     $4 = ($2 + 9 | 0) + $3 | 0;
     $5 = ($0 >>> 0) / (1e4 >>> 0) | 0;
     $6 = $0 - Math_imul($5, 1e4) | 0;
     $7 = ($6 >>> 0) / (100 >>> 0) | 0;
     wasm2js_i32$0 = $4 + 4294967292 | 0;
     wasm2js_i32$1 = (wasm2js_i32$2 = ($7 << 1 | 0) + 1054920 | 0, HEAPU8[wasm2js_i32$2 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$2 + 1 | 0) >> 0] | 0 | 0) << 8);
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), HEAP8[wasm2js_i32$2 >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 1 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0;
     wasm2js_i32$0 = $4 + 4294967294 | 0;
     wasm2js_i32$1 = (wasm2js_i32$2 = (($6 - Math_imul($7, 100) | 0) << 1 | 0) + 1054920 | 0, HEAPU8[wasm2js_i32$2 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$2 + 1 | 0) >> 0] | 0 | 0) << 8);
     (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), HEAP8[wasm2js_i32$2 >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 1 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0;
     $3 = $3 + 4294967292 | 0;
     $4 = $0 >>> 0 > 99999999 >>> 0;
     $0 = $5;
     if ($4) continue label$3;
     break label$1;
     break label$3;
    } while (1);
   };
   $5 = $0;
  };
  label$4 : {
   label$5 : {
    if (($5 | 0) < (100 | 0)) break label$5;
    $3 = $3 + 4294967294 | 0;
    $0 = (($5 & 65535 | 0) >>> 0) / (100 >>> 0) | 0;
    wasm2js_i32$0 = ($2 + 9 | 0) + $3 | 0;
    wasm2js_i32$1 = (wasm2js_i32$2 = ((($5 - Math_imul($0, 100) | 0) & 65535 | 0) << 1 | 0) + 1054920 | 0, HEAPU8[wasm2js_i32$2 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$2 + 1 | 0) >> 0] | 0 | 0) << 8);
    (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), HEAP8[wasm2js_i32$2 >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 1 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0;
    break label$4;
   };
   $0 = $5;
  };
  label$6 : {
   label$7 : {
    if (($0 | 0) > (9 | 0)) break label$7;
    $3 = $3 + 4294967295 | 0;
    $5 = ($2 + 9 | 0) + $3 | 0;
    wasm2js_i32$0 = $5;
    wasm2js_i32$1 = $0 + 48 | 0;
    HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
    break label$6;
   };
   $3 = $3 + 4294967294 | 0;
   $5 = ($2 + 9 | 0) + $3 | 0;
   wasm2js_i32$0 = $5;
   wasm2js_i32$1 = (wasm2js_i32$2 = ($0 << 1 | 0) + 1054920 | 0, HEAPU8[wasm2js_i32$2 >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$2 + 1 | 0) >> 0] | 0 | 0) << 8);
   (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), HEAP8[wasm2js_i32$2 >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 1 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0;
  };
  $0 = core__fmt__Formatter__pad_integral__h82ce61d67891b79a($1 | 0, 1 | 0, 1050828 | 0, 0 | 0, $5 | 0, 39 - $3 | 0 | 0) | 0;
  global$0 = $2 + 48 | 0;
  return $0 | 0;
 }
 
 function core__fmt__write__h3465a327d1942227($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $20 = 0, $21 = 0, $8 = 0, $7 = 0, $9 = 0, $18 = 0, $10 = 0, $5 = 0, $6 = 0, $4 = 0, $11 = 0, $14 = 0, $19 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0, wasm2js_i32$6 = 0;
  $3 = global$0 - 64 | 0;
  global$0 = $3;
  $4 = $3 + 28 | 0;
  wasm2js_i32$1 = $4;
  wasm2js_i32$2 = $1;
  HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
  $5 = $3 + 44 | 0;
  $1 = HEAPU32[($2 + 20 | 0) >> 2] | 0;
  wasm2js_i32$1 = $5;
  wasm2js_i32$2 = $1;
  HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 3;
  HEAP8[(wasm2js_i32$1 + 48 | 0) >> 0] = wasm2js_i32$2;
  $6 = $3 + 36 | 0;
  $7 = HEAPU32[($2 + 16 | 0) >> 2] | 0;
  $8 = $1 << 3 | 0;
  wasm2js_i32$1 = $6;
  wasm2js_i32$2 = $7 + $8 | 0;
  HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 0;
  HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 32;
  (wasm2js_i32$3 = wasm2js_i32$1, wasm2js_i32$4 = wasm2js_i32$2), ((HEAP8[(wasm2js_i32$3 + 4 | 0) >> 0] = wasm2js_i32$4 & 255 | 0, HEAP8[(wasm2js_i32$3 + 5 | 0) >> 0] = (wasm2js_i32$4 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 6 | 0) >> 0] = (wasm2js_i32$4 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$3 + 7 | 0) >> 0] = (wasm2js_i32$4 >>> 24 | 0) & 255 | 0;
  $1 = 0;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 0;
  HEAP32[(wasm2js_i32$1 + 8 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = 0;
  HEAP32[(wasm2js_i32$1 + 16 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $0;
  HEAP32[(wasm2js_i32$1 + 24 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $7;
  HEAP32[(wasm2js_i32$1 + 32 | 0) >> 2] = wasm2js_i32$2;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $7;
  HEAP32[(wasm2js_i32$1 + 40 | 0) >> 2] = wasm2js_i32$2;
  $9 = HEAPU32[$2 >> 2] | 0;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $9;
  HEAP32[(wasm2js_i32$1 + 56 | 0) >> 2] = wasm2js_i32$2;
  $10 = (HEAPU32[($2 + 4 | 0) >> 2] | 0) << 3 | 0;
  $11 = $9 + $10 | 0;
  wasm2js_i32$1 = $3;
  wasm2js_i32$2 = $11;
  HEAP32[(wasm2js_i32$1 + 60 | 0) >> 2] = wasm2js_i32$2;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             $0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
             if (($0 | 0) == (0 | 0)) break label$11;
             $7 = $0 + 28 | 0;
             $2 = Math_imul(HEAPU32[($2 + 12 | 0) >> 2] | 0, 36);
             $12 = $3 + 24 | 0;
             $13 = $3 + 48 | 0;
             $14 = $3 + 40 | 0;
             $15 = $3 + 8 | 0;
             $16 = $3 + 20 | 0;
             $17 = $3 + 16 | 0;
             $18 = $3 + 32 | 0;
             label$12 : do {
              if (($2 | 0) == (0 | 0)) break label$9;
              if (($10 | 0) == ($1 | 0)) break label$10;
              label$13 : {
               $19 = $9 + $1 | 0;
               wasm2js_i32$3 = HEAPU32[$12 >> 2] | 0;
               wasm2js_i32$4 = HEAPU32[$19 >> 2] | 0;
               wasm2js_i32$5 = HEAPU32[($19 + 4 | 0) >> 2] | 0;
               wasm2js_i32$2 = HEAPU32[((HEAPU32[$4 >> 2] | 0) + 12 | 0) >> 2] | 0;
               wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$2 & 63](wasm2js_i32$3 | 0, wasm2js_i32$4 | 0, wasm2js_i32$5 | 0) | 0;
               if (wasm2js_i32$1) break label$13;
               wasm2js_i32$1 = $13;
               wasm2js_i32$2 = HEAPU8[($0 + 32 | 0) >> 0] | 0;
               HEAP8[wasm2js_i32$1 >> 0] = wasm2js_i32$2;
               wasm2js_i32$1 = $3;
               wasm2js_i32$2 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
               HEAP32[(wasm2js_i32$1 + 4 | 0) >> 2] = wasm2js_i32$2;
               wasm2js_i32$1 = $3;
               wasm2js_i32$2 = HEAPU32[($0 + 12 | 0) >> 2] | 0;
               HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
               $8 = 0;
               label$14 : {
                label$15 : {
                 label$16 : {
                  label$17 : {
                   $20 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
                   if (($20 | 0) == (1 | 0)) break label$17;
                   label$18 : {
                    if (($20 | 0) == (3 | 0)) break label$18;
                    if (($20 | 0) != (2 | 0)) break label$16;
                    $21 = HEAPU32[$18 >> 2] | 0;
                    if (($21 | 0) == (HEAPU32[$6 >> 2] | 0 | 0)) break label$18;
                    wasm2js_i32$1 = $18;
                    wasm2js_i32$2 = $21 + 8 | 0;
                    HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
                    if ((HEAPU32[($21 + 4 | 0) >> 2] | 0 | 0) != (40 | 0)) break label$14;
                    $20 = HEAPU32[(HEAPU32[$21 >> 2] | 0) >> 2] | 0;
                    break label$15;
                   };
                   break label$14;
                  };
                  $21 = HEAPU32[$7 >> 2] | 0;
                  $20 = HEAPU32[$5 >> 2] | 0;
                  if ($21 >>> 0 >= $20 >>> 0) break label$2;
                  $21 = (HEAPU32[$14 >> 2] | 0) + ($21 << 3 | 0) | 0;
                  if ((HEAPU32[($21 + 4 | 0) >> 2] | 0 | 0) != (40 | 0)) break label$14;
                  $20 = HEAPU32[(HEAPU32[$21 >> 2] | 0) >> 2] | 0;
                  break label$15;
                 };
                 $20 = HEAPU32[$7 >> 2] | 0;
                };
                $8 = 1;
               };
               wasm2js_i32$1 = $3 + 12 | 0;
               wasm2js_i32$2 = $20;
               HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
               wasm2js_i32$1 = $15;
               wasm2js_i32$2 = $8;
               HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
               $8 = 0;
               label$19 : {
                label$20 : {
                 label$21 : {
                  label$22 : {
                   $20 = HEAPU32[($0 + 16 | 0) >> 2] | 0;
                   if (($20 | 0) == (1 | 0)) break label$22;
                   label$23 : {
                    if (($20 | 0) == (3 | 0)) break label$23;
                    if (($20 | 0) != (2 | 0)) break label$21;
                    $21 = HEAPU32[$18 >> 2] | 0;
                    if (($21 | 0) == (HEAPU32[$6 >> 2] | 0 | 0)) break label$23;
                    wasm2js_i32$1 = $18;
                    wasm2js_i32$2 = $21 + 8 | 0;
                    HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
                    if ((HEAPU32[($21 + 4 | 0) >> 2] | 0 | 0) != (40 | 0)) break label$19;
                    $20 = HEAPU32[(HEAPU32[$21 >> 2] | 0) >> 2] | 0;
                    break label$20;
                   };
                   break label$19;
                  };
                  $21 = HEAPU32[($7 + 4294967288 | 0) >> 2] | 0;
                  $20 = HEAPU32[$5 >> 2] | 0;
                  if ($21 >>> 0 >= $20 >>> 0) break label$1;
                  $21 = (HEAPU32[$14 >> 2] | 0) + ($21 << 3 | 0) | 0;
                  if ((HEAPU32[($21 + 4 | 0) >> 2] | 0 | 0) != (40 | 0)) break label$19;
                  $20 = HEAPU32[(HEAPU32[$21 >> 2] | 0) >> 2] | 0;
                  break label$20;
                 };
                 $20 = HEAPU32[($7 + 4294967288 | 0) >> 2] | 0;
                };
                $8 = 1;
               };
               wasm2js_i32$1 = $16;
               wasm2js_i32$2 = $20;
               HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
               wasm2js_i32$1 = $17;
               wasm2js_i32$2 = $8;
               HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
               label$24 : {
                label$25 : {
                 if ((HEAPU32[$0 >> 2] | 0 | 0) != (1 | 0)) break label$25;
                 $8 = HEAPU32[($7 + 4294967272 | 0) >> 2] | 0;
                 $20 = HEAPU32[$5 >> 2] | 0;
                 if ($8 >>> 0 >= $20 >>> 0) break label$4;
                 $8 = (HEAPU32[$14 >> 2] | 0) + ($8 << 3 | 0) | 0;
                 break label$24;
                };
                $8 = HEAPU32[$18 >> 2] | 0;
                if (($8 | 0) == (HEAPU32[$6 >> 2] | 0 | 0)) break label$3;
                wasm2js_i32$1 = $18;
                wasm2js_i32$2 = $8 + 8 | 0;
                HEAP32[wasm2js_i32$1 >> 2] = wasm2js_i32$2;
               };
               $0 = $0 + 36 | 0;
               $2 = $2 + 4294967260 | 0;
               $7 = $7 + 36 | 0;
               $1 = $1 + 8 | 0;
               wasm2js_i32$4 = HEAPU32[$8 >> 2] | 0;
               wasm2js_i32$3 = $3;
               wasm2js_i32$5 = HEAPU32[($8 + 4 | 0) >> 2] | 0;
               wasm2js_i32$2 = FUNCTION_TABLE_iii[wasm2js_i32$5 & 63](wasm2js_i32$4 | 0, wasm2js_i32$3 | 0) | 0;
               wasm2js_i32$1 = (wasm2js_i32$2 | 0) == (0 | 0);
               if (wasm2js_i32$1) continue label$12;
              };
              break label$12;
             } while (1);
             wasm2js_i32$1 = $3;
             wasm2js_i32$2 = $19 + 8 | 0;
             HEAP32[(wasm2js_i32$1 + 56 | 0) >> 2] = wasm2js_i32$2;
             break label$7;
            };
            $20 = $3 + 24 | 0;
            label$26 : do {
             $0 = $9;
             if (($8 | 0) == (0 | 0)) break label$8;
             if (($10 | 0) == (0 | 0)) break label$10;
             label$27 : {
              wasm2js_i32$5 = HEAPU32[$20 >> 2] | 0;
              wasm2js_i32$3 = HEAPU32[$0 >> 2] | 0;
              wasm2js_i32$4 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
              wasm2js_i32$2 = HEAPU32[((HEAPU32[$4 >> 2] | 0) + 12 | 0) >> 2] | 0;
              wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$2 & 63](wasm2js_i32$5 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0) | 0;
              if (wasm2js_i32$1) break label$27;
              $9 = $0 + 8 | 0;
              $8 = $8 + 4294967288 | 0;
              $10 = $10 + 4294967288 | 0;
              $1 = HEAPU32[$7 >> 2] | 0;
              $2 = HEAPU32[($7 + 4 | 0) >> 2] | 0;
              $7 = $7 + 8 | 0;
              wasm2js_i32$3 = $1;
              wasm2js_i32$5 = $3;
              wasm2js_i32$4 = $2;
              wasm2js_i32$2 = FUNCTION_TABLE_iii[wasm2js_i32$4 & 63](wasm2js_i32$3 | 0, wasm2js_i32$5 | 0) | 0;
              wasm2js_i32$1 = (wasm2js_i32$2 | 0) == (0 | 0);
              if (wasm2js_i32$1) continue label$26;
             };
             break label$26;
            } while (1);
            wasm2js_i32$1 = $3;
            wasm2js_i32$2 = $0 + 8 | 0;
            HEAP32[(wasm2js_i32$1 + 56 | 0) >> 2] = wasm2js_i32$2;
            break label$7;
           };
           $0 = $11;
           break label$8;
          };
          $0 = $9 + $1 | 0;
         };
         wasm2js_i32$1 = $3;
         wasm2js_i32$2 = $0;
         HEAP32[(wasm2js_i32$1 + 56 | 0) >> 2] = wasm2js_i32$2;
         if (($0 | 0) == ($11 | 0)) break label$6;
         wasm2js_i32$1 = $3;
         wasm2js_i32$2 = $0 + 8 | 0;
         HEAP32[(wasm2js_i32$1 + 56 | 0) >> 2] = wasm2js_i32$2;
         wasm2js_i32$5 = HEAPU32[($3 + 24 | 0) >> 2] | 0;
         wasm2js_i32$3 = HEAPU32[$0 >> 2] | 0;
         wasm2js_i32$6 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
         wasm2js_i32$4 = HEAPU32[((HEAPU32[($3 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
         wasm2js_i32$2 = FUNCTION_TABLE_iiii[wasm2js_i32$4 & 63](wasm2js_i32$5 | 0, wasm2js_i32$3 | 0, wasm2js_i32$6 | 0) | 0;
         wasm2js_i32$1 = (wasm2js_i32$2 | 0) == (0 | 0);
         if (wasm2js_i32$1) break label$6;
        };
        $0 = 1;
        break label$5;
       };
       $0 = 0;
      };
      global$0 = $3 + 64 | 0;
      return $0 | 0;
     };
     core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056376 | 0, $8 | 0, $20 | 0);
     abort();
    };
    core__panicking__panic__h629a30fc6a0298aa(1056072 | 0);
    abort();
   };
   core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056392 | 0, $21 | 0, $20 | 0);
   abort();
  };
  core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056392 | 0, $21 | 0, $20 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$core__ops__range__Range$LT$Idx$GT$$u20$as$u20$core__fmt__Debug$GT$__fmt__hbfb5374d68f45cd8($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  wasm2js_i32$0 = ($2 + 8 | 0) + 12 | 0;
  wasm2js_i32$1 = 41;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 41;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0 + 4 | 0;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  $0 = HEAPU32[($1 + 28 | 0) >> 2] | 0;
  $1 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
  wasm2js_i32$0 = ($2 + 24 | 0) + 12 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 44 | 0;
  wasm2js_i32$1 = 2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 2;
  HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1056024;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050832;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  $1 = core__fmt__write__h3465a327d1942227($1 | 0, $0 | 0, $2 + 24 | 0 | 0) | 0;
  global$0 = $2 + 48 | 0;
  return $1 | 0;
 }
 
 function core__fmt__num___$LT$impl$u20$core__fmt__Debug$u20$for$u20$usize$GT$__fmt__hd3a1cdae2d7391fb($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $4 = 0, $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2 = global$0 - 128 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       $3 = HEAPU32[$1 >> 2] | 0;
       if ($3 & 16 | 0) break label$5;
       if ($3 & 32 | 0) break label$4;
       $0 = core__fmt__num___$LT$impl$u20$core__fmt__Display$u20$for$u20$u32$GT$__fmt__h8b94494cfc7621e3($0 | 0, $1 | 0) | 0;
       break label$3;
      };
      $3 = HEAPU32[$0 >> 2] | 0;
      $0 = 0;
      label$6 : do {
       $4 = $3 & 15 | 0;
       wasm2js_i32$1 = ($2 + $0 | 0) + 127 | 0;
       wasm2js_i32$2 = (wasm2js_i32$3 = $4 | 48 | 0, wasm2js_i32$4 = $4 + 87 | 0, wasm2js_i32$5 = $4 >>> 0 < 10 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4);
       HEAP8[wasm2js_i32$1 >> 0] = wasm2js_i32$2;
       $0 = $0 + 4294967295 | 0;
       $3 = $3 >>> 4 | 0;
       if ($3) continue label$6;
       break label$6;
      } while (1);
      $3 = $0 + 128 | 0;
      if ($3 >>> 0 >= 129 >>> 0) break label$2;
      $0 = core__fmt__Formatter__pad_integral__h82ce61d67891b79a($1 | 0, 1 | 0, 1051752 | 0, 2 | 0, ($2 + $0 | 0) + 128 | 0 | 0, 0 - $0 | 0 | 0) | 0;
      break label$3;
     };
     $3 = HEAPU32[$0 >> 2] | 0;
     $0 = 0;
     label$7 : do {
      $4 = $3 & 15 | 0;
      wasm2js_i32$1 = ($2 + $0 | 0) + 127 | 0;
      wasm2js_i32$2 = (wasm2js_i32$3 = $4 | 48 | 0, wasm2js_i32$4 = $4 + 55 | 0, wasm2js_i32$5 = $4 >>> 0 < 10 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4);
      HEAP8[wasm2js_i32$1 >> 0] = wasm2js_i32$2;
      $0 = $0 + 4294967295 | 0;
      $3 = $3 >>> 4 | 0;
      if ($3) continue label$7;
      break label$7;
     } while (1);
     $3 = $0 + 128 | 0;
     if ($3 >>> 0 >= 129 >>> 0) break label$1;
     $0 = core__fmt__Formatter__pad_integral__h82ce61d67891b79a($1 | 0, 1 | 0, 1051752 | 0, 2 | 0, ($2 + $0 | 0) + 128 | 0 | 0, 0 - $0 | 0 | 0) | 0;
    };
    global$0 = $2 + 128 | 0;
    return $0 | 0;
   };
   core__slice__slice_index_order_fail__h7296d4883457da71($3 | 0, 128 | 0);
   abort();
  };
  core__slice__slice_index_order_fail__h7296d4883457da71($3 | 0, 128 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hbab2a5b3867d9af8($0) {
  $0 = $0 | 0;
  i64toi32_i32$HIGH_BITS = 2608161065;
  return 2969088188 | 0;
 }
 
 function core__panic__PanicInfo__message__h62e60153ff810ddd($0) {
  $0 = $0 | 0;
  return HEAPU32[($0 + 8 | 0) >> 2] | 0 | 0;
 }
 
 function core__panic__PanicInfo__location__h25db22b6d7930a49($0) {
  $0 = $0 | 0;
  return $0 + 12 | 0 | 0;
 }
 
 function _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h7c804ef4a5006926($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return core__fmt__Formatter__pad__h3590797d97915edc($1 | 0, HEAPU32[$0 >> 2] | 0 | 0, HEAPU32[($0 + 4 | 0) >> 2] | 0 | 0) | 0 | 0;
 }
 
 function core__panic__Location__internal_constructor__he79d11ef9249e7b4($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $2;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $4;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
 }
 
 function core__panic__Location__file__h1644370c8c36f000($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $4 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $4;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
 }
 
 function core__panic__Location__line__h0de6bf199e5baf47($0) {
  $0 = $0 | 0;
  return HEAPU32[($0 + 8 | 0) >> 2] | 0 | 0;
 }
 
 function core__panic__Location__column__hedd38315197305fe($0) {
  $0 = $0 | 0;
  return HEAPU32[($0 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function core__option__expect_failed__h15c623a42aab9ec5($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = global$0 - 48 | 0;
  global$0 = $2;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $0;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 28 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2 + 36 | 0;
  wasm2js_i32$1 = 1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 37;
  HEAP32[(wasm2js_i32$0 + 44 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1056096;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = 1050904;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 40 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $2;
  wasm2js_i32$1 = $2 + 40 | 0;
  HEAP32[(wasm2js_i32$0 + 32 | 0) >> 2] = wasm2js_i32$1;
  core__panicking__panic_fmt__he3157e9749b52890($2 + 16 | 0 | 0, 1056104 | 0);
  abort();
 }
 
 function core__slice__memchr__memchr__h53efca7e69b2613d($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $5 = 0, $10 = 0, $7 = 0, $9 = 0, $4 = 0, $8 = 0, $6 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;
  $4 = 0;
  label$1 : {
   label$2 : {
    $5 = $2 & 3 | 0;
    if (($5 | 0) == (0 | 0)) break label$2;
    $5 = 4 - $5 | 0;
    if (($5 | 0) == (0 | 0)) break label$2;
    $4 = (wasm2js_i32$0 = $3, wasm2js_i32$1 = $5, wasm2js_i32$2 = $5 >>> 0 > $3 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
    $6 = $2 + $4 | 0;
    $5 = 0;
    $7 = $1 & 255 | 0;
    $8 = $4;
    $9 = $2;
    label$3 : {
     label$4 : {
      label$5 : do {
       if (($6 - $9 | 0) >>> 0 <= 3 >>> 0) break label$4;
       $10 = HEAPU8[$9 >> 0] | 0;
       $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
       if (($10 | 0) == ($7 | 0)) break label$3;
       $10 = HEAPU8[($9 + 1 | 0) >> 0] | 0;
       $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
       if (($10 | 0) == ($7 | 0)) break label$3;
       $10 = HEAPU8[($9 + 2 | 0) >> 0] | 0;
       $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
       if (($10 | 0) == ($7 | 0)) break label$3;
       $10 = HEAPU8[($9 + 3 | 0) >> 0] | 0;
       $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
       $8 = $8 + 4294967292 | 0;
       $9 = $9 + 4 | 0;
       if (($10 | 0) != ($7 | 0)) continue label$5;
       break label$3;
       break label$5;
      } while (1);
     };
     $7 = 0;
     $6 = $1 & 255 | 0;
     label$6 : do {
      if (($8 | 0) == (0 | 0)) break label$2;
      $10 = $9 + $7 | 0;
      $8 = $8 + 4294967295 | 0;
      $7 = $7 + 1 | 0;
      $10 = HEAPU8[$10 >> 0] | 0;
      if (($10 | 0) != ($6 | 0)) continue label$6;
      break label$6;
     } while (1);
     $5 = (((((($10 | 0) == ($1 & 255 | 0 | 0)) + 1 | 0) & 1 | 0) + $5 | 0) + $7 | 0) + 4294967295 | 0;
    };
    $9 = 1;
    break label$1;
   };
   $7 = $1 & 255 | 0;
   label$7 : {
    label$8 : {
     if ($3 >>> 0 < 8 >>> 0) break label$8;
     $10 = $3 + 4294967288 | 0;
     if ($4 >>> 0 > $10 >>> 0) break label$8;
     $5 = Math_imul($7, 16843009);
     label$9 : {
      label$10 : do {
       $9 = $2 + $4 | 0;
       $8 = (HEAPU32[($9 + 4 | 0) >> 2] | 0) ^ $5 | 0;
       $9 = (HEAPU32[$9 >> 2] | 0) ^ $5 | 0;
       if ((($8 ^ 4294967295 | 0) & ($8 + 4278124287 | 0) | 0 | (($9 ^ 4294967295 | 0) & ($9 + 4278124287 | 0) | 0) | 0) & 2155905152 | 0) break label$9;
       $4 = $4 + 8 | 0;
       if ($4 >>> 0 <= $10 >>> 0) continue label$10;
       break label$10;
      } while (1);
     };
     if ($4 >>> 0 > $3 >>> 0) break label$7;
    };
    $9 = $2 + $4 | 0;
    $2 = $2 + $3 | 0;
    $8 = $3 - $4 | 0;
    $5 = 0;
    label$11 : {
     label$12 : {
      label$13 : {
       label$14 : do {
        if (($2 - $9 | 0) >>> 0 <= 3 >>> 0) break label$13;
        $10 = HEAPU8[$9 >> 0] | 0;
        $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
        if (($10 | 0) == ($7 | 0)) break label$12;
        $10 = HEAPU8[($9 + 1 | 0) >> 0] | 0;
        $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
        if (($10 | 0) == ($7 | 0)) break label$12;
        $10 = HEAPU8[($9 + 2 | 0) >> 0] | 0;
        $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
        if (($10 | 0) == ($7 | 0)) break label$12;
        $10 = HEAPU8[($9 + 3 | 0) >> 0] | 0;
        $5 = $5 + (($10 | 0) != ($7 | 0)) | 0;
        $8 = $8 + 4294967292 | 0;
        $9 = $9 + 4 | 0;
        if (($10 | 0) != ($7 | 0)) continue label$14;
        break label$12;
        break label$14;
       } while (1);
      };
      $7 = 0;
      $2 = $1 & 255 | 0;
      label$15 : do {
       if (($8 | 0) == (0 | 0)) break label$11;
       $10 = $9 + $7 | 0;
       $8 = $8 + 4294967295 | 0;
       $7 = $7 + 1 | 0;
       $10 = HEAPU8[$10 >> 0] | 0;
       if (($10 | 0) != ($2 | 0)) continue label$15;
       break label$15;
      } while (1);
      $5 = (((((($10 | 0) == ($1 & 255 | 0 | 0)) + 1 | 0) & 1 | 0) + $5 | 0) + $7 | 0) + 4294967295 | 0;
     };
     $9 = 1;
     $5 = $5 + $4 | 0;
     break label$1;
    };
    $9 = 0;
    $5 = ($5 + $7 | 0) + $4 | 0;
    break label$1;
   };
   core__slice__slice_index_order_fail__h7296d4883457da71($4 | 0, $3 | 0);
   abort();
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $5;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $9;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function core__str__pattern__StrSearcher__new__h77816f7d465d5371($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $9 = 0, $10 = 0, $11 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $5 = 0, $12 = 0, i64toi32_i32$2 = 0, $6 = 0, $7 = 0, i64toi32_i32$3 = 0, $8 = 0, i64toi32_i32$4 = 0, $13 = 0, $15$hi = 0, $15 = 0, $14 = 0, $28 = 0, $29 = 0, $169 = 0, $169$hi = 0, $170$hi = 0, $336 = 0, $336$hi = 0, $337$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               label$14 : {
                if (($4 | 0) == (0 | 0)) break label$14;
                $5 = 0;
                $6 = $4;
                $7 = $4;
                $8 = 0;
                label$15 : {
                 if (($4 | 0) == (1 | 0)) break label$15;
                 $9 = 1;
                 $5 = 0;
                 $10 = 1;
                 $11 = 0;
                 $6 = 1;
                 label$16 : do {
                  $12 = $10;
                  $10 = $11 + $5 | 0;
                  if ($10 >>> 0 >= $4 >>> 0) break label$10;
                  label$17 : {
                   label$18 : {
                    $9 = (HEAPU8[($3 + $9 | 0) >> 0] | 0) & 255 | 0;
                    $10 = HEAPU8[($3 + $10 | 0) >> 0] | 0;
                    if ($9 >>> 0 >= $10 >>> 0) break label$18;
                    $10 = ($12 + $11 | 0) + 1 | 0;
                    $6 = $10 - $5 | 0;
                    $11 = 0;
                    break label$17;
                   };
                   label$19 : {
                    if (($9 | 0) != ($10 | 0)) break label$19;
                    $10 = $11 + 1 | 0;
                    $9 = ($10 | 0) == ($6 | 0);
                    $11 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = $10, wasm2js_i32$2 = $9, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                    $10 = (wasm2js_i32$0 = $10, wasm2js_i32$1 = 0, wasm2js_i32$2 = $9, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) + $12 | 0;
                    break label$17;
                   };
                   $6 = 1;
                   $10 = $12 + 1 | 0;
                   $11 = 0;
                   $5 = $12;
                  };
                  $9 = $10 + $11 | 0;
                  if ($9 >>> 0 < $4 >>> 0) continue label$16;
                  break label$16;
                 } while (1);
                 $9 = 1;
                 $8 = 0;
                 $10 = 1;
                 $11 = 0;
                 $7 = 1;
                 label$20 : do {
                  $12 = $10;
                  $10 = $11 + $8 | 0;
                  if ($10 >>> 0 >= $4 >>> 0) break label$9;
                  label$21 : {
                   label$22 : {
                    $9 = (HEAPU8[($3 + $9 | 0) >> 0] | 0) & 255 | 0;
                    $10 = HEAPU8[($3 + $10 | 0) >> 0] | 0;
                    if ($9 >>> 0 <= $10 >>> 0) break label$22;
                    $10 = ($12 + $11 | 0) + 1 | 0;
                    $7 = $10 - $8 | 0;
                    $11 = 0;
                    break label$21;
                   };
                   label$23 : {
                    if (($9 | 0) != ($10 | 0)) break label$23;
                    $10 = $11 + 1 | 0;
                    $9 = ($10 | 0) == ($7 | 0);
                    $11 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = $10, wasm2js_i32$2 = $9, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                    $10 = (wasm2js_i32$0 = $10, wasm2js_i32$1 = 0, wasm2js_i32$2 = $9, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) + $12 | 0;
                    break label$21;
                   };
                   $7 = 1;
                   $10 = $12 + 1 | 0;
                   $11 = 0;
                   $8 = $12;
                  };
                  $9 = $10 + $11 | 0;
                  if ($9 >>> 0 < $4 >>> 0) continue label$20;
                  break label$20;
                 } while (1);
                };
                $11 = $5 >>> 0 > $8 >>> 0;
                $13 = (wasm2js_i32$0 = $5, wasm2js_i32$1 = $8, wasm2js_i32$2 = $11, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                if ($13 >>> 0 > $4 >>> 0) break label$4;
                $10 = (wasm2js_i32$0 = $6, wasm2js_i32$1 = $7, wasm2js_i32$2 = $11, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                $11 = $10 + $13 | 0;
                if ($11 >>> 0 < $10 >>> 0) break label$3;
                if ($11 >>> 0 > $4 >>> 0) break label$2;
                label$24 : {
                 if (($10 | 0) == (0 | 0)) break label$24;
                 if ((memcmp($3 | 0, $3 + $10 | 0 | 0, $13 | 0) | 0 | 0) == (0 | 0)) break label$24;
                 $11 = $4 - $13 | 0;
                 $12 = (wasm2js_i32$0 = $13, wasm2js_i32$1 = $11, wasm2js_i32$2 = $11 >>> 0 < $13 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                 i64toi32_i32$0 = 0;
                 $15 = 0;
                 $15$hi = i64toi32_i32$0;
                 $10 = $4;
                 $11 = $3;
                 label$25 : do {
                  i64toi32_i32$2 = $11;
                  i64toi32_i32$0 = HEAPU8[$11 >> 0] | 0;
                  i64toi32_i32$1 = 0;
                  i64toi32_i32$1 = i64toi32_i32$1;
                  i64toi32_i32$2 = i64toi32_i32$0;
                  i64toi32_i32$0 = 0;
                  i64toi32_i32$3 = 63;
                  i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
                  $169 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
                  $169$hi = i64toi32_i32$0;
                  i64toi32_i32$0 = 0;
                  i64toi32_i32$1 = 1;
                  i64toi32_i32$2 = $169$hi;
                  i64toi32_i32$3 = $169;
                  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
                  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                   i64toi32_i32$2 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
                   $28 = 0;
                  } else {
                   i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
                   $28 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
                  }
                  $170$hi = i64toi32_i32$2;
                  i64toi32_i32$2 = $15$hi;
                  i64toi32_i32$2 = $170$hi;
                  i64toi32_i32$0 = $28;
                  i64toi32_i32$1 = $15$hi;
                  i64toi32_i32$3 = $15;
                  i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
                  i64toi32_i32$1 = i64toi32_i32$1;
                  $15 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
                  $15$hi = i64toi32_i32$1;
                  $11 = $11 + 1 | 0;
                  $10 = $10 + 4294967295 | 0;
                  if ($10) continue label$25;
                  break label$25;
                 } while (1);
                 $10 = $12 + 1 | 0;
                 $12 = 4294967295;
                 $9 = $13;
                 $11 = 4294967295;
                 break label$11;
                };
                $7 = 1;
                $11 = 0;
                $9 = 1;
                $8 = 0;
                label$26 : {
                 label$27 : do {
                  $12 = $9;
                  $6 = $9 + $11 | 0;
                  if ($6 >>> 0 >= $4 >>> 0) break label$26;
                  $9 = ($4 - $11 | 0) + ($12 ^ 4294967295 | 0) | 0;
                  if ($9 >>> 0 >= $4 >>> 0) break label$8;
                  $5 = (($11 ^ 4294967295 | 0) + $4 | 0) - $8 | 0;
                  if ($5 >>> 0 >= $4 >>> 0) break label$7;
                  label$28 : {
                   $9 = (HEAPU8[($3 + $9 | 0) >> 0] | 0) & 255 | 0;
                   $5 = HEAPU8[($3 + $5 | 0) >> 0] | 0;
                   if ($9 >>> 0 >= $5 >>> 0) break label$28;
                   $11 = 0;
                   $9 = $6 + 1 | 0;
                   $7 = $9 - $8 | 0;
                   if (($7 | 0) != ($10 | 0)) continue label$27;
                   break label$26;
                  };
                  label$29 : {
                   if (($9 | 0) != ($5 | 0)) break label$29;
                   $9 = $11 + 1 | 0;
                   $5 = ($9 | 0) == ($7 | 0);
                   $11 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = $9, wasm2js_i32$2 = $5, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                   $9 = (wasm2js_i32$0 = $9, wasm2js_i32$1 = 0, wasm2js_i32$2 = $5, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) + $12 | 0;
                   if (($7 | 0) != ($10 | 0)) continue label$27;
                   break label$26;
                  };
                  $9 = $12 + 1 | 0;
                  $11 = 0;
                  $7 = 1;
                  $8 = $12;
                  if ((1 | 0) != ($10 | 0)) continue label$27;
                  break label$27;
                 } while (1);
                };
                $14 = 1;
                $11 = 0;
                $9 = 1;
                $6 = 0;
                label$30 : {
                 label$31 : do {
                  $12 = $9;
                  $7 = $9 + $11 | 0;
                  if ($7 >>> 0 >= $4 >>> 0) break label$30;
                  $9 = ($4 - $11 | 0) + ($12 ^ 4294967295 | 0) | 0;
                  if ($9 >>> 0 >= $4 >>> 0) break label$6;
                  $5 = (($11 ^ 4294967295 | 0) + $4 | 0) - $6 | 0;
                  if ($5 >>> 0 >= $4 >>> 0) break label$5;
                  label$32 : {
                   $9 = (HEAPU8[($3 + $9 | 0) >> 0] | 0) & 255 | 0;
                   $5 = HEAPU8[($3 + $5 | 0) >> 0] | 0;
                   if ($9 >>> 0 <= $5 >>> 0) break label$32;
                   $11 = 0;
                   $9 = $7 + 1 | 0;
                   $14 = $9 - $6 | 0;
                   if (($14 | 0) != ($10 | 0)) continue label$31;
                   break label$30;
                  };
                  label$33 : {
                   if (($9 | 0) != ($5 | 0)) break label$33;
                   $9 = $11 + 1 | 0;
                   $5 = ($9 | 0) == ($14 | 0);
                   $11 = (wasm2js_i32$0 = 0, wasm2js_i32$1 = $9, wasm2js_i32$2 = $5, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
                   $9 = (wasm2js_i32$0 = $9, wasm2js_i32$1 = 0, wasm2js_i32$2 = $5, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) + $12 | 0;
                   if (($14 | 0) != ($10 | 0)) continue label$31;
                   break label$30;
                  };
                  $9 = $12 + 1 | 0;
                  $11 = 0;
                  $14 = 1;
                  $6 = $12;
                  if ((1 | 0) != ($10 | 0)) continue label$31;
                  break label$31;
                 } while (1);
                };
                if ($10 >>> 0 > $4 >>> 0) break label$1;
                $9 = $4 - (wasm2js_i32$0 = $8, wasm2js_i32$1 = $6, wasm2js_i32$2 = $6 >>> 0 < $8 >>> 0, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0;
                i64toi32_i32$1 = 0;
                $15 = 0;
                $15$hi = i64toi32_i32$1;
                if (($10 | 0) == (0 | 0)) break label$13;
                $12 = 0;
                $11 = 0;
                label$34 : do {
                 i64toi32_i32$2 = $3 + $11 | 0;
                 i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0;
                 i64toi32_i32$0 = 0;
                 i64toi32_i32$0 = i64toi32_i32$0;
                 i64toi32_i32$2 = i64toi32_i32$1;
                 i64toi32_i32$1 = 0;
                 i64toi32_i32$3 = 63;
                 i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
                 $336 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
                 $336$hi = i64toi32_i32$1;
                 i64toi32_i32$1 = 0;
                 i64toi32_i32$0 = 1;
                 i64toi32_i32$2 = $336$hi;
                 i64toi32_i32$3 = $336;
                 i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
                 if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                  i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
                  $29 = 0;
                 } else {
                  i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
                  $29 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
                 }
                 $337$hi = i64toi32_i32$2;
                 i64toi32_i32$2 = $15$hi;
                 i64toi32_i32$2 = $337$hi;
                 i64toi32_i32$1 = $29;
                 i64toi32_i32$0 = $15$hi;
                 i64toi32_i32$3 = $15;
                 i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
                 i64toi32_i32$0 = i64toi32_i32$0;
                 $15 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
                 $15$hi = i64toi32_i32$0;
                 $11 = $11 + 1 | 0;
                 if (($10 | 0) != ($11 | 0)) continue label$34;
                 break label$12;
                 break label$34;
                } while (1);
               };
               wasm2js_i32$0 = $0;
               wasm2js_i32$1 = $1;
               HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $0;
               wasm2js_i32$1 = $3;
               HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
               i64toi32_i32$1 = $0;
               i64toi32_i32$0 = 0;
               wasm2js_i32$0 = $0;
               wasm2js_i32$1 = 0;
               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $0;
               wasm2js_i32$1 = i64toi32_i32$0;
               (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
               wasm2js_i32$0 = $0 + 52 | 0;
               wasm2js_i32$1 = $2;
               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $0 + 60 | 0;
               wasm2js_i32$1 = 0;
               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $0 + 8 | 0;
               wasm2js_i32$1 = $2;
               HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
               wasm2js_i32$0 = $0 + 12 | 0;
               wasm2js_i32$1 = 257;
               HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;
               return;
              };
              $10 = 0;
              $12 = 0;
             };
             $11 = $4;
            };
            wasm2js_i32$0 = $0;
            wasm2js_i32$1 = $1;
            HEAP32[(wasm2js_i32$0 + 48 | 0) >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0;
            wasm2js_i32$1 = $3;
            HEAP32[(wasm2js_i32$0 + 56 | 0) >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0;
            wasm2js_i32$1 = 1;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 52 | 0;
            wasm2js_i32$1 = $2;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 60 | 0;
            wasm2js_i32$1 = $4;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            i64toi32_i32$0 = $15$hi;
            i64toi32_i32$1 = $0 + 8 | 0;
            i64toi32_i32$0 = i64toi32_i32$0;
            wasm2js_i32$0 = i64toi32_i32$1;
            wasm2js_i32$1 = $15;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = i64toi32_i32$1;
            wasm2js_i32$1 = i64toi32_i32$0;
            (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
            wasm2js_i32$0 = $0 + 16 | 0;
            wasm2js_i32$1 = $13;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 20 | 0;
            wasm2js_i32$1 = $9;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 24 | 0;
            wasm2js_i32$1 = $10;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 28 | 0;
            wasm2js_i32$1 = 0;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 32 | 0;
            wasm2js_i32$1 = $2;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 36 | 0;
            wasm2js_i32$1 = $12;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            wasm2js_i32$0 = $0 + 40 | 0;
            wasm2js_i32$1 = $11;
            HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
            return;
           };
           core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056184 | 0, $10 | 0, $4 | 0);
           abort();
          };
          core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056184 | 0, $10 | 0, $4 | 0);
          abort();
         };
         core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056200 | 0, $9 | 0, $4 | 0);
         abort();
        };
        core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056216 | 0, $5 | 0, $4 | 0);
        abort();
       };
       core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056200 | 0, $9 | 0, $4 | 0);
       abort();
      };
      core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056216 | 0, $5 | 0, $4 | 0);
      abort();
     };
     core__slice__slice_index_len_fail__h9aa177f21a8ff28c($13 | 0, $4 | 0);
     abort();
    };
    core__slice__slice_index_order_fail__h7296d4883457da71($10 | 0, $11 | 0);
    abort();
   };
   core__slice__slice_index_len_fail__h9aa177f21a8ff28c($11 | 0, $4 | 0);
   abort();
  };
  core__slice__slice_index_len_fail__h9aa177f21a8ff28c($10 | 0, $4 | 0);
  abort();
 }
 
 function core__unicode__bool_trie__BoolTrie__lookup__h10a11d72c9027fe3($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, i64toi32_i32$3 = 0, i64toi32_i32$4 = 0, $13 = 0, $72 = 0, $72$hi = 0, $75$hi = 0, $76$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         if ($1 >>> 0 >= 2048 >>> 0) break label$7;
         $0 = $0 + (($1 >>> 3 | 0) & 536870904 | 0) | 0;
         break label$6;
        };
        label$8 : {
         if ($1 >>> 0 >= 65536 >>> 0) break label$8;
         $2 = ($1 >>> 6 | 0) + 4294967264 | 0;
         if ($2 >>> 0 >= 992 >>> 0) break label$5;
         $3 = HEAPU32[($0 + 260 | 0) >> 2] | 0;
         $2 = HEAPU8[(($0 + $2 | 0) + 280 | 0) >> 0] | 0;
         if ($3 >>> 0 <= $2 >>> 0) break label$4;
         $0 = (HEAPU32[($0 + 256 | 0) >> 2] | 0) + ($2 << 3 | 0) | 0;
         break label$6;
        };
        $2 = ($1 >>> 12 | 0) + 4294967280 | 0;
        if ($2 >>> 0 >= 256 >>> 0) break label$3;
        $2 = (HEAPU8[(($0 + $2 | 0) + 1272 | 0) >> 0] | 0) << 6 | 0 | (($1 >>> 6 | 0) & 63 | 0) | 0;
        $3 = HEAPU32[($0 + 268 | 0) >> 2] | 0;
        if ($2 >>> 0 >= $3 >>> 0) break label$2;
        $3 = HEAPU32[($0 + 276 | 0) >> 2] | 0;
        $2 = HEAPU8[((HEAPU32[($0 + 264 | 0) >> 2] | 0) + $2 | 0) >> 0] | 0;
        if ($3 >>> 0 <= $2 >>> 0) break label$1;
        $0 = (HEAPU32[($0 + 272 | 0) >> 2] | 0) + ($2 << 3 | 0) | 0;
       };
       i64toi32_i32$2 = $0;
       i64toi32_i32$0 = HEAPU32[$0 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$1 = $0, HEAPU8[(wasm2js_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
       $72 = i64toi32_i32$0;
       $72$hi = i64toi32_i32$1;
       i64toi32_i32$1 = 0;
       $75$hi = i64toi32_i32$1;
       i64toi32_i32$1 = 0;
       i64toi32_i32$2 = 1;
       i64toi32_i32$0 = $75$hi;
       i64toi32_i32$3 = $1 & 63 | 0;
       i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
       if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
        i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
        $13 = 0;
       } else {
        i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
        $13 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
       }
       $76$hi = i64toi32_i32$0;
       i64toi32_i32$0 = $72$hi;
       i64toi32_i32$1 = $72;
       i64toi32_i32$2 = $76$hi;
       i64toi32_i32$3 = $13;
       i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
       i64toi32_i32$2 = i64toi32_i32$2;
       i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
       i64toi32_i32$1 = 0;
       i64toi32_i32$3 = 0;
       return (i64toi32_i32$0 | 0) != (i64toi32_i32$3 | 0) | (i64toi32_i32$2 | 0) != (i64toi32_i32$1 | 0) | 0 | 0;
      };
      core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056408 | 0, $2 | 0, 992 | 0);
      abort();
     };
     core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056424 | 0, $2 | 0, $3 | 0);
     abort();
    };
    core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056440 | 0, $2 | 0, 256 | 0);
    abort();
   };
   core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056456 | 0, $2 | 0, $3 | 0);
   abort();
  };
  core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056472 | 0, $2 | 0, $3 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function core__unicode__printable__is_printable__h6ac2bb42585e1229($0) {
  $0 = $0 | 0;
  label$1 : {
   if ($0 >>> 0 > 65535 >>> 0) break label$1;
   return core__unicode__printable__check__hb45596455e616d2a($0 | 0, 1051820 | 0, 40 | 0, 1051900 | 0, 303 | 0, 1052203 | 0, 316 | 0) | 0 | 0;
  };
  label$2 : {
   if ($0 >>> 0 > 131071 >>> 0) break label$2;
   return core__unicode__printable__check__hb45596455e616d2a($0 | 0, 1052519 | 0, 33 | 0, 1052585 | 0, 158 | 0, 1052743 | 0, 381 | 0) | 0 | 0;
  };
  label$3 : {
   if (($0 + 4294772194 | 0) >>> 0 < 722658 >>> 0) break label$3;
   if (($0 + 4294775839 | 0) >>> 0 < 3103 >>> 0) break label$3;
   if (($0 + 4294783326 | 0) >>> 0 < 14 >>> 0) break label$3;
   if (($0 & 2097150 | 0 | 0) == (178206 | 0)) break label$3;
   if (($0 + 4294793513 | 0) >>> 0 < 41 >>> 0) break label$3;
   if (($0 + 4294789323 | 0) >>> 0 <= 10 >>> 0) break label$3;
   return ($0 + 4294049296 | 0) >>> 0 > 196111 >>> 0 | 0;
  };
  return 0 | 0;
 }
 
 function _$LT$char$u20$as$u20$core__fmt__Debug$GT$__fmt__h7802b453079faca3($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$5 = 0, i64toi32_i32$3 = 0, $2 = 0, $7 = 0, i64toi32_i32$2 = 0, $7$hi = 0, i64toi32_i32$4 = 0, $3 = 0, $4 = 0, $18 = 0, $5 = 0, $87 = 0, $87$hi = 0, $89 = 0, $89$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $2 = 1;
  label$1 : {
   wasm2js_i32$2 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
   wasm2js_i32$3 = 39;
   wasm2js_i32$1 = HEAPU32[((HEAPU32[($1 + 28 | 0) >> 2] | 0) + 16 | 0) >> 2] | 0;
   wasm2js_i32$0 = FUNCTION_TABLE_iii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$3 | 0) | 0;
   if (wasm2js_i32$0) break label$1;
   $3 = 2;
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             $2 = HEAPU32[$0 >> 2] | 0;
             $0 = $2 + 4294967287 | 0;
             if ($0 >>> 0 > 30 >>> 0) break label$11;
             $4 = 116;
             label$12 : {
              switch ($0 | 0) {
              case 0:
               break label$2;
              case 1:
               break label$12;
              case 2:
               break label$10;
              case 3:
               break label$10;
              case 4:
               break label$9;
              case 5:
               break label$10;
              case 6:
               break label$10;
              case 7:
               break label$10;
              case 8:
               break label$10;
              case 9:
               break label$10;
              case 10:
               break label$10;
              case 11:
               break label$10;
              case 12:
               break label$10;
              case 13:
               break label$10;
              case 14:
               break label$10;
              case 15:
               break label$10;
              case 16:
               break label$10;
              case 17:
               break label$10;
              case 18:
               break label$10;
              case 19:
               break label$10;
              case 20:
               break label$10;
              case 21:
               break label$10;
              case 22:
               break label$10;
              case 23:
               break label$10;
              case 24:
               break label$10;
              case 25:
               break label$6;
              case 26:
               break label$10;
              case 27:
               break label$10;
              case 28:
               break label$10;
              case 29:
               break label$10;
              case 30:
               break label$6;
              default:
               break label$2;
              };
             };
             $4 = 110;
             break label$8;
            };
            if (($2 | 0) == (92 | 0)) break label$6;
           };
           if ((core__unicode__bool_trie__BoolTrie__lookup__h10a11d72c9027fe3(1056504 | 0, $2 | 0) | 0 | 0) == (0 | 0)) break label$7;
           i64toi32_i32$0 = 0;
           i64toi32_i32$0 = i64toi32_i32$0;
           i64toi32_i32$2 = (Math_clz32($2 | 1 | 0) >>> 2 | 0) ^ 7 | 0;
           i64toi32_i32$1 = 5;
           i64toi32_i32$3 = 0;
           i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
           i64toi32_i32$1 = i64toi32_i32$1;
           $7 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
           $7$hi = i64toi32_i32$1;
           break label$4;
          };
          $4 = 114;
         };
         break label$2;
        };
        if ((core__unicode__printable__is_printable__h6ac2bb42585e1229($2 | 0) | 0 | 0) == (0 | 0)) break label$5;
        $3 = 1;
       };
       break label$3;
      };
      i64toi32_i32$1 = 0;
      i64toi32_i32$1 = i64toi32_i32$1;
      i64toi32_i32$0 = (Math_clz32($2 | 1 | 0) >>> 2 | 0) ^ 7 | 0;
      i64toi32_i32$2 = 5;
      i64toi32_i32$3 = 0;
      i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
      i64toi32_i32$2 = i64toi32_i32$2;
      $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
      $7$hi = i64toi32_i32$2;
     };
     $3 = 3;
    };
    $4 = $2;
   };
   $0 = $1 + 24 | 0;
   $5 = $1 + 28 | 0;
   label$13 : do {
    label$14 : {
     label$15 : {
      label$16 : {
       label$17 : {
        label$18 : {
         label$19 : {
          label$20 : {
           label$21 : {
            label$22 : {
             $2 = $3 & 3 | 0;
             if (($2 | 0) == (1 | 0)) break label$22;
             if (($2 | 0) == (2 | 0)) break label$21;
             if (($2 | 0) != (3 | 0)) break label$15;
             i64toi32_i32$2 = $7$hi;
             i64toi32_i32$2 = i64toi32_i32$2;
             i64toi32_i32$1 = $7;
             i64toi32_i32$0 = 0;
             i64toi32_i32$3 = 32;
             i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
             if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
              i64toi32_i32$0 = 0;
              $18 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
             } else {
              i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
              $18 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
             }
             i64toi32_i32$0 = i64toi32_i32$0;
             $2 = ($18 & 7 | 0) + 4294967295 | 0;
             if ($2 >>> 0 > 4 >>> 0) break label$15;
             label$23 : {
              switch ($2 | 0) {
              case 0:
               break label$23;
              case 1:
               break label$20;
              case 2:
               break label$19;
              case 3:
               break label$18;
              case 4:
               break label$17;
              default:
               break label$23;
              };
             };
             i64toi32_i32$0 = $7$hi;
             i64toi32_i32$0 = i64toi32_i32$0;
             i64toi32_i32$2 = $7;
             i64toi32_i32$1 = 4294967040;
             i64toi32_i32$3 = 4294967295;
             i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
             i64toi32_i32$1 = i64toi32_i32$1;
             $7 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
             $7$hi = i64toi32_i32$1;
             $2 = 125;
             break label$14;
            };
            $3 = 0;
            $2 = $4;
            break label$14;
           };
           $2 = 92;
           $3 = 1;
           break label$14;
          };
          i64toi32_i32$1 = $7$hi;
          i64toi32_i32$1 = i64toi32_i32$1;
          $2 = ($4 >>> (($7 << 2 | 0) & 28 | 0) | 0) & 15 | 0;
          $2 = (wasm2js_i32$0 = $2 | 48 | 0, wasm2js_i32$1 = $2 + 87 | 0, wasm2js_i32$3 = $2 >>> 0 < 10 >>> 0, wasm2js_i32$3 ? wasm2js_i32$0 : wasm2js_i32$1);
          if (($7 | 0) == (0 | 0)) break label$16;
          i64toi32_i32$1 = $7$hi;
          i64toi32_i32$1 = i64toi32_i32$1;
          i64toi32_i32$0 = $7;
          i64toi32_i32$2 = 4294967295;
          i64toi32_i32$3 = 4294967295;
          i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
          i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
          if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0;
          i64toi32_i32$5 = i64toi32_i32$5;
          i64toi32_i32$1 = i64toi32_i32$4;
          i64toi32_i32$0 = 0;
          i64toi32_i32$3 = 4294967295;
          i64toi32_i32$0 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
          $87 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
          $87$hi = i64toi32_i32$0;
          i64toi32_i32$0 = $7$hi;
          i64toi32_i32$0 = i64toi32_i32$0;
          i64toi32_i32$5 = $7;
          i64toi32_i32$1 = 4294967295;
          i64toi32_i32$3 = 0;
          i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
          $89 = i64toi32_i32$5 & i64toi32_i32$3 | 0;
          $89$hi = i64toi32_i32$1;
          i64toi32_i32$1 = $87$hi;
          i64toi32_i32$0 = $87;
          i64toi32_i32$5 = $89$hi;
          i64toi32_i32$3 = $89;
          i64toi32_i32$5 = i64toi32_i32$1 | i64toi32_i32$5 | 0;
          i64toi32_i32$5 = i64toi32_i32$5;
          $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
          $7$hi = i64toi32_i32$5;
          break label$14;
         };
         i64toi32_i32$5 = $7$hi;
         i64toi32_i32$5 = i64toi32_i32$5;
         i64toi32_i32$1 = $7;
         i64toi32_i32$0 = 4294967040;
         i64toi32_i32$3 = 4294967295;
         i64toi32_i32$0 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
         i64toi32_i32$0 = i64toi32_i32$0;
         i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
         i64toi32_i32$1 = 2;
         i64toi32_i32$3 = 0;
         i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
         i64toi32_i32$1 = i64toi32_i32$1;
         $7 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
         $7$hi = i64toi32_i32$1;
         $2 = 123;
         break label$14;
        };
        i64toi32_i32$1 = $7$hi;
        i64toi32_i32$1 = i64toi32_i32$1;
        i64toi32_i32$0 = $7;
        i64toi32_i32$5 = 4294967040;
        i64toi32_i32$3 = 4294967295;
        i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
        i64toi32_i32$5 = i64toi32_i32$5;
        i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
        i64toi32_i32$0 = 3;
        i64toi32_i32$3 = 0;
        i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
        i64toi32_i32$0 = i64toi32_i32$0;
        $7 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
        $7$hi = i64toi32_i32$0;
        $2 = 117;
        break label$14;
       };
       i64toi32_i32$0 = $7$hi;
       i64toi32_i32$0 = i64toi32_i32$0;
       i64toi32_i32$5 = $7;
       i64toi32_i32$1 = 4294967040;
       i64toi32_i32$3 = 4294967295;
       i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
       i64toi32_i32$1 = i64toi32_i32$1;
       i64toi32_i32$0 = i64toi32_i32$5 & i64toi32_i32$3 | 0;
       i64toi32_i32$5 = 4;
       i64toi32_i32$3 = 0;
       i64toi32_i32$5 = i64toi32_i32$1 | i64toi32_i32$5 | 0;
       i64toi32_i32$5 = i64toi32_i32$5;
       $7 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
       $7$hi = i64toi32_i32$5;
       $2 = 92;
       break label$14;
      };
      i64toi32_i32$5 = $7$hi;
      i64toi32_i32$5 = i64toi32_i32$5;
      i64toi32_i32$1 = $7;
      i64toi32_i32$0 = 4294967040;
      i64toi32_i32$3 = 4294967295;
      i64toi32_i32$0 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
      i64toi32_i32$0 = i64toi32_i32$0;
      i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
      i64toi32_i32$1 = 1;
      i64toi32_i32$3 = 0;
      i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
      i64toi32_i32$1 = i64toi32_i32$1;
      $7 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
      $7$hi = i64toi32_i32$1;
      break label$14;
     };
     wasm2js_i32$3 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
     wasm2js_i32$2 = 39;
     wasm2js_i32$1 = HEAPU32[((HEAPU32[($1 + 28 | 0) >> 2] | 0) + 16 | 0) >> 2] | 0;
     wasm2js_i32$0 = FUNCTION_TABLE_iii[wasm2js_i32$1 & 63](wasm2js_i32$3 | 0, wasm2js_i32$2 | 0) | 0;
     $2 = wasm2js_i32$0;
     break label$1;
    };
    wasm2js_i32$3 = HEAPU32[$0 >> 2] | 0;
    wasm2js_i32$4 = $2;
    wasm2js_i32$2 = HEAPU32[((HEAPU32[$5 >> 2] | 0) + 16 | 0) >> 2] | 0;
    wasm2js_i32$1 = FUNCTION_TABLE_iii[wasm2js_i32$2 & 63](wasm2js_i32$3 | 0, wasm2js_i32$4 | 0) | 0;
    wasm2js_i32$0 = (wasm2js_i32$1 | 0) == (0 | 0);
    if (wasm2js_i32$0) continue label$13;
    break label$13;
   } while (1);
   return 1 | 0;
  };
  return $2 | 0;
 }
 
 function core__str___$LT$impl$u20$str$GT$__trim__hc1d729ddcc9832cb($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $3 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, $4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$4 = 0, i64toi32_i32$3 = 0, $8 = 0, $7 = 0, $11 = 0, $9 = 0, $10 = 0, $26 = 0, $12 = 0, $27 = 0, $112 = 0, $112$hi = 0, $115$hi = 0, $116$hi = 0, $215 = 0, $215$hi = 0, $218$hi = 0, $219$hi = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $3 = $1 + $2 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         if (($2 | 0) == (0 | 0)) break label$7;
         $4 = 0;
         $2 = $1;
         label$8 : do {
          $6 = $2;
          $10 = $4;
          $4 = $2 + 1 | 0;
          label$9 : {
           label$10 : {
            label$11 : {
             $5 = HEAP8[$2 >> 0] | 0;
             if (($5 | 0) < (0 | 0)) break label$11;
             $5 = $5 & 255 | 0;
             break label$10;
            };
            label$12 : {
             label$13 : {
              if (($4 | 0) == ($3 | 0)) break label$13;
              $8 = (HEAPU8[$4 >> 0] | 0) & 63 | 0;
              $2 = $2 + 2 | 0;
              $4 = $2;
              break label$12;
             };
             $8 = 0;
             $2 = $3;
            };
            $9 = $5 & 31 | 0;
            label$14 : {
             $5 = $5 & 255 | 0;
             if ($5 >>> 0 < 224 >>> 0) break label$14;
             label$15 : {
              label$16 : {
               if (($2 | 0) != ($3 | 0)) break label$16;
               $7 = 0;
               $2 = $4;
               $4 = $3;
               break label$15;
              };
              $7 = (HEAPU8[$2 >> 0] | 0) & 63 | 0;
              $2 = $2 + 1 | 0;
              $4 = $2;
             };
             $8 = $7 | ($8 << 6 | 0) | 0;
             label$17 : {
              if ($5 >>> 0 < 240 >>> 0) break label$17;
              $7 = 0;
              $5 = 0;
              label$18 : {
               if (($4 | 0) == ($3 | 0)) break label$18;
               $2 = $4 + 1 | 0;
               $5 = (HEAPU8[$4 >> 0] | 0) & 63 | 0;
              };
              $5 = $8 << 6 | 0 | (($9 << 18 | 0) & 1835008 | 0) | 0 | $5 | 0;
              if (($5 | 0) != (1114112 | 0)) break label$9;
              break label$5;
             };
             $5 = $8 | ($9 << 12 | 0) | 0;
             break label$9;
            };
            $5 = $8 | ($9 << 6 | 0) | 0;
           };
           $2 = $4;
          };
          $4 = ($2 - $6 | 0) + $10 | 0;
          label$19 : {
           if (($5 + 4294967287 | 0) >>> 0 < 5 >>> 0) break label$19;
           if (($5 | 0) == (32 | 0)) break label$19;
           if ($5 >>> 0 < 128 >>> 0) break label$6;
           if ($5 >>> 0 > 12351 >>> 0) break label$6;
           $6 = HEAPU8[(($5 >>> 6 | 0) + 1054672 | 0) >> 0] | 0;
           if ($6 >>> 0 >= 6 >>> 0) break label$4;
           i64toi32_i32$2 = ($6 << 3 | 0) + 1054872 | 0;
           i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
           i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
           $112 = i64toi32_i32$0;
           $112$hi = i64toi32_i32$1;
           i64toi32_i32$1 = 0;
           $115$hi = i64toi32_i32$1;
           i64toi32_i32$1 = 0;
           i64toi32_i32$2 = 1;
           i64toi32_i32$0 = $115$hi;
           i64toi32_i32$3 = $5 & 63 | 0;
           i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
           if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
            i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
            $26 = 0;
           } else {
            i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
            $26 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
           }
           $116$hi = i64toi32_i32$0;
           i64toi32_i32$0 = $112$hi;
           i64toi32_i32$1 = $112;
           i64toi32_i32$2 = $116$hi;
           i64toi32_i32$3 = $26;
           i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
           i64toi32_i32$2 = i64toi32_i32$2;
           if ((i64toi32_i32$1 & i64toi32_i32$3 | 0 | i64toi32_i32$2 | 0 | 0) == (0 | 0)) break label$6;
          };
          if (($3 | 0) != ($2 | 0)) continue label$8;
          break label$8;
         } while (1);
         $7 = 0;
         break label$3;
        };
        $7 = 0;
        $2 = $1;
        $4 = 0;
        break label$3;
       };
       $7 = $4;
       if (($3 | 0) != ($2 | 0)) break label$2;
       break label$1;
      };
      $4 = $10;
      break label$3;
     };
     core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056488 | 0, $6 | 0, 6 | 0);
     abort();
    };
    $10 = 0;
    if (($3 | 0) == ($2 | 0)) break label$1;
   };
   label$20 : do {
    $8 = $3;
    label$21 : {
     label$22 : {
      $6 = $3 + 4294967295 | 0;
      $5 = HEAPU8[$6 >> 0] | 0;
      $9 = ($5 << 24 | 0) >> 24 | 0;
      if (($9 | 0) < (0 | 0)) break label$22;
      $3 = $6;
      break label$21;
     };
     label$23 : {
      label$24 : {
       label$25 : {
        label$26 : {
         label$27 : {
          label$28 : {
           label$29 : {
            label$30 : {
             if (($6 | 0) == ($2 | 0)) break label$30;
             $6 = $3 + 4294967294 | 0;
             $5 = HEAPU8[$6 >> 0] | 0;
             if (($5 & 192 | 0 | 0) != (128 | 0)) break label$29;
             if (($6 | 0) == ($2 | 0)) break label$28;
             $6 = $3 + 4294967293 | 0;
             $11 = HEAPU8[$6 >> 0] | 0;
             if (($11 & 192 | 0 | 0) != (128 | 0)) break label$27;
             if (($6 | 0) == ($2 | 0)) break label$26;
             $3 = $3 + 4294967292 | 0;
             $12 = ((HEAPU8[$3 >> 0] | 0) & 7 | 0) << 6 | 0;
             break label$25;
            };
            $5 = 0;
            $3 = $6;
            break label$23;
           };
           $5 = $5 & 31 | 0;
           $3 = $6;
           break label$23;
          };
          $11 = 0;
          $3 = $6;
          break label$24;
         };
         $11 = $11 & 15 | 0;
         $3 = $6;
         break label$24;
        };
        $12 = 0;
        $3 = $6;
       };
       $11 = $12 | ($11 & 63 | 0) | 0;
      };
      $5 = $11 << 6 | 0 | ($5 & 63 | 0) | 0;
     };
     $5 = $5 << 6 | 0 | ($9 & 63 | 0) | 0;
     if (($5 | 0) == (1114112 | 0)) break label$1;
    };
    label$31 : {
     if (($5 + 4294967287 | 0) >>> 0 < 5 >>> 0) break label$31;
     if (($5 | 0) == (32 | 0)) break label$31;
     label$32 : {
      label$33 : {
       if ($5 >>> 0 < 128 >>> 0) break label$33;
       if ($5 >>> 0 > 12351 >>> 0) break label$33;
       $6 = HEAPU8[(($5 >>> 6 | 0) + 1054672 | 0) >> 0] | 0;
       if ($6 >>> 0 >= 6 >>> 0) break label$32;
       i64toi32_i32$0 = ($6 << 3 | 0) + 1054872 | 0;
       i64toi32_i32$2 = HEAPU32[i64toi32_i32$0 >> 2] | 0;
       i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$0, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
       $215 = i64toi32_i32$2;
       $215$hi = i64toi32_i32$1;
       i64toi32_i32$1 = 0;
       $218$hi = i64toi32_i32$1;
       i64toi32_i32$1 = 0;
       i64toi32_i32$0 = 1;
       i64toi32_i32$2 = $218$hi;
       i64toi32_i32$3 = $5 & 63 | 0;
       i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
       if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
        i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
        $27 = 0;
       } else {
        i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
        $27 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
       }
       $219$hi = i64toi32_i32$2;
       i64toi32_i32$2 = $215$hi;
       i64toi32_i32$1 = $215;
       i64toi32_i32$0 = $219$hi;
       i64toi32_i32$3 = $27;
       i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
       i64toi32_i32$0 = i64toi32_i32$0;
       if (((i64toi32_i32$1 & i64toi32_i32$3 | 0 | i64toi32_i32$0 | 0 | 0) == (0 | 0) | 0) == (0 | 0)) break label$31;
      };
      $7 = ($4 - $2 | 0) + $8 | 0;
      break label$1;
     };
     core__panicking__panic_bounds_check__hc8f8ae7acdebdbe9(1056488 | 0, $6 | 0, 6 | 0);
     abort();
    };
    if (($2 | 0) != ($3 | 0)) continue label$20;
    break label$20;
   } while (1);
  };
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $7 - $10 | 0;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1 + $10 | 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function core__fmt__builders__DebugStruct__finish__h4920cf4e0e2fee43($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0, wasm2js_i32$6 = 0;
  $1 = HEAPU8[($0 + 4 | 0) >> 0] | 0;
  label$1 : {
   if ((HEAPU8[($0 + 5 | 0) >> 0] | 0 | 0) == (0 | 0)) break label$1;
   $2 = $1 & 255 | 0;
   $1 = 1;
   label$2 : {
    if ($2) break label$2;
    $1 = HEAPU32[$0 >> 2] | 0;
    wasm2js_i32$2 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
    wasm2js_i32$3 = (wasm2js_i32$4 = 1051754, wasm2js_i32$5 = 1051756, wasm2js_i32$6 = (HEAPU32[$1 >> 2] | 0) & 4 | 0, wasm2js_i32$6 ? wasm2js_i32$4 : wasm2js_i32$5);
    wasm2js_i32$4 = 2;
    wasm2js_i32$1 = HEAPU32[((HEAPU32[($1 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
    wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0) | 0;
    $1 = wasm2js_i32$0;
   };
   wasm2js_i32$0 = $0 + 4 | 0;
   wasm2js_i32$1 = $1;
   HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
  };
  return ($1 & 255 | 0 | 0) != (0 | 0) | 0;
 }
 
 function core__fmt__ArgumentV1__show_usize__h348788d3c35af9f6($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return core__fmt__num___$LT$impl$u20$core__fmt__Display$u20$for$u20$u32$GT$__fmt__h8b94494cfc7621e3($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function _$LT$core__fmt__Arguments$LT$$u27$_$GT$$u20$as$u20$core__fmt__Display$GT$__fmt__h56949a64798e2b22($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $2 = 0, $3 = 0, $17 = 0, $23 = 0, $26 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  $3 = HEAPU32[($1 + 28 | 0) >> 2] | 0;
  $1 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
  i64toi32_i32$2 = $0 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $17 = i64toi32_i32$0;
  i64toi32_i32$0 = ($2 + 8 | 0) + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $17;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $0 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $23 = i64toi32_i32$1;
  i64toi32_i32$1 = ($2 + 8 | 0) + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $23;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $26 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $26;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $0 = core__fmt__write__h3465a327d1942227($1 | 0, $3 | 0, i64toi32_i32$0 + 8 | 0 | 0) | 0;
  global$0 = i64toi32_i32$0 + 32 | 0;
  return $0 | 0;
 }
 
 function core__fmt__Formatter__pad_integral__h82ce61d67891b79a($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  var $6 = 0, $9 = 0, $8 = 0, $7 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $6 = global$0 - 32 | 0;
  global$0 = $6;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = $3;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = $2;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = 1114112;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  label$1 : {
   label$2 : {
    label$3 : {
     if (($1 | 0) == (0 | 0)) break label$3;
     $7 = HEAPU32[$0 >> 2] | 0;
     if ($7 & 1 | 0) break label$2;
     $8 = $5;
     break label$1;
    };
    wasm2js_i32$0 = $6;
    wasm2js_i32$1 = 45;
    HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
    $8 = $5 + 1 | 0;
    $7 = HEAPU32[$0 >> 2] | 0;
    break label$1;
   };
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = 43;
   HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
   $8 = $5 + 1 | 0;
  };
  $1 = 0;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = 0;
  HEAP8[(wasm2js_i32$0 + 15 | 0) >> 0] = wasm2js_i32$1;
  label$4 : {
   if (($7 & 4 | 0 | 0) == (0 | 0)) break label$4;
   wasm2js_i32$0 = $6;
   wasm2js_i32$1 = 1;
   HEAP8[(wasm2js_i32$0 + 15 | 0) >> 0] = wasm2js_i32$1;
   label$5 : {
    if (($3 | 0) == (0 | 0)) break label$5;
    $1 = 0;
    $9 = $3;
    label$6 : do {
     $1 = $1 + (((HEAPU8[$2 >> 0] | 0) & 192 | 0 | 0) == (128 | 0)) | 0;
     $2 = $2 + 1 | 0;
     $9 = $9 + 4294967295 | 0;
     if ($9) continue label$6;
     break label$6;
    } while (1);
   };
   $8 = ($8 + $3 | 0) - $1 | 0;
  };
  $2 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = $6 + 15 | 0;
  HEAP32[(wasm2js_i32$0 + 20 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = $6 + 8 | 0;
  HEAP32[(wasm2js_i32$0 + 16 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $6;
  wasm2js_i32$1 = $6;
  HEAP32[(wasm2js_i32$0 + 24 | 0) >> 2] = wasm2js_i32$1;
  label$7 : {
   label$8 : {
    label$9 : {
     label$10 : {
      label$11 : {
       label$12 : {
        label$13 : {
         label$14 : {
          label$15 : {
           label$16 : {
            label$17 : {
             label$18 : {
              label$19 : {
               label$20 : {
                label$21 : {
                 label$22 : {
                  if (($2 | 0) != (1 | 0)) break label$22;
                  $2 = HEAPU32[($0 + 12 | 0) >> 2] | 0;
                  if ($2 >>> 0 <= $8 >>> 0) break label$21;
                  if ($7 & 8 | 0) break label$20;
                  $9 = $2 - $8 | 0;
                  $2 = HEAPU8[($0 + 48 | 0) >> 0] | 0;
                  $2 = (wasm2js_i32$0 = 1, wasm2js_i32$1 = $2, wasm2js_i32$2 = ($2 | 0) == (3 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) & 3 | 0;
                  if (($2 | 0) == (0 | 0)) break label$18;
                  if (($2 | 0) == (2 | 0)) break label$19;
                  $3 = 0;
                  break label$17;
                 };
                 if (core__fmt__Formatter__pad_integral___$u7b$$u7b$closure$u7d$$u7d$__hcee37b76d341d0fb($6 + 16 | 0 | 0, $0 | 0) | 0) break label$9;
                 wasm2js_i32$2 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
                 wasm2js_i32$3 = $4;
                 wasm2js_i32$4 = $5;
                 wasm2js_i32$1 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
                 wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0) | 0;
                 $2 = wasm2js_i32$0;
                 break label$7;
                };
                if (core__fmt__Formatter__pad_integral___$u7b$$u7b$closure$u7d$$u7d$__hcee37b76d341d0fb($6 + 16 | 0 | 0, $0 | 0) | 0) break label$9;
                wasm2js_i32$4 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
                wasm2js_i32$3 = $4;
                wasm2js_i32$2 = $5;
                wasm2js_i32$1 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
                wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$4 | 0, wasm2js_i32$3 | 0, wasm2js_i32$2 | 0) | 0;
                $2 = wasm2js_i32$0;
                break label$7;
               };
               wasm2js_i32$0 = $0;
               wasm2js_i32$1 = 1;
               HEAP8[(wasm2js_i32$0 + 48 | 0) >> 0] = wasm2js_i32$1;
               wasm2js_i32$0 = $0;
               wasm2js_i32$1 = 48;
               HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
               if (core__fmt__Formatter__pad_integral___$u7b$$u7b$closure$u7d$$u7d$__hcee37b76d341d0fb($6 + 16 | 0 | 0, $0 | 0) | 0) break label$9;
               $9 = $2 - $8 | 0;
               $2 = HEAPU8[($0 + 48 | 0) >> 0] | 0;
               $2 = (wasm2js_i32$0 = 1, wasm2js_i32$1 = $2, wasm2js_i32$2 = ($2 | 0) == (3 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) & 3 | 0;
               if (($2 | 0) == (0 | 0)) break label$15;
               if (($2 | 0) == (2 | 0)) break label$16;
               $3 = 0;
               break label$14;
              };
              $3 = ($9 + 1 | 0) >>> 1 | 0;
              $9 = $9 >>> 1 | 0;
              break label$17;
             };
             $3 = $9;
             $9 = 0;
            };
            wasm2js_i32$0 = $6;
            wasm2js_i32$1 = 0;
            HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
            label$23 : {
             $2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
             if ($2 >>> 0 > 127 >>> 0) break label$23;
             wasm2js_i32$0 = $6;
             wasm2js_i32$1 = $2;
             HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
             $1 = 1;
             break label$12;
            };
            label$24 : {
             if ($2 >>> 0 > 2047 >>> 0) break label$24;
             wasm2js_i32$0 = $6;
             wasm2js_i32$1 = $2 & 63 | 0 | 128 | 0;
             HEAP8[(wasm2js_i32$0 + 29 | 0) >> 0] = wasm2js_i32$1;
             wasm2js_i32$0 = $6;
             wasm2js_i32$1 = ($2 >>> 6 | 0) & 31 | 0 | 192 | 0;
             HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
             $1 = 2;
             break label$12;
            };
            if ($2 >>> 0 > 65535 >>> 0) break label$13;
            wasm2js_i32$0 = $6;
            wasm2js_i32$1 = $2 & 63 | 0 | 128 | 0;
            HEAP8[(wasm2js_i32$0 + 30 | 0) >> 0] = wasm2js_i32$1;
            wasm2js_i32$0 = $6;
            wasm2js_i32$1 = ($2 >>> 6 | 0) & 63 | 0 | 128 | 0;
            HEAP8[(wasm2js_i32$0 + 29 | 0) >> 0] = wasm2js_i32$1;
            wasm2js_i32$0 = $6;
            wasm2js_i32$1 = ($2 >>> 12 | 0) & 15 | 0 | 224 | 0;
            HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
            $1 = 3;
            break label$12;
           };
           $3 = ($9 + 1 | 0) >>> 1 | 0;
           $9 = $9 >>> 1 | 0;
           break label$14;
          };
          $3 = $9;
          $9 = 0;
         };
         wasm2js_i32$0 = $6;
         wasm2js_i32$1 = 0;
         HEAP32[(wasm2js_i32$0 + 28 | 0) >> 2] = wasm2js_i32$1;
         label$25 : {
          $2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
          if ($2 >>> 0 > 127 >>> 0) break label$25;
          wasm2js_i32$0 = $6;
          wasm2js_i32$1 = $2;
          HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
          $1 = 1;
          break label$10;
         };
         if ($2 >>> 0 > 2047 >>> 0) break label$11;
         wasm2js_i32$0 = $6;
         wasm2js_i32$1 = $2 & 63 | 0 | 128 | 0;
         HEAP8[(wasm2js_i32$0 + 29 | 0) >> 0] = wasm2js_i32$1;
         wasm2js_i32$0 = $6;
         wasm2js_i32$1 = ($2 >>> 6 | 0) & 31 | 0 | 192 | 0;
         HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
         $1 = 2;
         break label$10;
        };
        wasm2js_i32$0 = $6;
        wasm2js_i32$1 = $2 >>> 18 | 0 | 240 | 0;
        HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
        wasm2js_i32$0 = $6;
        wasm2js_i32$1 = $2 & 63 | 0 | 128 | 0;
        HEAP8[(wasm2js_i32$0 + 31 | 0) >> 0] = wasm2js_i32$1;
        wasm2js_i32$0 = $6;
        wasm2js_i32$1 = ($2 >>> 12 | 0) & 63 | 0 | 128 | 0;
        HEAP8[(wasm2js_i32$0 + 29 | 0) >> 0] = wasm2js_i32$1;
        wasm2js_i32$0 = $6;
        wasm2js_i32$1 = ($2 >>> 6 | 0) & 63 | 0 | 128 | 0;
        HEAP8[(wasm2js_i32$0 + 30 | 0) >> 0] = wasm2js_i32$1;
        $1 = 4;
       };
       $2 = 4294967295;
       label$26 : {
        label$27 : do {
         $2 = $2 + 1 | 0;
         if ($2 >>> 0 >= $9 >>> 0) break label$26;
         wasm2js_i32$3 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
         wasm2js_i32$4 = $6 + 28 | 0;
         wasm2js_i32$5 = $1;
         wasm2js_i32$2 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
         wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$2 & 63](wasm2js_i32$3 | 0, wasm2js_i32$4 | 0, wasm2js_i32$5 | 0) | 0;
         wasm2js_i32$0 = (wasm2js_i32$1 | 0) == (0 | 0);
         if (wasm2js_i32$0) continue label$27;
         break label$9;
         break label$27;
        } while (1);
       };
       if (core__fmt__Formatter__pad_integral___$u7b$$u7b$closure$u7d$$u7d$__hcee37b76d341d0fb($6 + 16 | 0 | 0, $0 | 0) | 0) break label$9;
       $9 = $0 + 24 | 0;
       $0 = $0 + 28 | 0;
       wasm2js_i32$2 = HEAPU32[$9 >> 2] | 0;
       wasm2js_i32$5 = $4;
       wasm2js_i32$4 = $5;
       wasm2js_i32$1 = HEAPU32[((HEAPU32[$0 >> 2] | 0) + 12 | 0) >> 2] | 0;
       wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$5 | 0, wasm2js_i32$4 | 0) | 0;
       if (wasm2js_i32$0) break label$9;
       $2 = 4294967295;
       label$28 : do {
        $2 = $2 + 1 | 0;
        if ($2 >>> 0 >= $3 >>> 0) break label$8;
        wasm2js_i32$5 = HEAPU32[$9 >> 2] | 0;
        wasm2js_i32$2 = $6 + 28 | 0;
        wasm2js_i32$3 = $1;
        wasm2js_i32$4 = HEAPU32[((HEAPU32[$0 >> 2] | 0) + 12 | 0) >> 2] | 0;
        wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$4 & 63](wasm2js_i32$5 | 0, wasm2js_i32$2 | 0, wasm2js_i32$3 | 0) | 0;
        wasm2js_i32$0 = (wasm2js_i32$1 | 0) == (0 | 0);
        if (wasm2js_i32$0) continue label$28;
        break label$9;
        break label$28;
       } while (1);
      };
      label$29 : {
       if ($2 >>> 0 > 65535 >>> 0) break label$29;
       wasm2js_i32$0 = $6;
       wasm2js_i32$1 = $2 & 63 | 0 | 128 | 0;
       HEAP8[(wasm2js_i32$0 + 30 | 0) >> 0] = wasm2js_i32$1;
       wasm2js_i32$0 = $6;
       wasm2js_i32$1 = ($2 >>> 6 | 0) & 63 | 0 | 128 | 0;
       HEAP8[(wasm2js_i32$0 + 29 | 0) >> 0] = wasm2js_i32$1;
       wasm2js_i32$0 = $6;
       wasm2js_i32$1 = ($2 >>> 12 | 0) & 15 | 0 | 224 | 0;
       HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
       $1 = 3;
       break label$10;
      };
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = $2 >>> 18 | 0 | 240 | 0;
      HEAP8[(wasm2js_i32$0 + 28 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = $2 & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 31 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = ($2 >>> 12 | 0) & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 29 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $6;
      wasm2js_i32$1 = ($2 >>> 6 | 0) & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 30 | 0) >> 0] = wasm2js_i32$1;
      $1 = 4;
     };
     $2 = 4294967295;
     label$30 : {
      label$31 : do {
       $2 = $2 + 1 | 0;
       if ($2 >>> 0 >= $9 >>> 0) break label$30;
       wasm2js_i32$3 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
       wasm2js_i32$2 = $6 + 28 | 0;
       wasm2js_i32$5 = $1;
       wasm2js_i32$4 = HEAPU32[((HEAPU32[($0 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
       wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$4 & 63](wasm2js_i32$3 | 0, wasm2js_i32$2 | 0, wasm2js_i32$5 | 0) | 0;
       wasm2js_i32$0 = (wasm2js_i32$1 | 0) == (0 | 0);
       if (wasm2js_i32$0) continue label$31;
       break label$9;
       break label$31;
      } while (1);
     };
     $9 = $0 + 24 | 0;
     $0 = $0 + 28 | 0;
     wasm2js_i32$4 = HEAPU32[$9 >> 2] | 0;
     wasm2js_i32$5 = $4;
     wasm2js_i32$2 = $5;
     wasm2js_i32$1 = HEAPU32[((HEAPU32[$0 >> 2] | 0) + 12 | 0) >> 2] | 0;
     wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$4 | 0, wasm2js_i32$5 | 0, wasm2js_i32$2 | 0) | 0;
     if (wasm2js_i32$0) break label$9;
     $2 = 4294967295;
     label$32 : do {
      $2 = $2 + 1 | 0;
      if ($2 >>> 0 >= $3 >>> 0) break label$8;
      wasm2js_i32$5 = HEAPU32[$9 >> 2] | 0;
      wasm2js_i32$4 = $6 + 28 | 0;
      wasm2js_i32$3 = $1;
      wasm2js_i32$2 = HEAPU32[((HEAPU32[$0 >> 2] | 0) + 12 | 0) >> 2] | 0;
      wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$2 & 63](wasm2js_i32$5 | 0, wasm2js_i32$4 | 0, wasm2js_i32$3 | 0) | 0;
      wasm2js_i32$0 = (wasm2js_i32$1 | 0) == (0 | 0);
      if (wasm2js_i32$0) continue label$32;
      break label$32;
     } while (1);
    };
    $2 = 1;
    break label$7;
   };
   $2 = 0;
  };
  global$0 = $6 + 32 | 0;
  return $2 | 0;
 }
 
 function core__fmt__Formatter__pad_integral___$u7b$$u7b$closure$u7d$$u7d$__hcee37b76d341d0fb($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $2 = 0, $6 = 0, $4 = 0, $5 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  label$1 : {
   label$2 : {
    $3 = HEAPU32[(HEAPU32[$0 >> 2] | 0) >> 2] | 0;
    if (($3 | 0) == (1114112 | 0)) break label$2;
    $4 = HEAPU32[($1 + 28 | 0) >> 2] | 0;
    $5 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
    wasm2js_i32$0 = $2;
    wasm2js_i32$1 = 0;
    HEAP32[(wasm2js_i32$0 + 12 | 0) >> 2] = wasm2js_i32$1;
    label$3 : {
     label$4 : {
      if ($3 >>> 0 > 127 >>> 0) break label$4;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $3;
      HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
      $6 = 1;
      break label$3;
     };
     label$5 : {
      if ($3 >>> 0 > 2047 >>> 0) break label$5;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $3 & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = ($3 >>> 6 | 0) & 31 | 0 | 192 | 0;
      HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
      $6 = 2;
      break label$3;
     };
     label$6 : {
      if ($3 >>> 0 > 65535 >>> 0) break label$6;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = $3 & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = ($3 >>> 6 | 0) & 63 | 0 | 128 | 0;
      HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
      wasm2js_i32$0 = $2;
      wasm2js_i32$1 = ($3 >>> 12 | 0) & 15 | 0 | 224 | 0;
      HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
      $6 = 3;
      break label$3;
     };
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3 >>> 18 | 0 | 240 | 0;
     HEAP8[(wasm2js_i32$0 + 12 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = $3 & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 15 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($3 >>> 12 | 0) & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 13 | 0) >> 0] = wasm2js_i32$1;
     wasm2js_i32$0 = $2;
     wasm2js_i32$1 = ($3 >>> 6 | 0) & 63 | 0 | 128 | 0;
     HEAP8[(wasm2js_i32$0 + 14 | 0) >> 0] = wasm2js_i32$1;
     $6 = 4;
    };
    $3 = 1;
    wasm2js_i32$2 = $5;
    wasm2js_i32$3 = $2 + 12 | 0;
    wasm2js_i32$4 = $6;
    wasm2js_i32$1 = HEAPU32[($4 + 12 | 0) >> 2] | 0;
    wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0) | 0;
    if (wasm2js_i32$0) break label$1;
   };
   label$7 : {
    if ((HEAPU8[(HEAPU32[($0 + 4 | 0) >> 2] | 0) >> 0] | 0 | 0) == (0 | 0)) break label$7;
    $0 = HEAPU32[($0 + 8 | 0) >> 2] | 0;
    wasm2js_i32$4 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
    wasm2js_i32$3 = HEAPU32[$0 >> 2] | 0;
    wasm2js_i32$2 = HEAPU32[($0 + 4 | 0) >> 2] | 0;
    wasm2js_i32$1 = HEAPU32[((HEAPU32[($1 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
    wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$4 | 0, wasm2js_i32$3 | 0, wasm2js_i32$2 | 0) | 0;
    $3 = wasm2js_i32$0;
    break label$1;
   };
   $3 = 0;
  };
  global$0 = $2 + 16 | 0;
  return $3 | 0;
 }
 
 function core__fmt__Formatter__write_fmt__h706c41653795aaba($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $2 = 0, $3 = 0, $17 = 0, $23 = 0, $26 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 32 | 0;
  global$0 = $2;
  $3 = HEAPU32[($0 + 28 | 0) >> 2] | 0;
  $0 = HEAPU32[($0 + 24 | 0) >> 2] | 0;
  i64toi32_i32$2 = $1 + 16 | 0;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $17 = i64toi32_i32$0;
  i64toi32_i32$0 = ($2 + 8 | 0) + 16 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $17;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1 + 8 | 0;
  i64toi32_i32$1 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $23 = i64toi32_i32$1;
  i64toi32_i32$1 = ($2 + 8 | 0) + 8 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = $23;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$1;
  wasm2js_i32$1 = i64toi32_i32$0;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAPU32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = i64toi32_i32$2, HEAPU8[(wasm2js_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
  $26 = i64toi32_i32$0;
  i64toi32_i32$0 = $2;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $26;
  HEAP32[(wasm2js_i32$0 + 8 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 12 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 13 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 14 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 15 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  $1 = core__fmt__write__h3465a327d1942227($0 | 0, $3 | 0, i64toi32_i32$0 + 8 | 0 | 0) | 0;
  global$0 = i64toi32_i32$0 + 32 | 0;
  return $1 | 0;
 }
 
 function core__fmt__Formatter__debug_lower_hex__he7dcfa57ef19a030($0) {
  $0 = $0 | 0;
  return ((HEAPU8[$0 >> 0] | 0) & 16 | 0) >>> 4 | 0 | 0;
 }
 
 function core__fmt__Formatter__debug_upper_hex__hacec1d6fda388360($0) {
  $0 = $0 | 0;
  return ((HEAPU8[$0 >> 0] | 0) & 32 | 0) >>> 5 | 0 | 0;
 }
 
 function core__fmt__Formatter__debug_struct__h99bead24adeef970($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$3 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
  wasm2js_i32$4 = $2;
  wasm2js_i32$5 = $3;
  wasm2js_i32$2 = HEAPU32[((HEAPU32[($1 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
  wasm2js_i32$1 = FUNCTION_TABLE_iiii[wasm2js_i32$2 & 63](wasm2js_i32$3 | 0, wasm2js_i32$4 | 0, wasm2js_i32$5 | 0) | 0;
  HEAP8[(wasm2js_i32$0 + 4 | 0) >> 0] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = 0;
  HEAP8[(wasm2js_i32$0 + 5 | 0) >> 0] = wasm2js_i32$1;
 }
 
 function _$LT$str$u20$as$u20$core__fmt__Display$GT$__fmt__hbbfce271ab05a0ce($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  return core__fmt__Formatter__pad__h3590797d97915edc($2 | 0, $0 | 0, $1 | 0) | 0 | 0;
 }
 
 function core__unicode__printable__check__hb45596455e616d2a($0, $1, $2, $3, $4, $5, $6) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  var $10 = 0, $13 = 0, $7 = 0, $11 = 0, $8 = 0, $9 = 0, $12 = 0, wasm2js_i32$0 = 0;
  $7 = 1;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        if (($2 | 0) == (0 | 0)) break label$6;
        $8 = $1 + ($2 << 1 | 0) | 0;
        $9 = ($0 & 65280 | 0) >>> 8 | 0;
        $10 = 0;
        $11 = $0 & 255 | 0;
        label$7 : do {
         $12 = $1 + 2 | 0;
         $2 = HEAPU8[($1 + 1 | 0) >> 0] | 0;
         $13 = $10 + $2 | 0;
         label$8 : {
          label$9 : {
           $1 = HEAPU8[$1 >> 0] | 0;
           if (($1 | 0) != ($9 | 0)) break label$9;
           if ($13 >>> 0 < $10 >>> 0) break label$2;
           if ($13 >>> 0 > $4 >>> 0) break label$1;
           $1 = $3 + $10 | 0;
           label$10 : do {
            if (($2 | 0) == (0 | 0)) break label$8;
            $2 = $2 + 4294967295 | 0;
            $10 = HEAPU8[$1 >> 0] | 0;
            $1 = $1 + 1 | 0;
            if (($10 | 0) != ($11 | 0)) continue label$10;
            break label$5;
            break label$10;
           } while (1);
          };
          if ($1 >>> 0 > $9 >>> 0) break label$6;
          $10 = $13;
          $1 = $12;
          if (($1 | 0) != ($8 | 0)) continue label$7;
          break label$6;
         };
         $10 = $13;
         $1 = $12;
         if (($1 | 0) != ($8 | 0)) continue label$7;
         break label$7;
        } while (1);
       };
       if (($6 | 0) == (0 | 0)) break label$4;
       $11 = $5 + $6 | 0;
       $1 = $0 & 65535 | 0;
       $7 = 1;
       label$11 : do {
        $10 = $5 + 1 | 0;
        label$12 : {
         label$13 : {
          $2 = HEAPU8[$5 >> 0] | 0;
          $13 = ($2 << 24 | 0) >> 24 | 0;
          if (($13 | 0) <= (4294967295 | 0)) break label$13;
          $5 = $10;
          break label$12;
         };
         if (($10 | 0) == ($11 | 0)) break label$3;
         $2 = ($13 & 127 | 0) << 8 | 0 | (HEAPU8[($5 + 1 | 0) >> 0] | 0) | 0;
         $5 = $5 + 2 | 0;
        };
        $1 = $1 - $2 | 0;
        if (($1 | 0) < (0 | 0)) break label$4;
        $7 = $7 ^ 1 | 0;
        if (($5 | 0) != ($11 | 0)) continue label$11;
        break label$4;
        break label$11;
       } while (1);
      };
      $7 = 0;
     };
     return $7 & 1 | 0 | 0;
    };
    core__panicking__panic__h629a30fc6a0298aa(1056072 | 0);
    abort();
   };
   core__slice__slice_index_order_fail__h7296d4883457da71($10 | 0, $13 | 0);
   abort();
  };
  core__slice__slice_index_len_fail__h9aa177f21a8ff28c($13 | 0, $4 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function core__fmt__num___$LT$impl$u20$core__fmt__LowerHex$u20$for$u20$i32$GT$__fmt__h5d296faa10625ed8($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $2 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2 = global$0 - 128 | 0;
  global$0 = $2;
  $3 = HEAPU32[$0 >> 2] | 0;
  $0 = 0;
  label$1 : do {
   $4 = $3 & 15 | 0;
   wasm2js_i32$1 = ($2 + $0 | 0) + 127 | 0;
   wasm2js_i32$2 = (wasm2js_i32$3 = $4 | 48 | 0, wasm2js_i32$4 = $4 + 87 | 0, wasm2js_i32$5 = $4 >>> 0 < 10 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4);
   HEAP8[wasm2js_i32$1 >> 0] = wasm2js_i32$2;
   $0 = $0 + 4294967295 | 0;
   $3 = $3 >>> 4 | 0;
   if ($3) continue label$1;
   break label$1;
  } while (1);
  label$2 : {
   $3 = $0 + 128 | 0;
   if ($3 >>> 0 >= 129 >>> 0) break label$2;
   $0 = core__fmt__Formatter__pad_integral__h82ce61d67891b79a($1 | 0, 1 | 0, 1051752 | 0, 2 | 0, ($2 + $0 | 0) + 128 | 0 | 0, 0 - $0 | 0 | 0) | 0;
   global$0 = $2 + 128 | 0;
   return $0 | 0;
  };
  core__slice__slice_index_order_fail__h7296d4883457da71($3 | 0, 128 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function core__num___$LT$impl$u20$u32$GT$__checked_next_power_of_two__h358ef741956f5039($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  $2 = 0;
  label$1 : {
   if ($1 >>> 0 < 2 >>> 0) break label$1;
   $2 = 4294967295 >>> Math_clz32($1 + 4294967295 | 0) | 0;
  };
  $1 = $2 + 1 | 0;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1;
  HEAP32[(wasm2js_i32$0 + 4 | 0) >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = $0;
  wasm2js_i32$1 = $1 >>> 0 >= $2 >>> 0;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
 }
 
 function core__fmt__num___$LT$impl$u20$core__fmt__UpperHex$u20$for$u20$i32$GT$__fmt__h713ffc7900cfcd55($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $2 = 0, $4 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0;
  $2 = global$0 - 128 | 0;
  global$0 = $2;
  $3 = HEAPU32[$0 >> 2] | 0;
  $0 = 0;
  label$1 : do {
   $4 = $3 & 15 | 0;
   wasm2js_i32$1 = ($2 + $0 | 0) + 127 | 0;
   wasm2js_i32$2 = (wasm2js_i32$3 = $4 | 48 | 0, wasm2js_i32$4 = $4 + 55 | 0, wasm2js_i32$5 = $4 >>> 0 < 10 >>> 0, wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4);
   HEAP8[wasm2js_i32$1 >> 0] = wasm2js_i32$2;
   $0 = $0 + 4294967295 | 0;
   $3 = $3 >>> 4 | 0;
   if ($3) continue label$1;
   break label$1;
  } while (1);
  label$2 : {
   $3 = $0 + 128 | 0;
   if ($3 >>> 0 >= 129 >>> 0) break label$2;
   $0 = core__fmt__Formatter__pad_integral__h82ce61d67891b79a($1 | 0, 1 | 0, 1051752 | 0, 2 | 0, ($2 + $0 | 0) + 128 | 0 | 0, 0 - $0 | 0 | 0) | 0;
   global$0 = $2 + 128 | 0;
   return $0 | 0;
  };
  core__slice__slice_index_order_fail__h7296d4883457da71($3 | 0, 128 | 0);
  wasm2js_i32$0 = abort();
  return wasm2js_i32$0 | 0;
 }
 
 function _$LT$core__fmt__Error$u20$as$u20$core__fmt__Debug$GT$__fmt__h1e68107da4ad1861($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  wasm2js_i32$2 = HEAPU32[($1 + 24 | 0) >> 2] | 0;
  wasm2js_i32$3 = 1055120;
  wasm2js_i32$4 = 5;
  wasm2js_i32$1 = HEAPU32[((HEAPU32[($1 + 28 | 0) >> 2] | 0) + 12 | 0) >> 2] | 0;
  wasm2js_i32$0 = FUNCTION_TABLE_iiii[wasm2js_i32$1 & 63](wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0) | 0;
  return wasm2js_i32$0 | 0;
 }
 
 function core__fmt__num___$LT$impl$u20$core__fmt__LowerHex$u20$for$u20$usize$GT$__fmt__h7696351358bee3f4($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return core__fmt__num___$LT$impl$u20$core__fmt__LowerHex$u20$for$u20$i32$GT$__fmt__h5d296faa10625ed8($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function core__fmt__num___$LT$impl$u20$core__fmt__UpperHex$u20$for$u20$usize$GT$__fmt__h2c1be22b84d9610e($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return core__fmt__num___$LT$impl$u20$core__fmt__UpperHex$u20$for$u20$i32$GT$__fmt__h713ffc7900cfcd55($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function core__num___$LT$impl$u20$usize$GT$__checked_next_power_of_two__h85a3fcfa00e54f41($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $11 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0;
  $2 = global$0 - 16 | 0;
  global$0 = $2;
  core__num___$LT$impl$u20$u32$GT$__checked_next_power_of_two__h358ef741956f5039($2 + 8 | 0 | 0, $1 | 0);
  i64toi32_i32$0 = HEAPU32[($2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = (wasm2js_i32$0 = $2, HEAPU8[(wasm2js_i32$0 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2js_i32$0 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2js_i32$0 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2js_i32$0 + 15 | 0) >> 0] | 0 | 0) << 24);
  $11 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = i64toi32_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = $11;
  HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;
  wasm2js_i32$0 = i64toi32_i32$0;
  wasm2js_i32$1 = i64toi32_i32$1;
  (wasm2js_i32$2 = wasm2js_i32$0, wasm2js_i32$3 = wasm2js_i32$1), ((HEAP8[(wasm2js_i32$2 + 4 | 0) >> 0] = wasm2js_i32$3 & 255 | 0, HEAP8[(wasm2js_i32$2 + 5 | 0) >> 0] = (wasm2js_i32$3 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 6 | 0) >> 0] = (wasm2js_i32$3 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2js_i32$2 + 7 | 0) >> 0] = (wasm2js_i32$3 >>> 24 | 0) & 255 | 0;
  global$0 = $2 + 16 | 0;
 }
 
 function core__fmt__num___$LT$impl$u20$core__fmt__Display$u20$for$u20$usize$GT$__fmt__h355d58492f9a5998($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return core__fmt__num___$LT$impl$u20$core__fmt__Display$u20$for$u20$u32$GT$__fmt__h8b94494cfc7621e3($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function memset($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   if (($2 | 0) == (0 | 0)) break label$1;
   $3 = $0;
   label$2 : do {
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = $1;
    HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
    $3 = $3 + 1 | 0;
    $2 = $2 + 4294967295 | 0;
    if ($2) continue label$2;
    break label$2;
   } while (1);
  };
  return $0 | 0;
 }
 
 function memcpy($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   if (($2 | 0) == (0 | 0)) break label$1;
   $3 = $0;
   label$2 : do {
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU8[$1 >> 0] | 0;
    HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
    $3 = $3 + 1 | 0;
    $1 = $1 + 1 | 0;
    $2 = $2 + 4294967295 | 0;
    if ($2) continue label$2;
    break label$2;
   } while (1);
  };
  return $0 | 0;
 }
 
 function memmove($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;
  label$1 : {
   label$2 : {
    if ($1 >>> 0 >= $0 >>> 0) break label$2;
    if (($2 | 0) == (0 | 0)) break label$1;
    label$3 : do {
     wasm2js_i32$0 = ($0 + $2 | 0) + 4294967295 | 0;
     wasm2js_i32$1 = HEAPU8[(($1 + $2 | 0) + 4294967295 | 0) >> 0] | 0;
     HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
     $2 = $2 + 4294967295 | 0;
     if ($2) continue label$3;
     break label$1;
     break label$3;
    } while (1);
   };
   if (($2 | 0) == (0 | 0)) break label$1;
   $3 = $0;
   label$4 : do {
    wasm2js_i32$0 = $3;
    wasm2js_i32$1 = HEAPU8[$1 >> 0] | 0;
    HEAP8[wasm2js_i32$0 >> 0] = wasm2js_i32$1;
    $1 = $1 + 1 | 0;
    $3 = $3 + 1 | 0;
    $2 = $2 + 4294967295 | 0;
    if ($2) continue label$4;
    break label$4;
   } while (1);
  };
  return $0 | 0;
 }
 
 function memcmp($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0, $5 = 0;
  label$1 : {
   label$2 : {
    if (($2 | 0) == (0 | 0)) break label$2;
    $3 = 0;
    label$3 : do {
     $4 = HEAPU8[($0 + $3 | 0) >> 0] | 0;
     $5 = HEAPU8[($1 + $3 | 0) >> 0] | 0;
     if (($4 | 0) != ($5 | 0)) break label$1;
     $3 = $3 + 1 | 0;
     if ($3 >>> 0 < $2 >>> 0) continue label$3;
     break label$3;
    } while (1);
    return 0 | 0;
   };
   return 0 | 0;
  };
  return $4 - $5 | 0 | 0;
 }
 
 function _ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE(var$0, var$0$hi, var$1, var$1$hi) {
  var$0 = var$0 | 0;
  var$0$hi = var$0$hi | 0;
  var$1 = var$1 | 0;
  var$1$hi = var$1$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, var$2 = 0, i64toi32_i32$3 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $21 = 0, $22 = 0, var$6 = 0, $24 = 0, $17 = 0, $18 = 0, $23 = 0, $29 = 0, $45 = 0, $56$hi = 0, $62$hi = 0;
  i64toi32_i32$0 = var$1$hi;
  i64toi32_i32$0 = i64toi32_i32$0;
  var$2 = var$1;
  var$4 = var$2 >>> 16 | 0;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$0 = i64toi32_i32$0;
  var$3 = var$0;
  var$5 = var$3 >>> 16 | 0;
  $17 = Math_imul(var$4, var$5);
  $18 = var$2;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$2 = var$3;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = 0;
   $21 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   $21 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
  }
  i64toi32_i32$1 = i64toi32_i32$1;
  $23 = $17 + Math_imul($18, $21) | 0;
  i64toi32_i32$1 = var$1$hi;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$0 = var$1;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = 0;
   $22 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   $22 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
  }
  i64toi32_i32$2 = i64toi32_i32$2;
  $29 = $23 + Math_imul($22, var$3) | 0;
  var$2 = var$2 & 65535 | 0;
  var$3 = var$3 & 65535 | 0;
  var$6 = Math_imul(var$2, var$3);
  var$2 = (var$6 >>> 16 | 0) + Math_imul(var$2, var$5) | 0;
  $45 = $29 + (var$2 >>> 16 | 0) | 0;
  var$2 = (var$2 & 65535 | 0) + Math_imul(var$4, var$3) | 0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$2 = i64toi32_i32$2;
  i64toi32_i32$1 = $45 + (var$2 >>> 16 | 0) | 0;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
   $24 = 0;
  } else {
   i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
   $24 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
  }
  $56$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $62$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $56$hi;
  i64toi32_i32$2 = $24;
  i64toi32_i32$1 = $62$hi;
  i64toi32_i32$3 = var$2 << 16 | 0 | (var$6 & 65535 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$2 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
  return i64toi32_i32$2 | 0;
 }
 
 function __wasm_ctz_i32(var$0) {
  var$0 = var$0 | 0;
  if (var$0) return 31 - Math_clz32((var$0 + 4294967295 | 0) ^ var$0 | 0) | 0 | 0;
  return 32 | 0;
 }
 
 function __wasm_i64_mul(var$0, var$0$hi, var$1, var$1$hi) {
  var$0 = var$0 | 0;
  var$0$hi = var$0$hi | 0;
  var$1 = var$1 | 0;
  var$1$hi = var$1$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$0 = var$1$hi;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$1 = var$1$hi;
  i64toi32_i32$1 = _ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE(var$0 | 0, i64toi32_i32$0 | 0, var$1 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$0;
  return i64toi32_i32$1 | 0;
 }
 
 function __wasm_rotl_i32(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0;
  var$2 = var$1 & 31 | 0;
  var$1 = (0 - var$1 | 0) & 31 | 0;
  return ((4294967295 >>> var$2 | 0) & var$0 | 0) << var$2 | 0 | (((4294967295 << var$1 | 0) & var$0 | 0) >>> var$1 | 0) | 0 | 0;
 }
 
 function __wasm_rotl_i64(var$0, var$0$hi, var$1, var$1$hi) {
  var$0 = var$0 | 0;
  var$0$hi = var$0$hi | 0;
  var$1 = var$1 | 0;
  var$1$hi = var$1$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, var$2$hi = 0, var$2 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $6$hi = 0, $8$hi = 0, $10 = 0, $10$hi = 0, $15$hi = 0, $17$hi = 0, $19$hi = 0;
  i64toi32_i32$0 = var$1$hi;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$2 = var$1;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 63;
  i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  var$2 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
  var$2$hi = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$1 = 4294967295;
  i64toi32_i32$0 = 4294967295;
  i64toi32_i32$2 = var$2$hi;
  i64toi32_i32$3 = var$2;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = 0;
   $19 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   $19 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
  }
  $6$hi = i64toi32_i32$2;
  i64toi32_i32$2 = var$0$hi;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$1 = $19;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$3 = var$0;
  i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
  $8$hi = i64toi32_i32$0;
  i64toi32_i32$0 = var$2$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
  i64toi32_i32$1 = var$2$hi;
  i64toi32_i32$3 = var$2;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
   $20 = 0;
  } else {
   i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
   $20 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
  }
  $10 = $20;
  $10$hi = i64toi32_i32$1;
  i64toi32_i32$1 = var$1$hi;
  i64toi32_i32$1 = 0;
  i64toi32_i32$0 = 0;
  i64toi32_i32$2 = var$1$hi;
  i64toi32_i32$3 = var$1;
  i64toi32_i32$4 = i64toi32_i32$0 - i64toi32_i32$3 | 0;
  i64toi32_i32$5 = (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) + i64toi32_i32$2 | 0;
  i64toi32_i32$5 = i64toi32_i32$1 - i64toi32_i32$5 | 0;
  i64toi32_i32$5 = i64toi32_i32$5;
  i64toi32_i32$1 = i64toi32_i32$4;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 63;
  i64toi32_i32$0 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
  i64toi32_i32$0 = i64toi32_i32$0;
  var$1 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
  var$1$hi = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$0;
  i64toi32_i32$0 = 4294967295;
  i64toi32_i32$5 = 4294967295;
  i64toi32_i32$1 = var$1$hi;
  i64toi32_i32$3 = var$1;
  i64toi32_i32$2 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = i64toi32_i32$5 << i64toi32_i32$2 | 0;
   $21 = 0;
  } else {
   i64toi32_i32$1 = ((1 << i64toi32_i32$2 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$2 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$2 | 0) | 0;
   $21 = i64toi32_i32$5 << i64toi32_i32$2 | 0;
  }
  $15$hi = i64toi32_i32$1;
  i64toi32_i32$1 = var$0$hi;
  i64toi32_i32$1 = $15$hi;
  i64toi32_i32$0 = $21;
  i64toi32_i32$5 = var$0$hi;
  i64toi32_i32$3 = var$0;
  i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
  $17$hi = i64toi32_i32$5;
  i64toi32_i32$5 = var$1$hi;
  i64toi32_i32$5 = $17$hi;
  i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
  i64toi32_i32$0 = var$1$hi;
  i64toi32_i32$3 = var$1;
  i64toi32_i32$2 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = 0;
   $22 = i64toi32_i32$5 >>> i64toi32_i32$2 | 0;
  } else {
   i64toi32_i32$0 = i64toi32_i32$5 >>> i64toi32_i32$2 | 0;
   $22 = (((1 << i64toi32_i32$2 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$2 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$2 | 0) | 0;
  }
  $19$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $10$hi;
  i64toi32_i32$5 = $10;
  i64toi32_i32$1 = $19$hi;
  i64toi32_i32$3 = $22;
  i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
  i64toi32_i32$1 = i64toi32_i32$1;
  i64toi32_i32$5 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
  return i64toi32_i32$5 | 0;
 }
 
 var FUNCTION_TABLE_i = [std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7, std__collections__hash__map__RandomState__new__KEYS____getit__h40259d3ae8df6eb7];
 var FUNCTION_TABLE_ii = [_$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__h7338f2d81cd2266f, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__h54c4adee2b5a148a, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__h902fd08508e87e03, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hbab2a5b3867d9af8, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2, _$LT$T$u20$as$u20$core__any__Any$GT$__get_type_id__hb4c6bb7809672af2];
 var FUNCTION_TABLE_iii = [_$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h23452ccb2e1fc734, _$LT$$RF$T$u20$as$u20$core__fmt__Debug$GT$__fmt__hbcde3c8fdb65fb50, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$alloc__string__String$u20$as$u20$core__fmt__Display$GT$__fmt__h7d9f2d3d6f323d40, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_char__hd03664a76d739ae6, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_fmt__h110b0b685eafbf41, _$LT$core__fmt__Error$u20$as$u20$core__fmt__Debug$GT$__fmt__h1e68107da4ad1861, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__hffe86f286348b6f2, _$LT$core__fmt__Arguments$LT$$u27$_$GT$$u20$as$u20$core__fmt__Display$GT$__fmt__h56949a64798e2b22, _$LT$std__thread__local__AccessError$u20$as$u20$core__fmt__Debug$GT$__fmt__h26e62422f259761f, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h6e9897e619391774, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_char__h2cf5866e116e8135, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_fmt__hb19c728ee20ec5c2, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, core__fmt__num___$LT$impl$u20$core__fmt__Display$u20$for$u20$u32$GT$__fmt__h8b94494cfc7621e3, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h7c804ef4a5006926, _$LT$char$u20$as$u20$core__fmt__Debug$GT$__fmt__h7802b453079faca3, _$LT$core__ops__range__Range$LT$Idx$GT$$u20$as$u20$core__fmt__Debug$GT$__fmt__hbfb5374d68f45cd8, core__fmt__ArgumentV1__show_usize__h348788d3c35af9f6, core__fmt__num___$LT$impl$u20$core__fmt__Debug$u20$for$u20$usize$GT$__fmt__hd3a1cdae2d7391fb, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a, _$LT$$RF$T$u20$as$u20$core__fmt__Display$GT$__fmt__h04e090b91465c68a];
 var FUNCTION_TABLE_iiii = [_$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h6c2e567cc2a6f614, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb, _$LT$core__fmt__Write__write_fmt__Adapter$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core__fmt__Write$GT$__write_str__h641c7b26771a91bb];
 var FUNCTION_TABLE_vi = [core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__h1bb3fe0e45cbb3c8, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__he76d036466373bce, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hd414c6d9d0659554, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, std__collections__hash__map__RandomState__new__KEYS____init__h0db74402949e4dc0, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__ha736cccfe20f82a6, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__h099e4fd5ca944d37, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__h373c58c599ae4ce6, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__h12f11a937b27e43c, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__h00a599f8541d9ef0, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249, core__ptr__drop_in_place__hc4a8ade37b42b249];
 var FUNCTION_TABLE_vii = [_$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__get__hfd25fc8dfec9b2b9, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$wasm_bindgen__convert__GlobalStack$u20$as$u20$wasm_bindgen__convert__traits__Stack$GT$__push__h2b9a21a23b110842, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, std__alloc__default_alloc_error_hook__hed7c9e5f3e0de885, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__continue_panic_fmt__PanicPayload$LT$$u27$a$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h246cd90675910d9f, _$LT$std__panicking__continue_panic_fmt__PanicPayload$LT$$u27$a$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__get__h6f2dc01b942731bd, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8, _$LT$std__panicking__begin_panic__PanicPayload$LT$A$GT$$u20$as$u20$core__panic__BoxMeUp$GT$__box_me_up__h05e93582ac3e7cf8];
 function __wasm_grow_memory(pagesToAdd) {
  pagesToAdd = pagesToAdd | 0;
  var oldPages = __wasm_current_memory() | 0;
  var newPages = oldPages + pagesToAdd | 0;
  if ((oldPages < newPages) && (newPages < 65536)) {
   var newBuffer = new ArrayBuffer(Math_imul(newPages, 65536));
   var newHEAP8 = new global.Int8Array(newBuffer);
   newHEAP8.set(HEAP8);
   HEAP8 = newHEAP8;
   HEAP16 = new global.Int16Array(newBuffer);
   HEAP32 = new global.Int32Array(newBuffer);
   HEAPU8 = new global.Uint8Array(newBuffer);
   HEAPU16 = new global.Uint16Array(newBuffer);
   HEAPU32 = new global.Uint32Array(newBuffer);
   HEAPF32 = new global.Float32Array(newBuffer);
   HEAPF64 = new global.Float64Array(newBuffer);
   buffer = newBuffer;
  }
  return oldPages;
 }
 
 function __wasm_current_memory() {
  return buffer.byteLength / 65536 | 0;
 }
 
 return {
  memory: Object.create(Object.prototype, {
   grow: {
    value: __wasm_grow_memory
   }, 
   buffer: {
    get: function () {
     return buffer;
    }
    
   }
  }), 
  __wbindgen_global_argument_ptr: __wbindgen_global_argument_ptr, 
  candidate_keys: candidate_keys, 
  __wbindgen_malloc: __wbindgen_malloc, 
  __wbindgen_free: __wbindgen_free
 };
}

const memasmFunc = new ArrayBuffer(1114112);
const assignasmFunc = (
      function(mem) {
        const _mem = new Uint8Array(mem);
        return function(offset, s) {
          if (typeof Buffer === 'undefined') {
            const bytes = atob(s);
            for (let i = 0; i < bytes.length; i++)
              _mem[offset + i] = bytes.charCodeAt(i);
          } else {
            const bytes = Buffer.from(s, 'base64');
            for (let i = 0; i < bytes.length; i++)
              _mem[offset + i] = bytes[i];
          }
        }
      }
    )(memasmFunc);
assignasmFunc(1048576, "");
assignasmFunc(1055128, "AAAQACsAAAArABAAEQAAAGMBAAAVAAAAPAAQACAAAADQAgAAMgAAADwAEAAgAAAAzwIAADoAAAA8ABAAIAAAAPsCAAAyAAAAPAAQACAAAAD6AgAAOgAAAJUAEAAAAAAAAgAAAAgAAAAEAAAAAwAAAAQAAAAFAAAACAAAAAQAAAAGAAAABwAAAAAAAAABAAAACAAAACoBEAAuAAAAWAEQAGMAAAAcAAAADQAAAAkAAAAEAAAABAAAAAoAAAC8ARAAAAAAAIACEAA5AAAAIAIQAFIAAABEAgAAEwAAAA0AAAAOAAAAuQIQAB4AAACSAwAACQAAALkCEAAeAAAAkwMAAAkAAABMAxAALQAAAHkDEAAMAAAAhQMQAAEAAAC5AhAAHgAAAMEDAAAJAAAAuQIQAB4AAAAbBAAAFQAAALkCEAAeAAAAWAMAADIAAAC5AhAAHgAAAFcDAAA6AAAAEAQQAEoAAACHBAAAIQAAABAEEABKAAAAkwQAABQAAAAQBBAASgAAAJMEAAAhAAAAYAQQAEgAAACQCQAACgAAAKgEEAAAAAAA0QQQACgAAAD5BBAAIQAAAM8JAAAjAAAA0QQQACgAAAD5BBAAIQAAAKcAAAAsAAAAGgUQACgAAABCBRAAEwAAAPgBAAAeAAAAVQUQABwAAABxBRAAFAAAAO8DAAANAAAAugUQACoAAADkBRAADwAAALAAAAAFAAAAAAYQAEoAAACHBAAAIQAAAAAGEABKAAAAkwQAABQAAAAABhAASgAAAJMEAAAhAAAAEAAAAAQAAAAEAAAAEQAAABIAAAATAAAASgYQAAAAAABKBhAAAgAAAJQGEAARAAAA8QMAAAUAAAClBhAALQAAANIGEAAMAAAA3gYQAAMAAADhBhAANAAAAIQHEAAUAAAApgcAAAkAAACYBxAAJAAAALwHEAATAAAASwIAAAkAAADPBxAAKAAAALwHEAATAAAA+AEAAB4AAAD3BxAAAAAAAPcHEAACAAAARAgQABEAAADxAwAABQAAAFgIEAArAAAAgwgQABEAAABjAQAAFQAAABoAAAAEAAAABAAAABsAAAAcAAAAHQAAABoAAAAAAAAAAQAAAB4AAAAfAAAAEAAAAAQAAAAgAAAAIQAAACIAAAAMAAAABAAAACMAAAC7CBAAEQAAAKgIEAATAAAA9QIAAAUAAADMCBAAAAAAADwJEAACAAAAKgAAAAAAAAABAAAAKwAAAKwJEAAgAAAAzAkQABIAAADeCRAAKwAAAAkKEAARAAAAYwEAABUAAADMCBAAAAAAAAkKEAARAAAA8AMAAAUAAAAuChAABgAAADQKEAAiAAAAGgoQABQAAAAeCQAABQAAAFYKEAAWAAAAbAoQAA0AAAAaChAAFAAAACQJAAAFAAAAgAoQABYAAAATBQAAFQAAAIAKEAAWAAAAQwUAABUAAACAChAAFgAAAEQFAAAVAAAArQoQAAsAAAC4ChAAFgAAAMwIEAABAAAAlgoQABIAAAAuCAAACQAAAM4KEAAOAAAA3AoQAAQAAADgChAAEAAAAMwIEAABAAAAlgoQABIAAAAyCAAABQAAAK0KEAALAAAAgAsQACYAAACmCxAACAAAAK4LEAAGAAAAzAgQAAEAAACWChAAEgAAAD8IAAAFAAAAcAwQABIAAABKBAAAKAAAAHAMEAASAAAAVgQAABEAAACQDBAAHAAAADEAAAAZAAAAkAwQABwAAAAyAAAAIAAAAJAMEAAcAAAANAAAABkAAACQDBAAHAAAADUAAAAYAAAAkAwQABwAAAA2AAAAIAAAAJAMEAAcAAAARAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/v////+/tgAAAAAAAAAAAP8HAAAAAAD4//8AAAEAAAAAAAAAAAAAAMCfnz0AAAAAAgAAAP///wcAAAAAAAAAAAAAwP8BAAAAAAAA+A8gyBEQAEoAAAAYFBAAAAIAABgWEAA3AAAAAAECAwQFBgcICQgKCwwNDg8QERITFAIVFhcYGRobHB0eHyACAgICAgICAgICIQICAgICAgICAgICAgICIiMkJSYCJwIoAgICKSorAiwtLi8wAgIxAgICMgICAgICAgICMwICNAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNQI2AjcCAgICAgICAjgCOQICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICOjs8AgICAj0CAj4/QEFCQ0RFRgICAkcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICSAICAgICAgICAgICSQICAgICOwIAAQICAgIDAgICAgQCBQYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC");
assignasmFunc
const retasmFunc = asmFunc({Math,Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,NaN,Infinity}, {abort:function() { throw new Error('abort'); }},memasmFunc);
export const memory = retasmFunc.memory;
export const __wbindgen_global_argument_ptr = retasmFunc.__wbindgen_global_argument_ptr;
export const candidate_keys = retasmFunc.candidate_keys;
export const __wbindgen_malloc = retasmFunc.__wbindgen_malloc;
export const __wbindgen_free = retasmFunc.__wbindgen_free;
